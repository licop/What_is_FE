(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{460:function(t,s,r){"use strict";r.r(s);var e=r(27),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"mockserviceworker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mockserviceworker"}},[t._v("#")]),t._v(" MockServiceWorker")]),t._v(" "),r("p",[t._v("在开发前端项目中，大部分需求会涉及 API 数据交互，为了保证项目效率，前端通常需要一个 API 服务器来确保前端开发进度，这就是所谓的 Mock 服务。网络上有许多类型的 Mock 工具，使用不同的方法解决同一个问题。")]),t._v(" "),r("p",[t._v("主要包括两种类型：")]),t._v(" "),r("ul",[r("li",[t._v("一种是使用服务器语言（如 Node.js、PHP）模拟一个服务器")]),t._v(" "),r("li",[t._v("另一种是使用拦截器拦截请求然后重定向到前端准备好的处理函数。")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.cn/post/7018732383067176991",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mock Service Worker（MSW)"),r("OutboundLink")],1),t._v("，一个功能完善的 API Mock 工具，"),r("strong",[t._v("它可以使用 Service Worker 拦截 HTTP 请求，可以模拟真实的 HTTP 请求")]),t._v("，可以使用浏览器的 DevTools 进行查看，并且是在 Service Worker 级别上工作。")]),t._v(" "),r("p",[r("strong",[t._v("优点总结")])]),t._v(" "),r("ul",[r("li",[t._v("集成于前端，不需要写 node 中间件（比如 express, koa）")]),t._v(" "),r("li",[t._v("语法基本和 express 一致")]),t._v(" "),r("li",[t._v("直接通过 chrome 快速 debugger")]),t._v(" "),r("li",[t._v("即可用于前端开发，也可用于单元测试，只需要写一份 mocker")]),t._v(" "),r("li",[t._v("可在 build 环境使用 mock")]),t._v(" "),r("li",[t._v("不存在跨域问题")])]),t._v(" "),r("p",[r("strong",[t._v("缺点总结")])]),t._v(" "),r("ul",[r("li",[t._v("需要安装和配置, 有时需要搞定环境问题，前期投入时间成本较大")]),t._v(" "),r("li",[t._v("不适用与多人协作，规模较大的项目")])]),t._v(" "),r("h2",{attrs:{id:"什么是-service-worker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是-service-worker"}},[t._v("#")]),t._v(" 什么是 Service Worker")]),t._v(" "),r("p",[t._v("MSW 依赖于 "),r("code",[t._v("Service Worker")]),t._v("，"),r("code",[t._v("Service Worker")]),t._v(" 本质上是浏览器在后台运行的脚本，它是完全独立于它正在处理或服务的网页。它们充当了 web 应用程序、浏览器和网络之间的代理服务器，目的是为前端应用程序创建一个良好的离线体验，关于 Service Worker 的更多内容可以参考"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Service Worker 的 MDN 文档"),r("OutboundLink")],1),t._v("。而 MSW 就是建立在 "),r("code",[t._v("Service Worker")]),t._v(" 的缓存机制之上的。")]),t._v(" "),r("h2",{attrs:{id:"使用-mockserviceworker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-mockserviceworker"}},[t._v("#")]),t._v(" 使用 MockServiceWorker")]),t._v(" "),r("p",[t._v("安装细节和使用可以参考官网，以下是简单的使用代码")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" setupWorker"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rest "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msw"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" worker "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("setupWorker")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  rest"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" username "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" req"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("res")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        username"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        firstName"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("p",[t._v("具体使用方法可以参考我的"),r("a",{attrs:{href:""}},[t._v("redux-react-post")]),t._v("项目的 "),r("code",[t._v("server.js")]),t._v("文件")]),t._v(" "),r("p",[t._v("项目中还使用了 "),r("a",{attrs:{href:"https://github.com/mswjs/data",target:"_blank",rel:"noopener noreferrer"}},[t._v("@mswjs/data"),r("OutboundLink")],1),t._v("模拟创建数据模型的结构和关系，并可以像查询数据库一样获取数据")]),t._v(" "),r("p",[t._v("项目中还使用了 "),r("a",{attrs:{href:"https://github.com/faker-js/faker",target:"_blank",rel:"noopener noreferrer"}},[t._v("fakerjs"),r("OutboundLink")],1),t._v(" 生成随机数据，来完善丰富我们的数据结构。")])])}),[],!1,null,null,null);s.default=a.exports}}]);