(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{386:function(t,s,e){"use strict";e.r(s);var a=e(27),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"jest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jest"}},[t._v("#")]),t._v(" Jest")]),t._v(" "),e("p",[e("code",[t._v("Jest")]),t._v(" 是 Facebook 出品的一个测试框架，相对其他测试框架，其一大特点就是就是内置了常用的测试工具，比如自带断言、测试覆盖率工具，实现了开箱即用。")]),t._v(" "),e("p",[t._v("而作为一个面向前端的测试框架， "),e("code",[t._v("Jest")]),t._v(" 可以利用其特有的快照测试功能，通过比对 UI 代码生成的快照文件，实现对 "),e("code",[t._v("React")]),t._v(" 等常见框架的自动测试。"),e("code",[t._v("Jest")]),t._v("是 React 官方推荐的测试框架，同时被集成在官方脚手架"),e("code",[t._v("create-react-app")]),t._v("中作为默认的测试框架。")]),t._v(" "),e("p",[t._v("本文只是简单介绍"),e("code",[t._v("Jest")]),t._v("和整理个人使用中出现的一些问题的解决方法，想要了解更多参考"),e("a",{attrs:{href:"https://jestjs.io/docs/en/getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest 官方文档"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("p",[t._v("使用 yarn 安装 Jest︰")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("yarn add --dev jest\n")])])]),e("p",[t._v("或 npm：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install --save-dev jest\n")])])]),e("p",[t._v("将下面的配置部分添加到你的 "),e("code",[t._v("package.json")]),t._v(" 里面：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('{\n  "scripts": {\n    "test": "jest"\n  }\n}\n')])])]),e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),e("p",[t._v("以下是"),e("code",[t._v("Jest")]),t._v("一些常用的配置，可以定义在"),e("code",[t._v("package.json")]),t._v("中，也可以新建文件"),e("code",[t._v("jest.config.js")]),t._v("or "),e("code",[t._v("jest.config.ts")]),t._v("配置文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"jest": {\n  "transform": {\n    ".(ts|tsx)": "ts-jest"\n  },\n  "testEnvironment": "jsdom",\n  "testRegex": "/test/.*\\\\.(test|spec)\\\\.(ts)$",\n  "moduleFileExtensions": [\n    "ts",\n    "tsx",\n    "js"\n  ],\n  "coverageThreshold": {\n    "global": {\n      "branches": 90,\n      "functions": 95,\n      "lines": 95,\n      "statements": 95\n    }\n  },\n  "collectCoverageFrom": [\n    "src/*.{js,ts}",\n    "src/**/*.{js,ts}"\n  ],\n  "setupFilesAfterEnv": [\n    "<rootDir>/test/boot.ts"\n  ]\n},\n')])])]),e("p",[t._v("接下来，我们就分别来看这几个配置的含义。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration#transform-object-string-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("transform"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("简单地说就是一种转换器配置，比如我们这里的")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"transform"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('".(ts|tsx)"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ts-jest"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("p",[t._v("表示的就是使用 "),e("code",[t._v("ts-jest")]),t._v(" 工具把 "),e("code",[t._v(".ts")]),t._v(" 和 "),e("code",[t._v(".tsx")]),t._v(" 文件内容转换成 JavaScript，因为我们也是使用 TypeScript 编写测试代码，而 Node.js 是不能直接支持 TypeScript 的，所以需要配置转换器。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration#testenvironment-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("testEnvironment"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("测试环境。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"testEnvironment"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jsdom"')]),t._v("\n")])])]),e("p",[t._v("表示它是一个类浏览器的测试环境，我们可以使用浏览器环境中的一些 API。当然也可以设置为"),e("code",[t._v("node")]),t._v(", 来使用 "),e("code",[t._v("node")]),t._v(" 的一些 API")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration#testregex-string-array-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("testRegex"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("要测试文件的正则表达式。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"testRegex"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test/.*\\\\.(test|spec)\\\\.(ts)$"')]),t._v("\n")])])]),e("p",[t._v("表示 "),e("code",[t._v("test")]),t._v(" 目录下所有以 "),e("code",[t._v(".test.ts")]),t._v(" 和 "),e("code",[t._v(".spec.ts")]),t._v(" 的文件都需要跑测试。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration#modulefileextensions-array-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("moduleFileExtensions"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("模块文件扩展名，当你去引入一个模块并没有指定扩展名的时候，它会依次尝试去添加这些扩展名去找你引入的模块文件。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"moduleFileExtensions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsx"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"js"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("表示优先找 "),e("code",[t._v(".ts")]),t._v(" 的模块、然后是 "),e("code",[t._v(".tsx")]),t._v("，最后是 "),e("code",[t._v(".js")]),t._v("。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration#coveragethreshold-object",target:"_blank",rel:"noopener noreferrer"}},[t._v("coverageThreshold"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("测试覆盖率的阈值设定，当我们的测试覆盖率达不到阈值的时候，测试会失败。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coverageThreshold"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"global"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"branches"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"functions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lines"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("表示全局的代码分支覆盖率要达到 "),e("code",[t._v("90%")]),t._v("，方法覆盖率要达到 "),e("code",[t._v("95%")]),t._v("，代码行数覆盖率达到 "),e("code",[t._v("95%")]),t._v("，声明覆盖率达到 "),e("code",[t._v("95%")]),t._v("。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration#collectcoveragefrom-array",target:"_blank",rel:"noopener noreferrer"}},[t._v("collectCoverageFrom"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("收集指定文件的测试覆盖率(即使你没为这些文件编写测试)，它的值为 "),e("a",{attrs:{href:"https://github.com/jonschlinkert/micromatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("glob patterns"),e("OutboundLink")],1),t._v(" 类型。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"collectCoverageFrom"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/*.{js,ts}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/**/*.{js,ts}"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("表示收集 "),e("code",[t._v("src")]),t._v(" 目录以及它的所有子目录中的 "),e("code",[t._v("js")]),t._v(" 和 "),e("code",[t._v("ts")]),t._v(" 文件的测试覆盖率。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration#setupfilesafterenv-array",target:"_blank",rel:"noopener noreferrer"}},[t._v("setupFilesAfterEnv"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("测试框架安装后立即执行的代码文件列表。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"setupFilesAfterEnv"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<rootDir>/test/boot.ts"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("表示每次跑具体测试代码之前会先运行 "),e("code",[t._v("<rootDir>/test/boot.ts")]),t._v(" 中的代码，"),e("code",[t._v("<rootDir>")]),t._v(" 表示当前项目的根目录。")]),t._v(" "),e("p",[t._v("其他关于 Jest 的配置参考"),e("a",{attrs:{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),e("OutboundLink")],1),t._v("做扩展学习。")]),t._v(" "),e("h2",{attrs:{id:"在-jest-中使用-jasmine-插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-jest-中使用-jasmine-插件"}},[t._v("#")]),t._v(" 在 jest 中使用 Jasmine 插件")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://jasmine.github.io/pages/getting_started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jasmine"),e("OutboundLink")],1),t._v(" 是一个 BDD(行为驱动开发)的测试框架，它有很多成熟的插件，比如 "),e("a",{attrs:{href:"https://github.com/jasmine/jasmine-ajax",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("jasmine-ajax")]),e("OutboundLink")],1),t._v("，它会为我们发出的 Ajax 请求根据规范定义一组假的响应，并跟踪我们发出的 Ajax 请求，可以让我们方便的为结果做断言。")]),t._v(" "),e("p",[t._v("其实 Jest 也可以去写插件，但并没有现成的 Ajax 相关的 Jest 插件，但是 Jest 测试中我们仍然可以使用 Jasmine 相关的插件，只需要做一些小小的配置即可。")]),t._v(" "),e("p",[e("code",[t._v("jasmine-ajax")]),t._v(" 依赖 "),e("code",[t._v("jasmine-core")]),t._v("，因此首先我们要安装几个依赖包，"),e("code",[t._v("jasmine-ajax")]),t._v("、"),e("code",[t._v("jasmine-core")]),t._v(" 和 "),e("code",[t._v("@types/jasmine-ajax")]),t._v("。")]),t._v(" "),e("p",[t._v("这个时候我们需要去修改"),e("code",[t._v("setupFilesAfterEnv")]),t._v("属性引用的文件，因为每次跑具体测试代码之前会先运行该文件，我们可以在这里去初始化 "),e("code",[t._v("jasmine-ajax")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" JasmineCore "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jasmine-core"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @ts-ignore")]),t._v("\nglobal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getJasmineRequireObj")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" JasmineCore"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jasmine-ajax"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("这里为了让 "),e("code",[t._v("jasmine-ajax")]),t._v(" 插件运行成功，我们需要手动添加全局的 "),e("code",[t._v("getJasmineRequireObj")]),t._v(" 方法，参考 "),e("a",{attrs:{href:"https://github.com/jasmine/jasmine-ajax/issues/178",target:"_blank",rel:"noopener noreferrer"}},[t._v("issue"),e("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);s.default=n.exports}}]);