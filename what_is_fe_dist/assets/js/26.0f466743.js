(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{391:function(e,t,r){"use strict";r.r(t);var o=r(27),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"编写一个简单的-loader-和-plugin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编写一个简单的-loader-和-plugin"}},[e._v("#")]),e._v(" 编写一个简单的 loader 和 plugin")]),e._v(" "),r("h2",{attrs:{id:"loader-编写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#loader-编写"}},[e._v("#")]),e._v(" loader 编写")]),e._v(" "),r("p",[r("code",[e._v("loader")]),e._v("就是一个函数的 javascript 模块，第一个参数为 webpack 配置里"),r("code",[e._v("rules")]),e._v("匹配的文件内容，可以使用"),r("code",[e._v("loader-utils")]),e._v("获取从配置中传入"),r("code",[e._v("loader")]),e._v("的参数。")]),e._v(" "),r("p",[e._v("以下例子可以将文件里的所有"),r("code",[e._v("console.log")]),e._v("打包变成"),r("code",[e._v("console.error")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("    const loaderUtils = require('loader-utils');\n\n    module.exports = function(source) {\n        const options = loaderUtils.getOptions(this);\n        return source.replace('console.log', 'console.error');\n    }\n\n")])])]),r("p",[e._v("我们可以编写 loader 对想要的文件源代码进行包装，比如添加全局的异常监控，国际化等等")]),e._v(" "),r("p",[e._v("webapck 的 loader 加载资源的过程有点类似于一个工作管道，可以在加载过程中依次使用多个 loader，要求管道工作过后的结果必须是一段 javascript 代码，否则打包的内容会报错。所以一个 loader 返回的结果要么要么是一段 javascript 代码，要么在找个一个其他的 loader 来处理这段结果。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/licop/webpack4.0_learn/tree/master/%E7%BC%96%E5%86%99loader/makeLoader",target:"_blank",rel:"noopener noreferrer"}},[e._v("示例完整的 loader 源码"),r("OutboundLink")],1),e._v(" "),r("a",{attrs:{href:"https://github.com/licop/What_is_FE/tree/master/examples/webpack-demo/11-markdown-loader",target:"_blank",rel:"noopener noreferrer"}},[e._v("编写一个 markdown 文件的 loader"),r("OutboundLink")],1),e._v(" "),r("a",{attrs:{href:"https://webpack.docschina.org/api/loaders/",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多关于 loader 查看"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"plugin-编写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#plugin-编写"}},[e._v("#")]),e._v(" plugin 编写")]),e._v(" "),r("p",[r("code",[e._v("plugin")]),e._v(" 通过钩子机制实现，webpack 工作过程中很多环节，便于 webpack 的扩展几乎给每个环节都埋下了一个钩子(hooks)，我们给每个节点挂载不同的任务，就可以通过"),r("code",[e._v("plugin")]),e._v("扩展 webpack 的能力。与 "),r("code",[e._v("loader")]),e._v(" 是一个函数不同，"),r("code",[e._v("plugin")]),e._v(" 是一个带有 "),r("code",[e._v("apply")]),e._v(" 方法的 "),r("code",[e._v("class")]),e._v(" 类")]),e._v(" "),r("p",[r("code",[e._v("Compiler")]),e._v(" 模块是 "),r("code",[e._v("webpack")]),e._v(" 的主要引擎，它通过 CLI 传递的所有选项， 或者 "),r("code",[e._v("Node API")]),e._v("，创建出一个 "),r("code",[e._v("compilation")]),e._v(" 实例。 它扩展(extend)自 "),r("code",[e._v("Tapable")]),e._v(" 类，用来注册和调用插件。 大多数面向用户的插件会首先在 "),r("code",[e._v("Compiler")]),e._v(" 上注册。")]),e._v(" "),r("p",[r("code",[e._v("plugin")]),e._v("的作用是在 webpack 的某个时刻执行某项功能，通过"),r("code",[e._v("compiler.hooks")]),e._v("来触发某个时刻")]),e._v(" "),r("p",[e._v("以下例子打包之后生成一个版权文件")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("class CopyrightWebpackPlugin {\n\n\tapply(compiler) {\n\n\t\tcompiler.hooks.compile.tap('CopyrightWebpackPlugin', (compilation) => {\n\t\t\tconsole.log('compiler');\n\t\t})\n        // emit是一个钩子，即将往输出目录输出文件时执行\n\t\tcompiler.hooks.emit.tapAsync('CopyrightWebpackPlugin', (compilation, cb) => {\n\t\t\tcompilation.assets['copyright.txt']= {\n\t\t\t\tsource: function() {\n\t\t\t\t\treturn 'copyright by licop'\n\t\t\t\t},\n\t\t\t\tsize: function() {\n\t\t\t\t\treturn 17;\n\t\t\t\t}\n\t\t\t};\n\t\t\tcb();\n\t\t})\n\t}\n\n}\n\n")])])]),r("p",[r("a",{attrs:{href:"https://github.com/licop/webpack4.0_learn/tree/master/%E7%BC%96%E5%86%99plugin/plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("示例完整的 plugin 源码"),r("OutboundLink")],1),e._v(" "),r("a",{attrs:{href:"https://github.com/licop/What_is_FE/tree/master/examples/webpack-demo/16-my-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("编写一个删除注释的插件"),r("OutboundLink")],1),e._v(" "),r("a",{attrs:{href:"https://webpack.docschina.org/api/plugins/",target:"_blank",rel:"noopener noreferrer"}},[e._v("更多关于 plugin 查看"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);