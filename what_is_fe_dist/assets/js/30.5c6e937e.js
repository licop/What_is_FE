(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{396:function(e,s,v){"use strict";v.r(s);var _=v(27),c=Object(_.a)({},(function(){var e=this,s=e.$createElement,v=e._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"关于-cross-env"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关于-cross-env"}},[e._v("#")]),e._v(" 关于 cross-env")]),e._v(" "),v("h2",{attrs:{id:"什么是-process-env"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-process-env"}},[e._v("#")]),e._v(" 什么是 process.env")]),e._v(" "),v("p",[e._v("在 node 中，有全局变量"),v("code",[e._v("process")]),e._v("表示的是当前的 node 进程。"),v("code",[e._v("process.env")]),e._v("包含着关于系统环境的信息。")]),e._v(" "),v("p",[e._v("比如当我们配置"),v("code",[e._v("webpack")]),e._v("的时候经常与遇到"),v("code",[e._v("process.env.NODE_ENV")]),e._v("，但是"),v("code",[e._v("process.env")]),e._v("中并不存在"),v("code",[e._v("NODE_ENV")]),e._v("这个东西。"),v("code",[e._v("NODE_ENV")]),e._v("是用户一个自定义的变量，在 "),v("code",[e._v("webpack")]),e._v(" 中它的用途是判断生产环境或开发环境的依据的。")]),e._v(" "),v("h2",{attrs:{id:"理解-cross-env"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#理解-cross-env"}},[e._v("#")]),e._v(" 理解 cross-env")]),e._v(" "),v("p",[v("code",[e._v("cross-env")]),e._v(" 是运行跨平台设置和使用环境变量的脚本。")]),e._v(" "),v("p",[e._v("当我们使用 "),v("code",[e._v("NODE_ENV = production")]),e._v(" 来设置环境变量的时候，大多数"),v("code",[e._v("windows")]),e._v("命令会提示将会阻塞或者异常，或者，"),v("code",[e._v("windows")]),e._v("不支持"),v("code",[e._v("NODE_ENV=development")]),e._v("的这样的设置方式，会报错。因此 "),v("code",[e._v("cross-env")]),e._v(" 出现了。我们就可以使用 "),v("code",[e._v("cross-env")]),e._v("命令，这样我们就不必担心平台设置或使用环境变量了。也就是说 "),v("code",[e._v("cross-env")]),e._v(" 能够提供一个设置环境变量的"),v("code",[e._v("scripts")]),e._v("，这样我们就能够以"),v("code",[e._v("unix")]),e._v("方式设置环境变量，然而在"),v("code",[e._v("windows")]),e._v("上也能够兼容的。")]),e._v(" "),v("p",[e._v("要使用该命令的话，我们首先需要在我们的项目中进行安装该命令，安装方式如下：")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("  npm install --save-dev cross-env\n")])])]),v("p",[e._v("在 "),v("code",[e._v("package.json")]),e._v(" 里使用它")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('  {\n    "scripts": {\n        "build": "cross-env NODE_ENV=production webpack --config build/webpack.config.js"\n    }\n  }\n')])])]),v("p",[e._v("传递 JSON 字符串（例如，使用"),v("code",[e._v("ts-loader")]),e._v("时）")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('  {\n    "scripts": {\n        "test": "cross-env TS_NODE_COMPILER_OPTIONS={\\\\\\"module\\\\\\":\\\\\\"commonjs\\\\\\"} node some_file.test.ts"\n    }\n  }\n\n')])])]),v("p",[e._v("要特别注意三倍反斜线(\\)之前的 双引号(\")和缺少的单引号(')。为了同时在 "),v("code",[e._v("Windows")]),e._v(" 和 "),v("code",[e._v("UNIX")]),e._v("上运行，必须同时满足这两个条件。")])])}),[],!1,null,null,null);s.default=c.exports}}]);