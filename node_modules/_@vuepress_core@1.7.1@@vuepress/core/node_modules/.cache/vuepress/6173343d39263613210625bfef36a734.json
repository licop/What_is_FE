{"remainingRequest":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js??ref--1-0!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??ref--1-1!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js??ref--1-2!/Users/licop/Documents/GitHub/What_is_FE/docs/前端框架/react/hook/react-hook-demo/node_modules/websocket-driver/CHANGELOG.md?vue&type=template&id=be39af0c&","dependencies":[{"path":"/Users/licop/Documents/GitHub/What_is_FE/docs/前端框架/react/hook/react-hook-demo/node_modules/websocket-driver/CHANGELOG.md","mtime":1463730048000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJfMC02LTUtMjAxNi0wNS0yMCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjXzAtNi01LTIwMTYtMDUtMjAiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiAwLjYuNSAvIDIwMTYtMDUtMjAiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJEb24ndCBtdXRhdGUgYnVmZmVycyBwYXNzZWQgaW4gYnkgdGhlIGFwcGxpY2F0aW9uIHdoZW4gbWFza2luZyIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJfMC02LTQtMjAxNi0wMS0wNyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjXzAtNi00LTIwMTYtMDEtMDciIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiAwLjYuNCAvIDIwMTYtMDEtMDciKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJJZiBhIG51bWJlciBpcyBnaXZlbiBhcyBpbnB1dCBmb3IgYSBmcmFtZSBwYXlsb2FkLCBzZW5kIGl0IGFzIGEgc3RyaW5nIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTYtMy0yMDE1LTExLTA2IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC02LTMtMjAxNS0xMS0wNiIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuNi4zIC8gMjAxNS0xMS0wNiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlJlamVjdCBkcmFmdC03NiBoYW5kc2hha2VzIGlmIHRoZWlyIFNlYy1XZWJTb2NrZXQtS2V5IGhlYWRlcnMgYXJlIGludmFsaWQiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiVGhyb3cgYSBtb3JlIGhlbHBmdWwgZXJyb3IgaWYgYSBjbGllbnQgaXMgY3JlYXRlZCB3aXRoIGFuIGludmFsaWQgVVJMIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTYtMi0yMDE1LTA3LTE4IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC02LTItMjAxNS0wNy0xOCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuNi4yIC8gMjAxNS0wNy0xOCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIldoZW4gdGhlIHBlZXIgc2VuZHMgYSBjbG9zZSBmcmFtZSB3aXRoIG5vIGVycm9yIGNvZGUsIGVtaXQgMTAwMCIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJfMC02LTEtMjAxNS0wNy0xMyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjXzAtNi0xLTIwMTUtMDctMTMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiAwLjYuMSAvIDIwMTUtMDctMTMiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIlVzZSB0aGUgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoImJ1ZmZlci57cmVhZCx3cml0ZX1VSW50ezE2LDMyfUJFIildKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBtZXRob2RzIGZvciByZWFkaW5nL3dyaXRpbmcgbnVtYmVyc1xudG8gYnVmZmVycyByYXRoZXIgdGhhbiBpbmNsdWRpbmcgZHVwbGljYXRlIGxvZ2ljIGZvciB0aGlzIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTYtMC0yMDE1LTA3LTA4IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC02LTAtMjAxNS0wNy0wOCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuNi4wIC8gMjAxNS0wNy0wOCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIkFsbG93IHRoZSBwYXJzZXIgdG8gcmVjb3ZlciBjbGVhbmx5IGlmIGV2ZW50IGxpc3RlbmVycyByYWlzZSBhbiBlcnJvciIKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIkFkZCBhICIpLAogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJwb25nIildKSwKICAgICAgICAgIF92bS5fdigiIG1ldGhvZCBmb3Igc2VuZGluZyB1bnNvbGljaXRlZCBwb25nIGZyYW1lcyIpCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtNS00LTIwMTUtMDMtMjkiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTUtNC0yMDE1LTAzLTI5IiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC41LjQgLyAyMDE1LTAzLTI5IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiRG9uJ3QgZW1pdCBleHRyYSBjbG9zZSBmcmFtZXMgaWYgd2UgcmVjZWl2ZSBhIGNsb3NlIGZyYW1lIGFmdGVyIHdlIGFscmVhZHlcbnNlbnQgb25lIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiRmFpbCB0aGUgY29ubmVjdGlvbiB3aGVuIHRoZSBkcml2ZXIgcmVjZWl2ZXMgYW4gaW52YWxpZFxuIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoIlNlYy1XZWJTb2NrZXQtRXh0ZW5zaW9ucyIpXSksCiAgICAgICAgICBfdm0uX3YoIiBoZWFkZXIiKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTUtMy0yMDE1LTAyLTIyIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC01LTMtMjAxNS0wMi0yMiIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuNS4zIC8gMjAxNS0wMi0yMiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIkRvbid0IHRyZWF0IGluY29taW5nIGRhdGEgYXMgV2ViU29ja2V0IGZyYW1lcyBpZiBhIGNsaWVudCBkcml2ZXIgaXMgY2xvc2VkXG5iZWZvcmUgcmVjZWl2aW5nIHRoZSBzZXJ2ZXIgaGFuZHNoYWtlIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTUtMi0yMDE1LTAyLTE5IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC01LTItMjAxNS0wMi0xOSIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuNS4yIC8gMjAxNS0wMi0xOSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIkZpeCBjb21wYXRpYmlsaXR5IHdpdGggdGhlIEhUVFAgcGFyc2VyIG9uIGlvLmpzIildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIlVzZSAiKSwKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigid2Vic29ja2V0LWV4dGVuc2lvbnMiKV0pLAogICAgICAgICAgX3ZtLl92KCIgdG8gbWFrZSBzdXJlIG1lc3NhZ2VzIGFuZCBjbG9zZSBmcmFtZXMgYXJlIGtlcHQgaW5cbm9yZGVyIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIkRvbid0IGVtaXQgbXVsdGlwbGUgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoImVycm9yIildKSwKICAgICAgICAgIF92bS5fdigiIGV2ZW50cyIpCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtNS0xLTIwMTQtMTItMTgiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTUtMS0yMDE0LTEyLTE4IiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC41LjEgLyAyMDE0LTEyLTE4IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJEb24ndCBhbGxvdyBkcml2ZXJzIHRvIGJlIGNyZWF0ZWQgd2l0aCB1bnJlY29nbml6ZWQgb3B0aW9ucyIpCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtNS0wLTIwMTQtMTItMTMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTUtMC0yMDE0LTEyLTEzIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC41LjAgLyAyMDE0LTEyLTEzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiU3VwcG9ydCBwcm90b2NvbCBleHRlbnNpb25zIHZpYSB0aGUgd2Vic29ja2V0LWV4dGVuc2lvbnMgbW9kdWxlIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTQtMC0yMDE0LTExLTA4IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC00LTAtMjAxNC0xMS0wOCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuNC4wIC8gMjAxNC0xMS0wOCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiU3VwcG9ydCBjb25uZWN0aW9uIHZpYSBIVFRQIHByb3hpZXMgdXNpbmcgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoIkNPTk5FQ1QiKV0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtMy02LTIwMTQtMTAtMDQiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTMtNi0yMDE0LTEwLTA0IiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC4zLjYgLyAyMDE0LTEwLTA0IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJJdCBpcyBub3cgcG9zc2libGUgdG8gY2FsbCAiKSwKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigiY2xvc2UoKSIpXSksCiAgICAgICAgICBfdm0uX3YoIiBiZWZvcmUgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInN0YXJ0KCkiKV0pLAogICAgICAgICAgX3ZtLl92KCIgYW5kIGNsb3NlIHRoZSBkcml2ZXIiKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTMtNS0yMDE0LTA3LTA2IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC0zLTUtMjAxNC0wNy0wNiIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuMy41IC8gMjAxNC0wNy0wNiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIkRvbid0IGhvbGQgcmVmZXJlbmNlcyB0byBmcmFtZSBidWZmZXJzIGFmdGVyIGEgbWVzc2FnZSBoYXMgYmVlbiBlbWl0dGVkIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiTWFrZSBzdXJlIHRoYXQgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInByb3RvY29sIildKSwKICAgICAgICAgIF92bS5fdigiIGFuZCAiKSwKICAgICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigidmVyc2lvbiIpXSksCiAgICAgICAgICBfdm0uX3YoIiBhcmUgZXhwb3NlZCBwcm9wZXJseSBieSB0aGUgVENQIGRyaXZlciIpCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtMy00LTIwMTQtMDUtMDgiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTMtNC0yMDE0LTA1LTA4IiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC4zLjQgLyAyMDE0LTA1LTA4IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiRG9uJ3QgaG9sZCBtZW1vcnktbGVha2luZyByZWZlcmVuY2VzIHRvIEkvTyBidWZmZXJzIGFmdGVyIHRoZXkgaGF2ZSBiZWVuXG5wYXJzZWQiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtMy0zLTIwMTQtMDQtMjQiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTMtMy0yMDE0LTA0LTI0IiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC4zLjMgLyAyMDE0LTA0LTI0IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiQ29ycmVjdCB0aGUgZHJhZnQtNzYgc3RhdHVzIGxpbmUgcmVhc29uIHBocmFzZSIpXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtMy0yLTIwMTMtMTItMjkiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTMtMi0yMDEzLTEyLTI5IiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC4zLjIgLyAyMDEzLTEyLTI5IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJFeHBhbmQgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoIm1heExlbmd0aCIpXSksCiAgICAgICAgICBfdm0uX3YoIiB0byBjb3ZlciBzZXF1ZW5jZXMgb2YgY29udGludWF0aW9uIGZyYW1lcyBhbmRcbiIpLAogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJkcmFmdC17NzUsNzZ9IildKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiRGVjcmVhc2UgZGVmYXVsdCBtYXhpbXVtIGZyYW1lIGJ1ZmZlciBzaXplIHRvIDY0TUIiKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlN0b3AgcGFyc2luZyB3aGVuIHRoZSBwcm90b2NvbCBlbnRlcnMgYSBmYWlsdXJlIG1vZGUsIHRvIHNhdmUgQ1BVIGN5Y2xlcyIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJfMC0zLTEtMjAxMy0xMi0wMyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjXzAtMy0xLTIwMTMtMTItMDMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiAwLjMuMSAvIDIwMTMtMTItMDMiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIkFkZCBhICIpLAogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJtYXhMZW5ndGgiKV0pLAogICAgICAgICAgX3ZtLl92KCIgb3B0aW9uIHRvIGxpbWl0IGFsbG93ZWQgZnJhbWUgc2l6ZSIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiRG9uJ3QgcHJlLWFsbG9jYXRlIGEgbWVzc2FnZSBidWZmZXIgdW50aWwgdGhlIHdob2xlIGZyYW1lIGhhcyBhcnJpdmVkIgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiRml4IGNvbXBhdGliaWxpdHkgd2l0aCBOb2RlIHYwLjExICIpLAogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJIVFRQUGFyc2VyIildKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTMtMC0yMDEzLTA5LTA5IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC0zLTAtMjAxMy0wOS0wOSIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuMy4wIC8gMjAxMy0wOS0wOSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIlN1cHBvcnQgY2xpZW50IFVSTHMgd2l0aCBCYXNpYyBBdXRoIGNyZWRlbnRpYWxzIildKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJfMC0yLTItMjAxMy0wNy0wNSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjXzAtMi0yLTIwMTMtMDctMDUiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiAwLjIuMiAvIDIwMTMtMDctMDUiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoIk5vIGZ1bmN0aW9uYWwgY2hhbmdlcywganVzdCB1cGRhdGVzIHRvIHBhY2thZ2UuanNvbiIpCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiXzAtMi0xLTIwMTMtMDUtMTciIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI18wLTItMS0yMDEzLTA1LTE3IiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgMC4yLjEgLyAyMDEzLTA1LTE3IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygidWwiLCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiRXhwb3J0IHRoZSBpc1NlY3VyZVJlcXVlc3QoKSBtZXRob2Qgc2luY2UgZmF5ZS13ZWJzb2NrZXQgcmVsaWVzIG9uIGl0IgogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIlF1ZXVlIHNlbnQgbWVzc2FnZXMgaW4gdGhlIGNsaWVudCdzIGluaXRpYWwgc3RhdGUiKV0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTItMC0yMDEzLTA1LTEyIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC0yLTAtMjAxMy0wNS0xMiIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuMi4wIC8gMjAxMy0wNS0xMiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIkFkZCBBUEkgZm9yIHNldHRpbmcgYW5kIHJlYWRpbmcgaGVhZGVycyIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiQWRkIERyaXZlci5zZXJ2ZXIoKSBtZXRob2QgZm9yIGdldHRpbmcgYSBkcml2ZXIgZm9yIFRDUCBzZXJ2ZXJzIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIl8wLTEtMC0yMDEzLTA1LTA0IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNfMC0xLTAtMjAxMy0wNS0wNCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIDAuMS4wIC8gMjAxMy0wNS0wNCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInVsIiwgW19jKCJsaSIsIFtfdm0uX3YoIkZpcnN0IHN0YWJsZSByZWxlYXNlIildKV0pCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}