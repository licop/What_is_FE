{"remainingRequest":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js??ref--1-0!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??ref--1-1!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js??ref--1-2!/Users/licop/Documents/GitHub/What_is_FE/docs/前端框架/react/hook/react-hook-demo/node_modules/language-subtag-registry/README.md?vue&type=template&id=c6b3f00a&","dependencies":[{"path":"/Users/licop/Documents/GitHub/What_is_FE/docs/前端框架/react/hook/react-hook-demo/node_modules/language-subtag-registry/README.md","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJpYW5hLWxhbmd1YWdlLXRhZ3MiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2lhbmEtbGFuZ3VhZ2UtdGFncyIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIElBTkEgTGFuZ3VhZ2UgVGFncyIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHA6Ly9vcGVuZGVmaW5pdGlvbi5vcmcvIiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAgICAgImh0dHBzOi8vYXNzZXRzLm9rZm4ub3JnL2ltYWdlcy9va19idXR0b25zL29kXzgweDE1X2JsdWUucG5nIiwKICAgICAgICAgICAgICAgIGFsdDogIk9wZW4gRGF0YSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygiT3V0Ym91bmRMaW5rIikKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiSUFOQSdzICIpLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAiaHR0cDovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9sYW5ndWFnZS1zdWJ0YWctcmVnaXN0cnkvbGFuZ3VhZ2Utc3VidGFnLXJlZ2lzdHJ5IiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJvZmZpY2lhbCByZXBvc2l0b3J5IiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBpcyBpbiAiKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgImh0dHA6Ly93d3cuaW50ZXItbG9jYWxlLmNvbS9JRC9kcmFmdC1waGlsbGlwcy1yZWNvcmQtamFyLTAxLmh0bWwiLAogICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoInJlY29yZC1qYXIiKSwgX2MoIk91dGJvdW5kTGluayIpXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICAgIF92bS5fdigKICAgICAgICAgICIgZm9ybWF0IGFuZCBpcyBoYXJkIHRvIHBhcnNlLiBUaGlzIHByb2plY3QgcHJvdmlkZXMgbmVhdGx5IG9yZ2FuaXplZCBKU09OIGZpbGVzIHJlcHJlc2VudGluZyB0aGF0IGRhdGEuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIlNlZSAiKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoImRhdGEvIildKSwKICAgICAgICBfdm0uX3YoIiBmb3IgYWxsIHRoZSBKU09OIGZpbGVzIGF2YWlsYWJsZS4gVGhlICIpLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigicmVnaXN0cnkuanNvbiIpXSksCiAgICAgICAgX3ZtLl92KCIgZmlsZSBjb250YWlucyBhbGwgcmVjb3JkcyBpbiBhIGZsYXQgYXJyYXkgYW5kICIpLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigibWV0YS5qc29uIildKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIGNvbnRhaW5zIGl0cyBtZXRhZGF0YS4gVGhlcmUncyBhIHNlcGFyYXRlIEpTT04gZmlsZSBmb3IgZWFjaCAnc2NvcGUnIChlLmcuICIKICAgICAgICApLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigibWFjcm9sYW5ndWFnZS5qc29uIildKSwKICAgICAgICBfdm0uX3YoIikgYW5kICd0eXBlJyAoZS5nLiAiKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoImxhbmd1YWdlLmpzb24iKV0pLAogICAgICAgIF92bS5fdigKICAgICAgICAgICIpLiBUaGVzZSBmaWxlcyBjb250YWluIEpTT04gb2JqZWN0cyBrZXllZCBieSB0YWcgb3Igc3VidGFnIGFuZCB3aXRoIHRoZSBpbmRleCBpbnRlZ2VyIGZvciB0aGUgY29ycmVzcG9uZGluZyBlbnRyeSBpbiAiCiAgICAgICAgKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInJlZ2lzdHJ5Lmpzb24iKV0pLAogICAgICAgIF92bS5fdigiIGFzIGEgdmFsdWUuIFRoaXMgbWFrZXMgbG9va3VwcyBmYXN0LiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogInVwZGF0ZXMiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI3VwZGF0ZXMiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBVcGRhdGVzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhpcyBwcm9qZWN0IHdpbGwgYmUgdXBkYXRlZCBhcyB0aGUgcmVnaXN0cnkgY2hhbmdlcy4gTm9uLWJyZWFraW5nIHVwZGF0ZXMgd2lsbCByZXN1bHQgaW4gdGhlIHBhdGNoIHZlcnNpb24gbnVtYmVyIGJlaW5nIGJ1bXBlZC4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiUnVuICIpLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigibWFrZSB1cGRhdGUiKV0pLAogICAgICAgIF92bS5fdigKICAgICAgICAgICIgdG8gZm9yY2UgYW4gdXBkYXRlIGZyb20gdGhlIGxhdGVzdCBvZmZpY2lhbCBJQU5BLWhvc3RlZCB2ZXJzaW9uLiBUaGUgcmVnaXN0cnkgZmlsZSBmb3JtYXQgaXMgY29udmVydGVkIHRvIEpTT04gYXV0b21hdGljYWxseSBhbmQgdGhlIGZpbGVzIGluICIKICAgICAgICApLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigiZGF0YS8iKV0pLAogICAgICAgIF92bS5fdigiIGFyZSB1cGRhdGVkLiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbX3ZtLl92KCJJZiB0aGVyZSBhcmUgY2hhbmdlcywgcGxlYXNlIG1ha2UgYSBwdWxsIHJlcXVlc3QuIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJ1c2FnZSIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjdXNhZ2UiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBVc2FnZSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KCJTZWUgIiksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vZ2l0aHViLmNvbS9tYXR0Y2cvbGFuZ3VhZ2UtdGFncyIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigibGFuZ3VhZ2UtdGFncyIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgZm9yIGEgSmF2YXNjcmlwdCBBUEkuIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiY3JlZGl0cy1hbmQtY29sbGFib3JhdGlvbiIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjY3JlZGl0cy1hbmQtY29sbGFib3JhdGlvbiIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIENyZWRpdHMgYW5kIGNvbGxhYm9yYXRpb24iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiVGhlIEpTT04gZGF0YWJhc2UgaXMgbGljZW5zZWQgYW4gIiksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHA6Ly9vcGVuZGF0YWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzEuMC8iLAogICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX3ZtLl92KCJPcGVuIERhdGEgQ29tbW9ucyBBdHRyaWJ1dGlvbiBMaWNlbnNlIChPREMtQlkpIiksCiAgICAgICAgICAgIF9jKCJPdXRib3VuZExpbmsiKQogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICAgIF92bS5fdigiLiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkNvbW1lbnRzLCBmZWVkYmFjayBhbmQgc3VnZ2VzdGlvbnMgYXJlIHdlbGNvbWUuIFBsZWFzZSBmZWVsIGZyZWUgdG8gcmFpc2UgYW4gaXNzdWUgb3IgcHVsbCByZXF1ZXN0LiBFbmpveS4iCiAgICAgICAgKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}