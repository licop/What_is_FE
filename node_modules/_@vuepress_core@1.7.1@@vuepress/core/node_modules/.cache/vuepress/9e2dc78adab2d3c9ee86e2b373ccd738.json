{"remainingRequest":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??ref--1-1!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js??ref--1-2!/Users/licop/Documents/GitHub/What_is_FE/docs/前端框架/react/hook/react-hook-demo/node_modules/jsdom/Changelog.md?vue&type=template&id=373bb0c2&","dependencies":[{"path":"/Users/licop/Documents/GitHub/What_is_FE/docs/前端框架/react/hook/react-hook-demo/node_modules/jsdom/Changelog.md","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<ContentSlotsDistributor :slot-key="$parent.slotKey"><h1 id="jsdom-changelog"><a class="header-anchor" href="#jsdom-changelog">#</a> jsdom Changelog</h1>
<!-- Style guide:

* Use past tense verbs to start the sentence, e.g. "Fixed", "Added", "Removed", ...
* Each bullet point is a sentence (or more), and so ends with a period.
* Package names are in `code`, sometimes [`linked`]().
* Prefer referring to methods and properties via `someInstance.prop`, instead of `ClassName.prototype.prop`. (Never use `ClassName.prop` except for statics.)
* Refer to attributes via `attr=""`.
* Refer to elements via `<element>`.
* Refer to events via `eventname`.
* Refer to CSS properties via `'propname'`.
* Never use the IDL terms "interface", "attribute", or "operation".
* URL schemes are in `code`, e.g. `data:`.
* Except in the headings, all version numbers get a "v" prefix, e.g. v12.2.0.
* Follow the bullet point with parenthetical GitHub usernames when contributed by a non-core team member, e.g. "Fixed foo. (person)"

Other guidelines:

* Commit messages are primarily for jsdom developers. Changelog entries are primarily for users. Usually you cannot reuse the commit message.
* Sometimes a single commit may expand to multiple changelog entries.
* Do not include commits that have no user-facing impact, e.g. test rolls, refactorings, benchmark additions, etc.
* For regression fixes, note the version in which something regressed.
* Breaking changes get their own section.
* Group in the order "Added", "Removed", "Changed", "Fixed".
* Roughly order changes within those groupings by impact.
-->
<h2 id="_16-4-0"><a class="header-anchor" href="#_16-4-0">#</a> 16.4.0</h2>
<ul>
<li>Added a not-implemented warning if you try to use the second pseudo-element argument to <code>getComputedStyle()</code>, unless you pass a <code>::part</code> or <code>::slotted</code> pseudo-element, in which case we throw an error per the spec. (ExE-Boss)</li>
<li>Improved the performance of repeated access to <code>el.tagName</code>, which also indirectly improves performance of selector matching and style computation. (eps1lon)</li>
<li>Fixed <code>form.elements</code> to respect the <code>form=&quot;&quot;</code> attribute, so that it can contain non-descendant form controls. (ccwebdesign)</li>
<li>Fixed <code>el.focus()</code> to do nothing on disconnected elements. (eps1lon)</li>
<li>Fixed <code>el.focus()</code> to work on SVG elements. (zjffun)</li>
<li>Fixed removing the currently-focused element to move focus to the <code>&lt;body&gt;</code> element. (eps1lon)</li>
<li>Fixed <code>imgEl.complete</code> to return true for <code>&lt;img&gt;</code> elements with empty or unset <code>src=&quot;&quot;</code> attributes. (strager)</li>
<li>Fixed <code>imgEl.complete</code> to return true if an error occurs loading the <code>&lt;img&gt;</code>, when canvas is enabled. (strager)</li>
<li>Fixed <code>imgEl.complete</code> to return false if the <code>&lt;img&gt;</code> element's <code>src=&quot;&quot;</code> attribute is reset. (strager)</li>
<li>Fixed the <code>valueMissing</code> validation check for <code>&lt;input type=&quot;radio&quot;&gt;</code>. (zjffun)</li>
<li>Fixed <code>translate=&quot;&quot;</code> and <code>draggable=&quot;&quot;</code> attribute processing to use ASCII case-insensitivity, instead of Unicode case-insensitivity. (zjffun)</li>
</ul>
<h2 id="_16-3-0"><a class="header-anchor" href="#_16-3-0">#</a> 16.3.0</h2>
<ul>
<li>Added firing of <code>focusin</code> and <code>focusout</code> when using <code>el.focus()</code> and <code>el.blur()</code>. (trueadm)</li>
<li>Fixed elements with the <code>contenteditable=&quot;&quot;</code> attribute to be considered as focusable. (jamieliu386)</li>
<li>Fixed <code>window.NodeFilter</code> to be per-<code>Window</code>, instead of shared across all <code>Window</code>s. (ExE-Boss)</li>
<li>Fixed edge-case behavior involving use of objects with <code>handleEvent</code> properties as event listeners. (ExE-Boss)</li>
<li>Fixed a second failing image load sometimes firing a <code>load</code> event instead of an <code>error</code> event, when the <code>canvas</code> package is installed. (strager)</li>
<li>Fixed drawing an empty canvas into another canvas. (zjffun)</li>
</ul>
<h2 id="_16-2-2"><a class="header-anchor" href="#_16-2-2">#</a> 16.2.2</h2>
<ul>
<li>Updated <code>StyleSheetList</code> for better spec compliance; notably it no longer inherits from <code>Array.prototype</code>. (ExE-Boss)</li>
<li>Fixed <code>requestAnimationFrame()</code> from preventing process exit. This likely regressed in v16.1.0.</li>
<li>Fixed <code>setTimeout()</code> to no longer leak the closures passed in to it. This likely regressed in v16.1.0. (AviVahl)</li>
<li>Fixed infinite recursion that could occur when calling <code>click()</code> on a <code>&lt;label&gt;</code> element, or one of its descendants.</li>
<li>Fixed <code>getComputedStyle()</code> to consider inline <code>style=&quot;&quot;</code> attributes. (eps1lon)</li>
<li>Fixed several issues with <code>&lt;input type=&quot;number&quot;&gt;</code>'s <code>stepUp()</code> and <code>stepDown()</code> functions to be properly decimal-based, instead of floating point-based.</li>
<li>Fixed various issues where updating <code>selectEl.value</code> would not invalidate properties such as <code>selectEl.selectedOptions</code>. (ExE-Boss)</li>
<li>Fixed <code>&lt;input&gt;</code>'s <code>src</code> property, and <code>&lt;ins&gt;</code>/<code>&lt;del&gt;</code>'s <code>cite</code> property, to properly reflect as URLs.</li>
<li>Fixed <code>window.addEventLister</code>, <code>window.removeEventListener</code>, and <code>window.dispatchEvent</code> to properly be inherited from <code>EventTarget</code>, instead of being distinct functions. (ExE-Boss)</li>
<li>Fixed errors that would occur if attempting to use a DOM object, such as a custom element, as an argument to <code>addEventListener</code>.</li>
<li>Fixed errors that would occur when closing a window with outstanding requests to <code>data:</code> URLs.</li>
<li>Fixed sporadic issues with the value of <code>&lt;input type=&quot;month&quot;&gt;</code> that could occur in some time zones and for some times.</li>
<li>Fixed <code>document.implementation.createDocument()</code> to return an <code>XMLDocument</code>, instead of a <code>Document</code>. (ExE-Boss)</li>
<li>Fixed running jsdom in a browser to detect globals more reliably. (ExE-Boss)</li>
</ul>
<h2 id="_16-2-1"><a class="header-anchor" href="#_16-2-1">#</a> 16.2.1</h2>
<ul>
<li>Updated <code>saxes</code>, to bring in some BOM-related fixes.</li>
<li>Updated Acorn-related packages to squelch <code>npm audit</code> warnings.</li>
</ul>
<h2 id="_16-2-0"><a class="header-anchor" href="#_16-2-0">#</a> 16.2.0</h2>
<ul>
<li>Added support for custom elements! Congratulations and thanks to <a href="https://github.com/jsdom/jsdom/commits?author=pmdartus" target="_blank" rel="noopener noreferrer">@pmdartus<OutboundLink/></a> for making this happen, after ten months of hard work and lots of effort poured into the complex architectural prerequisites in jsdom and supporting packages.</li>
<li>Fixed some issues when trying to use <code>Attr</code> as a <code>Node</code>, e.g. by checking its <code>baseURI</code> property or calling <code>attr.cloneNode()</code>.</li>
<li>Fixed a memory leak during parsing that was introduced in v14.0.0.</li>
<li>Fixed edge cases in number/string conversion used for certain element properties that reflected integer attributes.</li>
</ul>
<h2 id="_16-1-0"><a class="header-anchor" href="#_16-1-0">#</a> 16.1.0</h2>
<ul>
<li>Added <code>console.timeLog()</code>.</li>
<li>Changed <code>Attr</code> to extend <code>Node</code>, to align with specifications. (ExE-Boss)</li>
<li>Changed <code>&lt;noscript&gt;</code> children to be parsed as nodes, instead of as text, when <code>runScripts</code> is left as the default of <code>undefined</code>. (ACHP)</li>
<li>Upgraded <code>cssstyle</code> to v2.1.0, which brings along fixes to handling of <code>rgba()</code> and <code>hsl()</code> colors. (kraynel)</li>
<li>Fixed some selection-related issues when manipulating the value of <code>&lt;input&gt;</code>s and <code>&lt;textarea&gt;</code>s. (Matthew-Goldberg)</li>
<li>Fixed various issues with <code>setTimeout()</code>, <code>setInterval()</code>, and <code>requestAnimationFrame()</code>, particularly around window closing and recursive calls.</li>
</ul>
<h2 id="_16-0-1"><a class="header-anchor" href="#_16-0-1">#</a> 16.0.1</h2>
<ul>
<li>Fixed Node v10 and v11 support when <code>runScripts</code> was set.</li>
<li>Fixed the behavior when changing an <code>&lt;input&gt;</code>'s <code>type=&quot;&quot;</code> attribute.</li>
<li>Fixed input validation behavior for <code>&lt;input type=&quot;range&quot;&gt;</code> when <code>max=&quot;&quot;</code> is less than <code>min=&quot;&quot;</code>.</li>
</ul>
<h2 id="_16-0-0"><a class="header-anchor" href="#_16-0-0">#</a> 16.0.0</h2>
<p>For this release we'd like to welcome <a href="https://github.com/jsdom/jsdom/commits?author=pmdartus" target="_blank" rel="noopener noreferrer">@pmdartus<OutboundLink/></a> to the core team. Among other work, he's driven the heroic effort of constructor prototype and reform in jsdom and its dependencies over the last few months, to allow us to move away from shared constructors and prototypes, and set the groundwork for custom elements support (<a href="https://github.com/jsdom/jsdom/pull/2548" target="_blank" rel="noopener noreferrer">coming soon<OutboundLink/></a>!).</p>
<p>Breaking changes:</p>
<ul>
<li>Node v10 is now the minimum supported version.</li>
<li>The <code>dom.runVMScript()</code> API has been replaced with the more general <code>dom.getInternalVMContext()</code> API.</li>
<li>Each jsdom <code>Window</code> now creates new instances of all the web platform globals. That is, our old <a href="https://github.com/jsdom/jsdom/blob/35894a6703ed1f4de98942780bd99244ac27f600/README.md#shared-constructors-and-prototypes" target="_blank" rel="noopener noreferrer">shared constructor and prototypes<OutboundLink/></a> caveat is no longer in play.</li>
<li>Each jsdom <code>Window</code> now exposes all JavaScript-spec-defined globals uniformly. When <code>runScripts</code> is disabled, it exposes them as aliases of the ones from the outer Node.js environment. Whereas when <code>runScripts</code> is enabled, it exposes fresh copies of each global from the new scripting environment. (Previously, a few typed array classes would always be aliased, and with <code>runScripts</code> disabled, the other classes would not be exposed at all.)</li>
</ul>
<p>Other changes:</p>
<ul>
<li>Added the <code>AbstractRange</code>, <code>Range</code>, <code>StaticRange</code>, <code>Selection</code>, and <code>window.getSelection()</code> APIs.</li>
<li>Added working constructors for <code>Comment</code>, <code>Text</code>, and <code>DocumentFragment</code>.</li>
<li>Added <code>valueAsDate</code>, <code>valueAsNumber</code>, <code>stepUp()</code> and <code>stepDown()</code> to <code>&lt;input&gt;</code> elements. (kraynel)</li>
<li>Added <code>window.origin</code>.</li>
<li>Removed <code>document.origin</code>.</li>
<li>Fixed <code>&lt;template&gt;</code> to work correctly inside XML documents.</li>
<li>Fixed some bugs which would cause jsdom to choose the wrong character encoding because it was failing to detect <code>&lt;meta charset&gt;</code> or <code>&lt;meta http-equiv=&quot;charset&quot;&gt;</code> elements.</li>
<li>Fixed <code>input.type</code> to default to <code>&quot;text&quot;</code>. (connormeredith)</li>
<li>Fixed incorrect validation errors for <code>&lt;input&gt;</code> with fractional values for their <code>step=&quot;&quot;</code> attribute. (kontomondo)</li>
<li>Fixed incorrect validation errors on readonly <code>&lt;input&gt;</code> elements.</li>
<li>Fixed <code>&lt;input type=&quot;email&quot; multiple pattern=&quot;...&quot;&gt;</code> validation.</li>
<li>Fixed <code>fileReader.readAsDataURL()</code> to always base64-encode the result. (ytetsuro)</li>
<li>Fixed inserting <code>&lt;img&gt;</code> elements into documents without a browsing context to no longer crash when the <code>canvas</code> package is installed.</li>
<li>Fixed a memory leak when using <code>window.setTimeout()</code> or <code>window.setInterval()</code>.</li>
<li>Improved the performance of <code>getComputedStyle()</code>. (eps1lon)</li>
</ul>
<h2 id="_15-2-1"><a class="header-anchor" href="#_15-2-1">#</a> 15.2.1</h2>
<ul>
<li>Fixed <code>JSDOM.fromURL()</code> handling of URLs with hashes in them, to no longer send the hash to the server and append an extra copy of it when constructing the <code>Document</code>. (rchl)</li>
<li>Fixed focusing an already-focused element to correctly do nothing, instead of firing additional <code>focus</code> events. (eps1lon)</li>
<li>Fixed typo in the not-implemented message for <code>mediaElement.addTextTrack()</code>. (mtsmfm)</li>
<li>Upgraded <code>nwsapi</code> minimum version to 2.2.0, which fixes issues with <code>::-webkit-</code> prefixed pseudo-elements and namespaced attribute selectors.</li>
</ul>
<h2 id="_15-2-0"><a class="header-anchor" href="#_15-2-0">#</a> 15.2.0</h2>
<ul>
<li>Added basic style inheritance in <code>getComputedStyle()</code> for the <code>'visibility'</code> property. This sets the foundation for further work on inheritance, cascading, and specificity. (eps1lon)</li>
<li>Added <code>shadowRoot.activeElement</code>.</li>
<li>Added <code>readystatechange</code> events during document loading.</li>
<li>Added a stub for <code>form.requestSubmit()</code>, to match our existing stub for <code>form.submit()</code>.</li>
<li>Changed <code>el.tabIndex</code>'s default value, when no <code>tabindex=&quot;&quot;</code> attribute was set, to reflect the updated specification.</li>
<li>Changed the exception thrown by <code>el.attachShadow()</code> on something that's already a shadow host, to reflect the updated specification.</li>
<li>Fixed the validation logic for <code>&lt;input type=&quot;range&quot;&gt;</code>.</li>
<li>Fixed <code>selectEl.value</code> when no <code>&lt;option&gt;</code> is selected to return the empty string, instead of the value of the first option. (tgohn)</li>
<li>Fixed various correctness issues with <code>new FormData(formElement)</code>. (brendo)</li>
<li>Fixed error messages when parsing XML to include the filename, instead of using <code>&quot;undefined&quot;</code>. (papandreou)</li>
<li>Fixed the logic for reflected properties to not be affected by overwriting of <code>el.getAttributeNS()</code> or <code>el.setAttributeNS()</code>.</li>
<li>Set <code>canvas</code> as an optional ``peerDependency`, which apparently helps with Yarn PnP support.</li>
</ul>
<h2 id="_15-1-1"><a class="header-anchor" href="#_15-1-1">#</a> 15.1.1</h2>
<ul>
<li>Moved the <code>nonce</code> property from <code>HTMLScriptElement</code> and <code>HTMLStyleElement</code> to <code>HTMLElement</code>. Note that it is still just a simple reflection of the attribute, and has not been updated for the rest of the changes in <a href="https://github.com/whatwg/html/pull/2373" target="_blank" rel="noopener noreferrer">whatwg/html#2373<OutboundLink/></a>.</li>
<li>Fixed the <code>style</code> and <code>on&lt;event&gt;</code> properties to properly track their related attributes for SVG elements. (kbruneel)</li>
<li>Fixed <code>XMLHttpRequest</code> merging preflight and response headers. (thiagohirata)</li>
<li>Fixed <code>XMLHttpRequest</code> reserializing <code>content-type</code> request headers unnecessarily. See <a href="https://github.com/whatwg/mimesniff/issues/84" target="_blank" rel="noopener noreferrer">whatwg/mimesniff#84<OutboundLink/></a> for more details. (thiagohirata)</li>
<li>Fixed <code>element.tagName</code> to be the ASCII uppercase of the element's qualified name, instead of the Unicode uppercase.</li>
</ul>
<h2 id="_15-1-0"><a class="header-anchor" href="#_15-1-0">#</a> 15.1.0</h2>
<ul>
<li>Added the <code>Headers</code> class from the Fetch standard.</li>
<li>Added the <code>element.translate</code> getter and setter.</li>
<li>Fixed synchronous <code>XMLHttpRequest</code> on the newly-released Node.js v12.</li>
<li>Fixed <code>form.elements</code> to exclude <code>&lt;input type=&quot;image&quot;&gt;</code> elements.</li>
<li>Fixed event path iteration in shadow DOM cases, following spec fixes at <a href="https://github.com/whatwg/dom/pull/686" target="_blank" rel="noopener noreferrer">whatwg/dom#686<OutboundLink/></a> and <a href="https://github.com/whatwg/dom/pull/750" target="_blank" rel="noopener noreferrer">whatwg/dom#750<OutboundLink/></a>.</li>
<li>Fixed <code>pattern=&quot;&quot;</code> form control validation to apply the given regular expression to the whole string. (kontomondo)</li>
</ul>
<h2 id="_15-0-0"><a class="header-anchor" href="#_15-0-0">#</a> 15.0.0</h2>
<p>Several potentially-breaking changes, each of them fairly unlikely to actually break anything:</p>
<ul>
<li><code>JSDOM.fromFile()</code> now treats <code>.xht</code> files as <code>application/xhtml+xml</code>, the same as it does for <code>.xhtml</code> and <code>.xml</code>. Previously, it would treat them as <code>text/html</code>.</li>
<li>If the <code>JSDOM</code> constructor's <code>contentType</code> option has a <code>charset</code> parameter, and the first argument to the constructor is a binary data type (e.g. <code>Buffer</code> or <code>ArrayBuffer</code>), then the <code>charset</code> will override any sniffed encoding in the same way as a <code>Content-Type</code> header would in browser scenarios. Previously, the <code>charset</code> parameter was ignored.</li>
<li>When using the <code>Blob</code> or <code>File</code> constructor with the <code>endings: &quot;native&quot;</code> option, jsdom will now convert line endings to <code>\n</code> on all operating systems, for consistency. Previously, on Windows, it would convert line endings to <code>\r\n</code>.</li>
</ul>
<h2 id="_14-1-0"><a class="header-anchor" href="#_14-1-0">#</a> 14.1.0</h2>
<ul>
<li>Added activation behavior for <code>&lt;a&gt;</code> and <code>&lt;area&gt;</code> elements whose <code>href=&quot;&quot;</code> points to a <code>javascript:</code> URL or fragment.</li>
<li>Added the <code>&lt;datalist&gt;</code> element's <code>options</code> property.</li>
<li>Added the <code>&lt;input&gt;</code> element's <code>list</code> property.</li>
<li>Added <code>PageTransitionEvent</code>, and the firing of <code>pageshow</code> events during loading.</li>
<li>Exposed the <code>External</code> class as a property of <code>window</code>.</li>
<li>Fixed HTML fragment parsing (via <code>innerHTML</code> and <code>outerHTML</code>) to be spec-compliant. (pmdartus)</li>
<li>Fixed HTML serialization (e.g. via <code>innerHTML</code>) breaking after setting certain properties to non-string values.</li>
<li>Fixed how disabling an element would cause its activation behavior to forever be null, even if it were re-enabled.</li>
<li>Fixed all access to attributes to ignore attributes with namespaces, per the spec.</li>
<li>Fixed <code>&lt;style&gt;</code>s to no longer apply to documents without a browsing context. This includes fixing a crash that would occur with such styles if they had an <code>@import</code> rule.</li>
<li>Fixed <code>&lt;option&gt;</code>'s <code>label</code> and <code>value</code> properties to return correct values in various edge cases.</li>
<li>Fixed the <code>load</code> event during document loading to target the <code>Document</code>, not the <code>Window</code>.</li>
<li>Fixed the <code>pretendToBeVisual</code> option to propagate to child subframes, as well as the main <code>Window</code>. (pyrho)</li>
<li>Updated the minimum <a href="https://www.npmjs.com/package/nwsapi" target="_blank" rel="noopener noreferrer"><code>nwsapi</code><OutboundLink/></a> version from v2.1.1 to v2.1.3, bringing along a few fixes in our selector engine.</li>
</ul>
<h2 id="_14-0-0"><a class="header-anchor" href="#_14-0-0">#</a> 14.0.0</h2>
<p>Breaking changes:</p>
<ul>
<li><code>JSDOM.fragment()</code> now creates fragments whose document has no <a href="https://html.spec.whatwg.org/multipage/#concept-document-bc" target="_blank" rel="noopener noreferrer">browsing context<OutboundLink/></a>, i.e. no associated <code>Window</code>. This means the <code>defaultView</code> property will be null, resources will not load, etc.</li>
<li><code>JSDOM.fragment()</code>, called with no arguments, now creates a <code>DocumentFragment</code> with no children, instead of with a single child text node whose data was <code>&quot;undefined&quot;</code>.</li>
</ul>
<p>Other changes:</p>
<ul>
<li>Fixed a regression in v13.2.0 when calling <code>element.blur()</code> on a focused element.</li>
<li>Fixed inserting <code>&lt;link&gt;</code> elements into documents with no browsing context to no longer crash if the originating <code>JSDOM</code> was configured to fetch the resource. Now, per spec, <code>&lt;link&gt;</code> elements only attempt to fetch if they are browsing-context connected.</li>
<li>Fixed <code>&lt;template&gt;</code> elements to have the correct semantics, of using a separate browsing-context-less document to store its contents. In particular this means resources will not be fetched for elements inside the <code>&lt;template&gt;</code>, as per spec.</li>
</ul>
<h2 id="_13-2-0"><a class="header-anchor" href="#_13-2-0">#</a> 13.2.0</h2>
<ul>
<li>Added support for <code>MutationObserver</code>s! (pmdartus)</li>
<li>Added support for XML documents loaded in frames and iframes; previously this would error.</li>
<li>Added the <code>&lt;progress&gt;</code> element's <code>value</code>, <code>max</code>, and <code>position</code> properties.</li>
<li>Added <code>navigator.plugins</code> and <code>navigator.mimeTypes</code>. (But, they are always empty.)</li>
<li>Fixed <code>&lt;summary&gt;</code> elements respond to <code>click</code> events by toggling their parent <code>&lt;details&gt;</code>.</li>
<li>Fixed <code>&lt;summary&gt;</code> elements to be focusable.</li>
<li>Fixed XML document DOCTYPE parsing to preserve any custom name values.</li>
<li>Fixed XML documents to default to UTF-8, not windows-1252 like HTML documents do.</li>
<li>Fixed all events fired by jsdom to have <code>isTrusted</code> set to <code>true</code>.</li>
<li>Fixed <code>DOMParser</code>-created documents to have their <code>readyState</code> set to <code>&quot;complete&quot;</code>.</li>
<li>Fixed how nested <code>&lt;fieldset&gt;</code>s get disabled.</li>
<li>Fixed <code>getComputedStyle()</code> to throw a sensible exception when passed the wrong argument, instead of one that exposes jsdom internals.</li>
<li>Upgraded our <a href="https://github.com/lddubeau/saxes" target="_blank" rel="noopener noreferrer"><code>saxes</code><OutboundLink/></a> dependency, so that it now correctly errors on XML fragments like <code>&lt;foo bar:=&quot;1&quot;/&gt;</code>.</li>
</ul>
<h2 id="_13-1-0"><a class="header-anchor" href="#_13-1-0">#</a> 13.1.0</h2>
<ul>
<li>Added <code>el.insertAdjacentElement()</code> and <code>el.insertAdjacentText()</code>.</li>
<li>Added the firing of a cancelable <code>reset</code> event to <code>form.reset()</code>. (epfremmer)</li>
<li>Added the <code>type</code>, <code>value</code>, and <code>defaultValue</code> properties to <code>&lt;output&gt;</code> elements, including their form reset behavior. (epfremmer)</li>
<li>Added the <code>outputEl.htmlFor</code> property.</li>
<li>Fixed the performance of parsing large text nodes, particularly noticeable for large inline <code>&lt;style&gt;</code> or <code>&lt;script&gt;</code> elements. This regressed in v11.6.0. To learn more, see <a href="https://bugs.chromium.org/p/v8/issues/detail?id=6730#c4" target="_blank" rel="noopener noreferrer">V8 issue #6730<OutboundLink/></a>.</li>
<li>Fixed the <code>style</code> property on <code>&lt;a&gt;</code> and <code>&lt;area&gt;</code> elements. This regressed in v13.0.0.</li>
<li>Fixed <code>node.isConnected</code> to not always return false for nodes inside a shadow tree. (pmdartus)</li>
<li>Fixed <code>&lt;button type=&quot;reset&quot;&gt;</code> and <code>&lt;input type=&quot;reset&quot;&gt;</code> elements to actually perform a form reset when clicked, instead of doing nothing. (epfremmer)</li>
<li>Fixed <code>el.setCustomValidity()</code> for <code>&lt;output&gt;</code> and <code>&lt;fieldset&gt;</code>.</li>
<li>Fixed activation behavior when dispatching bubbling <code>click</code> events, so that for example calling <code>el.click()</code> on the child of a submit button element will submit the form.</li>
<li>Fixed our XML parsing code to ignore text outside the root element, instead of treating it as an error. (lddubeau)</li>
<li>Fixed XML serialization when elements had an unknown prefix.</li>
<li>Fixed radio button group name matching to be case-sensitive, per <a href="https://github.com/whatwg/html/commit/6acdb2122298d2bb7bb839c0a61b4e1f9b0f9bc9" target="_blank" rel="noopener noreferrer">a spec update<OutboundLink/></a>.</li>
<li>Fixed <code>focus</code>/<code>blur</code> events to be composed.</li>
<li>Fixed <code>mediaElement.duration</code> to default to <code>NaN</code>.</li>
<li>Fixed <code>olEl.start</code> to default to <code>1</code>.</li>
<li>Fixed using <code>XMLHttpRequest</code> against non-existant <code>file:</code> URLs to treat that as a network error, instead of crashing. (pascalbayer) Note that in the future we may completely disable <code>XMLHttpRequest</code> usage against <code>file:</code> URLs to follow the browser security model.</li>
<li>Fixed <code>document.title</code> in SVG documents.</li>
<li>Fixed <code>titleElement.text</code> to return the child text content, instead of being the same as <code>titleElement.innerHTML</code>.</li>
<li>Fixed <code>&lt;textarea&gt;</code>s to properly account for child CDATA section nodes changing.</li>
<li>Fixed the value of <code>Element.prototype[Symbol.unscopables]</code>.</li>
</ul>
<h2 id="_13-0-0"><a class="header-anchor" href="#_13-0-0">#</a> 13.0.0</h2>
<p>Breaking change:</p>
<ul>
<li>Removed support for v1.x of the <a href="https://github.com/Automattic/node-canvas" target="_blank" rel="noopener noreferrer"><code>canvas</code><OutboundLink/></a> package, in favor of v2.x. This also removes support for <code>canvas-prebuilt</code>, since <code>canvas</code> v2.x has a built-in prebuilt version.</li>
</ul>
<p>Other changes:</p>
<ul>
<li>Added proper XML serialization, based on the <a href="https://github.com/jsdom/w3c-xmlserializer" target="_blank" rel="noopener noreferrer"><code>w3c-xmlserializer</code><OutboundLink/></a> package. Previously we were just using the HTML serialization, even in XML documents.</li>
<li>Added the <code>storageEvent.initStorageEvent()</code> method.</li>
<li>Added support for the <code>passive</code> option to <code>addEventListener()</code>.</li>
<li>Added the <code>relList</code> property to <code>&lt;a&gt;</code>, <code>&lt;area&gt;</code>, and <code>&lt;link&gt;</code> elements.</li>
<li>Fixed our implementation of the node tree modification constraints (for example the <a href="https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity" target="_blank" rel="noopener noreferrer">ensure pre-insertion validity<OutboundLink/></a> algorithm). It is no longer possible to add, remove, or move nodes to create impossible DOM trees. (pmdartus)</li>
</ul>
<h2 id="_12-2-0"><a class="header-anchor" href="#_12-2-0">#</a> 12.2.0</h2>
<ul>
<li>Added support for shadow DOM! This includes shadow roots, slots, composed events, and more. (pmdartus)</li>
<li>Added the <code>element.toggleAttribute()</code> method.</li>
<li>Fixed <code>XMLHttpRequest</code> sometimes sending an empty request body after a preflight request. (andreasf)</li>
<li>Fixed the <code>formElement.form</code> property to use an algorithm that also checks the <code>form=&quot;&quot;</code> attribute, instead of always looking for the closest ancestor <code>&lt;form&gt;</code> element. (jamietre)</li>
<li>Stopped swallowing errors when the <code>canvas</code> or <code>canvas-prebuilt</code> packages were installed, but failed to load. (joscha)</li>
</ul>
<h2 id="_12-1-0"><a class="header-anchor" href="#_12-1-0">#</a> 12.1.0</h2>
<ul>
<li>Dramatically upgraded our XML parser, from the unmaintained <a href="https://github.com/isaacs/sax-js" target="_blank" rel="noopener noreferrer"><code>sax</code><OutboundLink/></a> package to the well-maintained <a href="https://github.com/lddubeau/saxes" target="_blank" rel="noopener noreferrer"><code>saxes</code><OutboundLink/></a> replacement. This increases our specification conformance, including rejecting certain ill-formed XML documents that were previously accepted, and properly handling other constructs like empty comments, CDATA sections, and <code>&lt;script&gt;</code> elements. (lddubeau)</li>
<li>Added <code>fieldsetEl.elements</code> and <code>fieldsetEl.type</code> properties.</li>
<li>Added the <code>options</code> parameter to <code>dom.runVMScript()</code>. (SimenB)</li>
<li>Added the ability for custom resource loader <code>fetch()</code> implementations to see what element initiated the fetch. (sarvaje)</li>
<li>Fixed <code>input</code> and <code>change</code> events for <code>&lt;input&gt;</code> elements to be trusted and uncancelable.</li>
<li>&quot;Fixed&quot; <code>&lt;script&gt;</code>s with the <code>async</code> attribute to not execute before sync <code>&lt;script&gt;</code>s that precede them. We still do not, in general, have proper execution of scripts during the initial parsing of a document, so this fix is more of a reduction of badness than an alignment with the specification. This behavior regressed in v12.0.0. (sarvaje)</li>
</ul>
<h2 id="_12-0-0"><a class="header-anchor" href="#_12-0-0">#</a> 12.0.0</h2>
<p>This major release brings along our <a href="https://github.com/jsdom/jsdom#loading-subresources" target="_blank" rel="noopener noreferrer">new resource loader API<OutboundLink/></a>, finally bringing all the capabilities from jsdom v9 to the new (jsdom v10+) API. Thanks very much to <a href="https://github.com/sarvaje" target="_blank" rel="noopener noreferrer">@sarvaje<OutboundLink/></a> for his work to make this possible!</p>
<p>Breaking changes:</p>
<ul>
<li>jsdom now requires Node.js v8.</li>
<li>Removed the old jsdom API, as the new API now has all the capabilities you need.</li>
<li>Updated our <a href="https://github.com/inikulin/parse5/" target="_blank" rel="noopener noreferrer"><code>parse5</code><OutboundLink/></a> dependency to v5, which changes the format of the node locations returned by <code>dom.nodeLocation()</code>.</li>
<li>Updated our <a href="https://github.com/jsdom/whatwg-url" target="_blank" rel="noopener noreferrer"><code>whatwg-url</code><OutboundLink/></a> dependency to v7, which changes the origin of <code>file:</code> URLs to be an opaque origin (and thus <code>file:</code> URLs are no longer same origin to each other).</li>
</ul>
<p>Other changes:</p>
<ul>
<li>Added <code>countReset()</code>, <code>dir()</code> and <code>dirxml()</code> methods to <code>console</code>.</li>
<li>Added the <code>InputEvent</code> class.</li>
<li>Added <code>window.status</code>.</li>
<li>Added <code>htmlElement.draggable</code>.</li>
<li>Fixed <code>window.frameElement</code> to correctly return an actual <code>HTMLElement</code> instance, instead of a jsdom internal class.</li>
<li>Fixed cloning of <code>textarea</code> elements to preserve their values.</li>
<li>Fixed <code>select.selectedOptions</code> sometimes returning outdated results.</li>
<li>Fixed CSS selection APIs sometimes returning outdated results, especially for state pseudo-class selectors like <code>:checked</code>.</li>
<li>Fixed CSS selection APIs to throw an error for invalid selectors even when used on empty nodes.</li>
<li>Fixed <code>window.name</code> to default to the empty string, per spec, instead of <code>&quot;nodejs&quot;</code>.</li>
<li>Fixed the default User-Agent to say &quot;unknown OS&quot; instead of &quot;undefined&quot; when jsdom is used in web browsers.</li>
</ul>
<h2 id="_11-12-0"><a class="header-anchor" href="#_11-12-0">#</a> 11.12.0</h2>
<ul>
<li>Added <code>window.localStorage</code>, <code>window.sessionStorage</code>, and <code>StorageEvent</code> support. These are currently only stored in-memory; file an issue if you need persistent (on-disk) storage capability so we can discuss adding that. This feature includes the new <code>storageQuota</code> option for controlling how much can be stored.</li>
<li>Added <code>element.closest()</code>. (caub)</li>
<li>Changed <code>hashchange</code> and <code>popstate</code> events to no longer bubble, per a specification update.</li>
<li>Fixed the old API in Node.js v10 to not throw, when given input that is not a valid file path (such as a typical HTML string).</li>
<li>Upgraded <code>cssstyle</code> to v1.0.0, bringing along various fixes to our CSS parser and object model. (eddies)</li>
<li>Upgraded <code>nwsapi</code> to v2.0.7, bringing along various fixes to our selector engine.</li>
</ul>
<h2 id="_11-11-0"><a class="header-anchor" href="#_11-11-0">#</a> 11.11.0</h2>
<ul>
<li>Added <code>node.getRootNode()</code>. (FrecksterGIT)</li>
<li>Added <code>label.control</code>. (FrecksterGIT)</li>
<li>Added <code>el.labels</code> for form control elements. (FrecksterGIT)</li>
<li>Fixed the <code>contentType</code> of <code>Document</code>s created through <code>&lt;iframe&gt;</code>s.</li>
<li>Fixed the <code>contentType</code> and <code>origin</code> of <code>Document</code>s created through <code>document.implementation.createDocument()</code>.</li>
<li>Fixed <code>sourceEl.srcset</code> to return the value of the <code>srcset=&quot;&quot;</code> attribute, instead of the <code>cite=&quot;&quot;</code> attribute.</li>
<li>Fixed <code>node.normalize()</code> to not modify non-<code>Text</code> nodes. (lddubeau)</li>
<li>Upgraded <code>cssstyle</code> to v0.3.1, bringing along various fixes to our CSS parser and object model. (jsakas)</li>
<li>Upgraded <code>whatwg-url</code> to v6.4.1, fixing the interaction of <code>URL</code>'s <code>href</code> and <code>searchParams</code> properties.</li>
<li>Upgraded our selector matching engine from <code>nwsmatcher</code> to <code>nwsapi</code>, bringing along extensive fixes, performance improvements, and additional selector support.</li>
</ul>
<h2 id="_11-10-0"><a class="header-anchor" href="#_11-10-0">#</a> 11.10.0</h2>
<ul>
<li>Added <code>event.srcElement</code> and <code>event.returnValue</code>.</li>
<li>Fixed <code>XMLHttpRequest</code> to correctly set the User-Agent header, and set it on CORS preflight requests. (BehindTheMath)</li>
</ul>
<h2 id="_11-9-0"><a class="header-anchor" href="#_11-9-0">#</a> 11.9.0</h2>
<ul>
<li>Added <code>node.lookupPrefix()</code>, <code>node.lookupNamespaceURI()</code> and <code>node.isDefaultNamespace()</code>.</li>
<li>Fixed the cloning of <code>Document</code>s; previously it would not clone all of the appropriate state, and would sometimes add an extra document type node.</li>
<li>Fixed various edge cases in the <code>textContent</code> and <code>nodeValue</code> properties.</li>
<li>Fixed <code>canvas.toBlob()</code> to properly pass through the JPEG quality argument, instead of always passing zero to <code>node-canvas</code>. (challakoushik)</li>
</ul>
<h2 id="_11-8-0"><a class="header-anchor" href="#_11-8-0">#</a> 11.8.0</h2>
<ul>
<li>Added the full constraint validation API, i.e. <code>willValidate</code>, <code>validity</code>, <code>validationMessage</code>, <code>checkValidity()</code>, <code>reportValidity()</code>, and <code>setCustomValidity()</code>, on <code>HTMLButtonElement</code>, <code>HTMLFieldSetElement</code>, <code>HTMLFormElement</code>, <code>HTMLInputElement</code>, <code>HTMLObjectElement</code>, <code>HTMLOutputElement</code>, <code>HTMLSelectElement</code>, and <code>HTMLTextAreaElement</code>. (kontomondo)</li>
<li>Added <code>getElementById()</code> to <code>DocumentFragment</code>.</li>
</ul>
<h2 id="_11-7-0"><a class="header-anchor" href="#_11-7-0">#</a> 11.7.0</h2>
<ul>
<li>Added the boolean return value to <code>DOMTokenList</code>'s <code>replace()</code> method, per the recent spec addition.</li>
<li>Added <code>FileReader</code>'s <code>readAsBinaryString()</code> method, as it has been added back to the specification.</li>
<li>Fixed event handlers to be own properties of each <code>Window</code>, instead of on <code>Window.prototype</code>. (Fetz)</li>
<li>Fixed an exception that would sometimes get raised when removing an <code>&lt;img&gt;</code> element's <code>src=&quot;&quot;</code> attribute. (atsikov)</li>
<li>Fixed <code>abort</code> events on <code>AbortSignal</code>s to have their <code>isTrusted</code> set to true.</li>
<li>Fixed some argument conversions in <code>XMLHttpRequest</code>'s <code>open()</code> method.</li>
<li>Improved MIME type and <code>data:</code> URL parsing throughout jsdom, by using the new <a href="https://www.npmjs.com/package/whatwg-mimetype" target="_blank" rel="noopener noreferrer"><code>whatwg-mimetype</code><OutboundLink/></a> and <a href="https://www.npmjs.com/package/data-urls" target="_blank" rel="noopener noreferrer"><code>data-urls</code><OutboundLink/></a> packages.</li>
<li>Removed some unnecessary <code>.webidl</code> files that were included in the npm package.</li>
</ul>
<h2 id="_11-6-2"><a class="header-anchor" href="#_11-6-2">#</a> 11.6.2</h2>
<ul>
<li>Fixed another regression (since v11.6.0) in <code>&lt;style&gt;</code> elements, where they would omit a series of parsing <code>jsdomError</code> events for any style sheet text containing spaces.</li>
<li>Generally improved the spec-conformance of when <code>&lt;style&gt;</code> and <code>&lt;script&gt;</code> elements are evaluated; for example, <code>&lt;script&gt;</code> elements inserted by <code>innerHTML</code> are no longer evaluated.</li>
</ul>
<h2 id="_11-6-1"><a class="header-anchor" href="#_11-6-1">#</a> 11.6.1</h2>
<ul>
<li>Fixed one regression (since v11.6.0) in <code>&lt;style&gt;</code> elements, where their <code>sheet</code> property would sometimes be <code>null</code> when it should not be.</li>
<li>Fixed a case where a <code>&lt;style&gt;</code> element's <code>sheet</code> property would be left as a <code>CSSStyleSheet</code> despite it not being in the document.</li>
</ul>
<p>Another regression remains where we are emitting spurious CSS-parsing <code>jsdomError</code> events; see <a href="https://github.com/jsdom/jsdom/issues/2123" target="_blank" rel="noopener noreferrer">#2123<OutboundLink/></a>. We also discovered a large amount of preexisting brokenness around <code>&lt;style&gt;</code>, <code>&lt;link&gt;</code>, and <code>@import</code>; see <a href="https://github.com/jsdom/jsdom/issues/2124" target="_blank" rel="noopener noreferrer">#2124<OutboundLink/></a> for more details.</p>
<p>We'll try to fix these soon, especially the regression.</p>
<h2 id="_11-6-0"><a class="header-anchor" href="#_11-6-0">#</a> 11.6.0</h2>
<ul>
<li>Added a fully-functioning <code>WebSocket</code> implementation!</li>
<li>Added a <code>window.performance</code> implementation, including the basics of the <a href="https://w3c.github.io/hr-time/" target="_blank" rel="noopener noreferrer">High Resolution Time<OutboundLink/></a> specification: <code>performance.now()</code>, <code>performance.timeOrigin</code>, and <code>performance.toJSON()</code>.</li>
<li>Added support for all of the public API of <code>HTMLMeterElement</code>, except for <code>meterEl.labels</code>.</li>
<li>Added the <code>locationbar</code>, <code>menubar</code>, <code>personalbar</code>, <code>scrollbars</code>, <code>statusbar</code>, and <code>toolbar</code> properties to <code>Window</code>.</li>
<li>Added more properties to <code>window.screen</code>: <code>availWidth</code>, <code>availHeight</code>, <code>colorDepth</code>, and <code>pixelDepth</code>. All of its properties are now getters as well.</li>
<li>Added <code>window.devicePixelRatio</code>.</li>
<li>Added <code>getModifierState()</code> to <code>MouseEvent</code> and <code>KeyboardEvent</code>.</li>
<li>Added a setter for <code>HTMLInputElement</code>'s <code>files</code> property.</li>
<li>Added support for the <code>endings</code> option to the <code>Blob</code> constructor.</li>
<li>Fixed firing various event firings to have the correct default values, e.g. the properties of <code>MouseEvent</code> when using <code>element.click()</code>.</li>
<li>Fixed the firing of <code>popstate</code> and <code>hashchange</code> events during fragment navigation to make them trusted events.</li>
<li>Fixed <code>data:</code> URL parsing to not include the fragment portions.</li>
<li>Fixed all URL-accepting properties to properly perform <a href="https://infra.spec.whatwg.org/#javascript-string-convert" target="_blank" rel="noopener noreferrer">scalar value string conversion<OutboundLink/></a> and URL resolution.</li>
<li>Fixed many other small edge-case conformance issues in the API surface of various web APIs; see <a href="https://github.com/jsdom/jsdom/pull/2053" target="_blank" rel="noopener noreferrer">#2053<OutboundLink/></a> and <a href="https://github.com/jsdom/jsdom/pull/2081" target="_blank" rel="noopener noreferrer">#2081<OutboundLink/></a> for more information.</li>
<li>Fixed various APIs to use ASCII lowercasing, instead of Unicode lowercasing, for element and attribute names.</li>
<li>Fixed the encoding of a document created via <code>new Document()</code> to be UTF-8.</li>
<li>Fixed event handler properties behavior when given non-callable objects.</li>
<li>Increased the performance of parsing HTML documents with large numbers of sibling elements.</li>
<li>Removed <code>probablySupportsContext()</code> and <code>setContext()</code> from <code>HTMLCanvasElement</code>, per spec updates.</li>
<li>Removed the nonstandard <code>window.scrollLeft</code> and <code>window.scrollTop</code> properties, and the <code>window.createPopup()</code> method.</li>
</ul>
<h2 id="_11-5-1"><a class="header-anchor" href="#_11-5-1">#</a> 11.5.1</h2>
<p>(This should have been a minor release; oops.)</p>
<ul>
<li>Added <code>AbortSignal</code> and <code>AbortController</code>.</li>
<li>Fixed validation for file <code>&lt;input&gt;</code>s and implemented validation for more input types.</li>
</ul>
<h2 id="_11-4-0"><a class="header-anchor" href="#_11-4-0">#</a> 11.4.0</h2>
<p>For this release we'd like to welcome <a href="https://github.com/jsdom/jsdom/commits?author=Zirro" target="_blank" rel="noopener noreferrer">@Zirro<OutboundLink/></a> to the core team; his contributions over the course of this year have enhanced jsdom immensely.</p>
<ul>
<li>Added a rudimentary set of SVG element classes, namely <code>SVGElement</code>, <code>SVGGraphicsElement</code>, <code>SVGSVGElement</code>, <code>SVGTests</code>, <code>SVGAnimatedString</code>, <code>SVGNumber</code>, and <code>SVGStringList</code>. The main impact here is that SVG elements are now instances of <code>SVGElement</code>, instead of being simply <code>Element</code> (as they were in v11.3.0) or <code>HTMLUnknownElement</code> (as they were in v11.2.0 and previously). The only concrete subclass that is implemented is <code>SVGSVGElement</code>, for <code>&lt;svg&gt;</code> itself; other tags will not map to their correct classes, because those classes are not yet implemented.</li>
<li>Added the new <code>pretendToBeVisual</code> option, which controls the presence of the new <code>requestAnimationFrame()</code> and <code>cancelAnimationFrame()</code> methods, and the new values of <code>document.hidden</code>/<code>document.visibilityState</code>. <a href="https://github.com/jsdom/jsdom#pretending-to-be-a-visual-browser" target="_blank" rel="noopener noreferrer">See the README<OutboundLink/></a> for more information. (SimenB)</li>
<li>Added the <code>append()</code> and <code>prepend()</code> methods to <code>Document</code>, <code>DocumentFragment</code>, and <code>Element</code>. (caub)</li>
<li>Added the <code>before()</code>, <code>after()</code>, and <code>replaceWith()</code> methods to <code>DocumentType</code>, <code>Element</code>, and <code>CharacterData</code>. (caub)</li>
<li>Added <code>node.isConnected</code>.</li>
<li>Added <code>node.isSameNode()</code>.</li>
<li>Added support for parsing CDATA sections in XML documents, including in <code>domParser.parseFromString()</code>. (myabc)</li>
<li>Added appropriate <code>input.value</code> getter/setter logic for <code>&lt;input type=&quot;file&quot;&gt;</code>.</li>
<li>Significantly improved the spec-compliance of <code>NamedNodeMap</code>, i.e. of <code>element.attributes</code>, such that retrieving named or indexed properties will now always work properly.</li>
<li>Fixed <code>domParser.parseFromString()</code> to not parse HTML character entities in XML documents. (myabc)</li>
<li>Fixed <code>xhr.abort()</code> to clear any set headers.</li>
<li>Fixed <code>XMLHttpRequest</code> to always decoded responses as UTF-8 when <code>responseType</code> is set to <code>&quot;json&quot;</code>.</li>
<li>Fixed <code>XMLHttpRequest</code> CORS header handling, especially with regard to preflights and Access-Control-Allow-Headers. (ScottAlbertine)</li>
<li>Fixed the behavior of <code>radioButton.click()</code> to fire appropriate <code>input</code> and <code>change</code> events. (liqwid)</li>
<li>Fixed <code>querySelector()</code>/<code>querySelectorAll()</code> behavior for SVG elements inside <code>&lt;template&gt;</code> contents <code>DocumentFragment</code>s, including those created by <code>JSDOM.fragment()</code>. (caub)</li>
<li>Fixed the line number reporting in exception stack traces when using <code>&lt;script&gt;</code> elements, when <code>includeNodeLocations</code> is set.</li>
<li>Removed the <code>&lt;applet&gt;</code> element, <a href="https://github.com/whatwg/html/pull/1399" target="_blank" rel="noopener noreferrer">following the spec<OutboundLink/></a>.</li>
</ul>
<h2 id="_11-3-0"><a class="header-anchor" href="#_11-3-0">#</a> 11.3.0</h2>
<p>For this release we'd like to formally welcome <a href="https://github.com/jsdom/jsdom/commits?author=TimothyGu" target="_blank" rel="noopener noreferrer">@TimothyGu<OutboundLink/></a> to the core team, as a prolific contributor. He will join the illustrious ranks of those who do so much work on jsdom that we no longer note their names in the changelog.</p>
<ul>
<li>Added <code>table.tHead</code>, <code>table.tFoot</code>, and <code>table.caption</code> setters, and the <code>table.createTBody()</code> method.</li>
<li>Added <code>CompositionEvent</code> and <code>WheelEvent</code> classes.</li>
<li>Added a <code>&lt;details&gt;</code> element implementation. (Zirro)</li>
<li>Added stub <code>&lt;marquee&gt;</code> and <code>&lt;picture&gt;</code> element implementations. (Zirro)</li>
<li>Updated <code>uiEvent.initUIEvent()</code>, <code>keyboardEvent.initKeyboardEvent()</code>, and <code>mouseEvent.initiMouseEvent()</code> to match the latest specifications.</li>
<li>Converted <code>DOMTokenList</code> (used by, e.g., <code>element.classList</code>) to use proxies for improved specification compliance and &quot;liveness&quot;.</li>
<li>Fixed the <code>DOMException</code> class to be spec-compliant, including its constructor signature.</li>
<li>Fixed some subtle interactions between inline event handlers and other event listeners.</li>
<li>Fixed the element interface used when creating many of the more obscure elements.</li>
<li>Fixed the behavior of the <code>table.rows</code> getter, and the <code>table.createCaption()</code> and <code>table.deleteRow()</code> methods.</li>
<li>Fixed incorrect sharing of methods between interfaces that used mixins (e.g. previously <code>document.querySelector === documentFragment.querySelector</code>, incorrectly).</li>
<li>Fixed <code>FocusEvent</code> creation, which regressed in v11.2.0.</li>
<li>Fixed <code>UIEvent</code> to only allow initializing with <code>Window</code> objects for its <code>view</code> property.</li>
<li>Fixed the behavior of <code>tr.rowIndex</code> and <code>tr.deleteCall()</code>.</li>
<li>Fixed the element interface for <code>&lt;td&gt;</code> and <code>&lt;th&gt;</code> to be simply <code>HTMLTableCellElement</code>, and improved that class's spec compliance.</li>
<li>Fixed calling <code>label.click()</code> to not trigger the labeled control's activation behavior when the control is disabled. (schreifels)</li>
<li>Fixed <code>document.getElementsByName()</code> to return a <code>NodeList</code> instead of a <code>HTMLCollection</code>. (Zirro)</li>
<li>Significantly sped up synchronous <code>XMLHttpRequest</code>. (Zirro)</li>
</ul>
<h2 id="_11-2-0"><a class="header-anchor" href="#_11-2-0">#</a> 11.2.0</h2>
<p>This release brings with it a much-awaited infrastructure change, as part of <a href="https://github.com/jsdom/webidl2js/releases/tag/v7.3.0" target="_blank" rel="noopener noreferrer">webidl2js v7.3.0<OutboundLink/></a> by the ever-amazing TimothyGu: jsdom can now generate spec-compliant versions of classes that have &quot;<code>Proxy</code>-like&quot; behavior, i.e. allow getting or setting keys in unusual ways. This enables a number of improvements, also by TimothyGu:</p>
<ul>
<li>Significantly improved the spec-compliance and &quot;liveness&quot; of both <code>NodeList</code> and <code>HTMLCollection</code>, such that retrieving properties via indices or (in <code>HTMLCollection</code>'s case) <code>id</code>/<code>name</code> values will always work correctly.</li>
<li>Added <code>element.dataset</code> support.</li>
<li>Added indexed and named access to <code>&lt;select&gt;</code> elements, as well as the corresponding <code>item()</code> and <code>namedItem()</code> methods.</li>
<li>Added suport for <code>FileList</code> indexed properties, i.e. <code>fileList[i]</code>.</li>
<li>Made <code>select.options</code> an instance of the newly-implemented <code>HTMLOptionsCollection</code>, instead of just a <code>HTMLCollection</code>.</li>
</ul>
<p>This infrastructure will allow us to improve and implement many other similar behaviors; that work is being tracked in <a href="https://github.com/jsdom/jsdom/issues/1129" target="_blank" rel="noopener noreferrer">#1129<OutboundLink/></a>.</p>
<p>In addition to these improvements to the object model, we have more work to share:</p>
<ul>
<li>Added no-op APIs <code>document.clear()</code>, <code>document.captureEvents()</code>, <code>document.releaseEvents()</code>, <code>window.external.AddSearchProvider()</code>, and <code>window.external.IsSearchProviderInstalled()</code>. (Zirro)</li>
<li>Added active checks to prevent reentrancy in <code>TreeWalker</code> and <code>NodeIterator</code>.</li>
<li>Updated the interaction between a <code>&lt;textarea&gt;</code>'s <code>value</code>, <code>defaultValue</code>, and <code>textContent</code> per <a href="https://github.com/whatwg/html/commit/5afbba1cf62ee01bc6af3fd220d01f3f7591a0fc" target="_blank" rel="noopener noreferrer">a recent spec change<OutboundLink/></a></li>
<li>Fixed elements with <code>id=&quot;undefined&quot;</code> shadowing the <code>undefined</code> property of the global object. (TimothyGu)</li>
<li>Fixed matching in <code>getElementsByClassName()</code> to be ASCII case-insensitive, instead of using JavaScript's <code>toLowerCase()</code>.</li>
<li>Improved some behaviors around navigating to fragments. (ForbesLindesay)</li>
<li>Improved <code>XMLHttpRequest</code> and <code>FileReader</code> behavior, mainly around event handlers, <code>abort()</code>, and network errors.</li>
<li>Improved edge-case spec compliance of <code>NodeIterator</code>.</li>
</ul>
<h2 id="_11-1-0"><a class="header-anchor" href="#_11-1-0">#</a> 11.1.0</h2>
<ul>
<li>Added <code>javascript:</code> URL &quot;navigation&quot; via <code>window.location</code>, at least by evaluating the side effects. It still doesn't actually navigate anywhere. (ForbesLindesay)</li>
<li>Updated <code>whatwg-url</code> to v6.1.0, bringing along origin serialization changes and <code>URLSearchParams</code> among various other fixes. (ForbesLindesay)</li>
<li>Fixed <code>javascript:</code> URL loading for iframes to do proper percent-decoding and error reporting.</li>
<li>Fixed corrupted <code>XMLHttpRequest</code> responses when they were over 1 MiB.</li>
<li>Fixed timers to not start after a window is <code>close()</code>d, which could cause strange errors since most objects are unusable at that point. (Enverbalalic)</li>
</ul>
<h2 id="_11-0-0"><a class="header-anchor" href="#_11-0-0">#</a> 11.0.0</h2>
<p>Breaking changes:</p>
<ul>
<li>Custom parsers, via the <code>parser</code> option to the old API, can no longer be specified. They were never tested, often broken, and a maintenance burden. The defaults, of <a href="https://www.npmjs.com/package/parse5" target="_blank" rel="noopener noreferrer">parse5<OutboundLink/></a> for HTML and <a href="https://www.npmjs.com/package/sax" target="_blank" rel="noopener noreferrer">sax<OutboundLink/></a> for XML, now always apply.</li>
<li>Due to a parse5 upgrade, the location info objects returned by <code>dom.nodeLocation()</code> or the old API's <code>jsdom.nodeLocation()</code> now have a different structure.</li>
<li>Fixed how <code>runScripts</code> applies to event handler attributes; now they will no longer be converted into event handler functions unless <code>runScripts: &quot;dangerously&quot;</code> is set. However, event handler <em>properties</em> will now work with any <code>runScripts</code> option value, instead of being blocked.</li>
</ul>
<p>Other changes:</p>
<ul>
<li>Overhauled how event handler properties and attributes work to follow the spec. In particular, this adds various <code>oneventname</code> properties to various prototypes, ensures the correct order when interleaving event handlers and other event listeners, and ensures that event handlers are evaluated with the correct values in scope.</li>
<li>Upgraded parse5 from v1 to v3, bringing along several correctness improvements to HTML parsing. (Zirro)</li>
<li>Updated <code>Location</code> properties to be on the instance, instead of the prototype, and to be non-configurable.</li>
<li>Significantly improved the performance of <code>HTMLCollection</code>, and thus of parsing large documents. (Zirro)</li>
<li>Significantly improved the performance of <code>getComputedStyle()</code> by removing unsupported selectors from the default style sheet. (flaviut)</li>
<li>Fixed all web platform methods that accepted web platform objects to perform proper type checks on them, throwing a <code>TypeError</code> when given invalid values. (TimothyGu)</li>
<li>Fixed the <code>Symbol.toStringTag</code> properties to be non-writable and non-enumerable. (TimothyGu)</li>
<li>Fixed <code>tokenList.remove()</code> when the <code>DOMTokenList</code> corresponded to a non-existant attribute. (Zirro)</li>
<li>Fixed <code>fileReader.abort()</code> to terminate ongoing reads properly.</li>
<li>Fixed <code>xhr.send()</code> to support array buffer views, not just <code>ArrayBuffer</code>s. (ondras)</li>
<li>Fixed non-<code>GET</code> requests to <code>data:</code> URLs using <code>XMLHttpRequest</code>. (Zirro)</li>
<li>Fixed form submission to no longer happen for disconnected forms.</li>
<li>Fixed body event handler attributes to be treated like all others in terms of how they interact with <code>runScripts</code>.</li>
<li>Many updates per recent spec changes: (Zirro)
<ul>
<li>Updated <code>tokenList.replace()</code> edge-case behavior.</li>
<li>Invalid qualified names now throw <code>&quot;InvalidCharacterError&quot;</code> <code>DOMException</code>s, instead of <code>&quot;NamespaceError&quot;</code> <code>DOMException</code>s.</li>
<li>Changed <code>input.select()</code> to no longer throw on types where selection does not apply.</li>
<li>Updated <code>event.initEvent()</code> and various related methods to have additional defaults.</li>
<li>Stopped lowercasing headers in <code>XMLHttpRequest</code> responses.</li>
<li>Started lowercasing headers in <code>xhr.getAllResponseHeaders()</code>, and separating the header values with a comma-space (not just a comma).</li>
<li>Allow a redirect after a CORS preflight when using <code>XMLHttpRequest</code>.</li>
<li>Tweaked username/password CORS treatment when using <code>XMLHttpRequest</code>.</li>
<li>Changed <code>xhr.overrideMimeType()</code> to no longer throw for invalid input.</li>
<li>Removed <code>blob.close()</code> and <code>blob.isClosed()</code>.</li>
</ul>
</li>
<li>Removed some remaining not-per-spec <code>toString()</code> methods on various prototypes, which were made redundant in v10.1.0 but we forgot to remove.</li>
</ul>
<h2 id="_10-1-0"><a class="header-anchor" href="#_10-1-0">#</a> 10.1.0</h2>
<ul>
<li>Added the value sanitization algorithm for password, search, tel, text, color, email, and url input types. (Zirro)</li>
<li>Added <code>Symbol.toStringTag</code> to all web platform classes, so that now <code>Object.prototype.toString.call()</code> works as expected on jsdom objects.</li>
<li>Added the <code>select.selectedOptions</code> property.</li>
<li>Removed the <code>toString()</code> methods on various prototypes that returned <code>&quot;[object ClassName]&quot;</code> in an attempt to fake the <code>Symbol.toStringTag</code> behavior.</li>
<li>Changed <code>XMLHttpRequest</code> to pre-allocate a 1 MiB buffer, which it grows exponentially as needed, in order to avoid frequent buffer allocation and concatenation. (skygon)</li>
<li>Fixed a variety of properties that were meant to always return the same object, to actually do so. (Zirro)</li>
<li>Fixed inheritance of the <code>runScripts</code> and <code>resources</code> options into iframes.</li>
<li>Fixed an uncaught exception that occurred if you called <code>xhr.abort()</code> during a <code>readystatechange</code> event.</li>
</ul>
<h2 id="_10-0-0"><a class="header-anchor" href="#_10-0-0">#</a> 10.0.0</h2>
<p>This release includes a complete overhaul of jsdom's API for creating and manipulating jsdoms. The new API is meant to be much more intuitive and have better defaults, with complete documentation in the newly-overhauled README. We hope you like it!</p>
<p>As discussed in the new README, the old API is still available and supported via <code>require(&quot;jsdom/lib/old-api.js&quot;)</code>, at least until we have ported all of its features over to the new API. It will, however, not be gaining any new features, and we suggest you try the new API unless you really need the customizable resource loading the old API provides.</p>
<p>Apart from the new API, the following changes were made, with breaking changes bolded:</p>
<ul>
<li><strong>Removed support for Node.js v4 and v5</strong>, as we have started using new JavaScript features only supported in Node.js v6 onwards.</li>
<li><strong>Changed the <code>omitJsdomErrors</code> option to <code>omitJSDOMErrors</code></strong>, for consistency <a href="https://w3ctag.github.io/design-principles/#casing-rules" target="_blank" rel="noopener noreferrer">with web platform APIs<OutboundLink/></a>.</li>
<li>Added <code>document.dir</code>. (Zirro)</li>
<li>Updated the <code>&lt;a&gt;</code> and <code>&lt;area&gt;</code> APIs to the latest specification, and fixed a few bugs with them. (makana)</li>
<li>Fixed <code>&lt;img&gt;</code> elements to no longer fire <code>load</code> events unless their image data is actually loaded (which generally only occurs when the <code>canvas</code> package is installed).</li>
<li>Fixed <code>XMLHttpRequest</code> preflights to forward approved preflight headers to the actual request. (mbroadst)</li>
<li>Fixed <code>htmlElement.dir</code> to properly restrict its values to <code>&quot;ltr&quot;</code>, <code>&quot;rtl&quot;</code>, or <code>&quot;auto&quot;</code>. (Zirro)</li>
<li>Fixed setting <code>innerHTML</code> to the empty string to no longer be a no-op. (Zirro)</li>
<li>Fixed the origin-checking logic in <code>window.postMessage()</code>, so that now you don't always have to pass an origin of <code>&quot;*&quot;</code>. (jmlopez-rod)</li>
<li>Improved the <code>xhr.open()</code> error message when there are not enough arguments. (lencioni)</li>
</ul>
<h2 id="_9-12-0"><a class="header-anchor" href="#_9-12-0">#</a> 9.12.0</h2>
<ul>
<li>Added the <code>Option</code> named constructor. (NAlexPear)</li>
<li>Added support for the <code>canvas-prebuilt</code> npm package as an alternative to <code>canvas</code>. (asturur)</li>
<li>Fixed <code>setTimeout()</code> and <code>setInterval()</code> to always return a positive integer, instead of returning <code>0</code> the first time were called. (yefremov)</li>
<li>Fixed <code>jsdom.env()</code> to preserve URL fragments across redirects. (josephfrazier)</li>
<li>Fixed <code>optionEl.text</code> and <code>optionEl.value</code> to be more spec-compliant.</li>
<li>Fixed <code>event.stopImmediatePropagation()</code> to actually stop immediate propagation, not just propagation.</li>
<li>Fixed <code>clearTimeout()</code> and <code>clearInterval()</code> to work correctly when using jsdom browserified.</li>
</ul>
<h2 id="_9-11-0"><a class="header-anchor" href="#_9-11-0">#</a> 9.11.0</h2>
<ul>
<li>Added dummy properties <code>offsetTop</code>, <code>offsetLeft</code>, <code>offsetWidth</code>, and <code>offsetHeight</code> that always return <code>0</code>, and <code>offsetParent</code> which always returns <code>null</code>, for all HTML elements. (yefremov)</li>
<li>Fixed various edge cases in our type conversions applied to method arguments and setters throughout the web platform APIs implemented by jsdom.</li>
</ul>
<h2 id="_9-10-0"><a class="header-anchor" href="#_9-10-0">#</a> 9.10.0</h2>
<ul>
<li>Added <code>forEach</code>, <code>keys</code>, <code>values</code>, and <code>entries</code> methods to <code>NodeList</code>.</li>
<li>Added <code>event.cancelBubble</code>.</li>
<li>Added dummy properties <code>scrollWidth</code>, <code>scrollHeight</code>, <code>clientTop</code>, <code>clientLeft</code>, <code>clientWidth</code>, and <code>clientHeight</code> that always return <code>0</code> to all elements. (alistairjcbrown)</li>
<li>Updated many aspects of <code>Blob</code>, <code>File</code>, and <code>FileReader</code> to better match the File API specification. (TimothyGu)</li>
<li>Fixed the progress and readystatechange events fired by <code>XMLHttpRequest</code> to match recent specification changes and test updates.</li>
<li>Fixed <code>element.getClientRects()</code> to return an empty array, instead of an array containing a dummy bounding box. (alistairjcbrown)</li>
<li>Changed <code>navigator.vendor</code> to return <code>&quot;Apple Computer, Inc.&quot;</code> instead of <code>&quot;Google Inc.&quot;</code>, since we have chosen the WebKit <a href="https://html.spec.whatwg.org/multipage/webappapis.html#concept-navigator-compatibility-mode" target="_blank" rel="noopener noreferrer">navigator compatibility mode<OutboundLink/></a>.</li>
</ul>
<h2 id="_9-9-1"><a class="header-anchor" href="#_9-9-1">#</a> 9.9.1</h2>
<ul>
<li>Removed the use of <code>array.includes</code> to fix a compatibility issue with Node.js v4.</li>
</ul>
<h2 id="_9-9-0"><a class="header-anchor" href="#_9-9-0">#</a> 9.9.0</h2>
<ul>
<li>Added <code>CDATASection</code> nodes, including <code>document.createCDATASection</code>. (snuggs)</li>
<li>Added <code>node.wholeText</code>. (jdanyow)</li>
<li>Added a setter for <code>document.body</code>.</li>
<li>Added <code>document.embeds</code>, <code>document.plugsin</code>, and <code>document.scripts</code>. These were supposed to be added in 9.5.0 but were mistakenly omitted.</li>
<li>Fixed <code>element.insertAdjacentHTML</code> to work when the element has null or the document as its parent node, as long as the insertion position is <code>&quot;afterbegin&quot;</code> or <code>&quot;beforeend&quot;</code>.</li>
<li>Fixed form submission to only hit the &quot;not implemented&quot; virtual console message when form submission is <em>not</em> canceled, instead of when it is.</li>
<li>Fixed an issue where the event listener was not being correctly removed when using the <code>{ once: true }</code> option to <code>addEventListener</code>. (i8-pi)</li>
<li>Fixed an error that was thrown when using <code>XHTMLHttpRequest</code> and POSTing JSON contents to an endpoint that requires CORS while using an <code>Authorization</code> header. (dunnock)</li>
<li>Fixed <code>document.body</code> and <code>document.title</code> to act more correctly in various edge cases.</li>
<li>Fixed <code>HTMLCollection</code> named access to return the first element encountered, not the last.</li>
</ul>
<h2 id="_9-8-3"><a class="header-anchor" href="#_9-8-3">#</a> 9.8.3</h2>
<ul>
<li>Fixed syntax errors in Node.js v4.</li>
</ul>
<h2 id="_9-8-2"><a class="header-anchor" href="#_9-8-2">#</a> 9.8.2</h2>
<ul>
<li>Fixed <code>DOMTokenList</code> and <code>getElementsByClassName</code> to only split on ASCII whitespace, not all Unicode whitespace.</li>
</ul>
<h2 id="_9-8-1"><a class="header-anchor" href="#_9-8-1">#</a> 9.8.1</h2>
<ul>
<li>Fixed an error that occurred when passing no class names to <code>getElementsByClassName</code>, e.g. <code>getElementsByClassName(&quot;&quot;)</code> or <code>getElementsByClassName(&quot; &quot;)</code>.</li>
</ul>
<h2 id="_9-8-0"><a class="header-anchor" href="#_9-8-0">#</a> 9.8.0</h2>
<ul>
<li>Added the <code>blob.isClosed</code> property. (TimothyGu)</li>
<li>Fixed the <code>file.lastModified</code> property to be on <code>File</code> instead of on <code>Blob</code>. (TimothyGu)</li>
<li>Fixed the <code>file.lastModified</code> property to default to the time of the <code>File</code> object's creation, not the time that the property is accessed. (TimothyGu)</li>
<li>Fixed a minor edge-case regression where non-HTML elements with the name <code>&quot;iframe&quot;</code> became focusable in v9.7.0.</li>
</ul>
<h2 id="_9-7-1"><a class="header-anchor" href="#_9-7-1">#</a> 9.7.1</h2>
<ul>
<li>Fixed a performance regression introduced in 9.5.0 for modifying the DOM. It was particularly noticable during initial parsing of a document with many elements; for example, one test showed parsing ten thousand elements taking 36.4 seconds, whereas after this fix it is back to a more reasonable 0.4 seconds.</li>
</ul>
<h2 id="_9-7-0"><a class="header-anchor" href="#_9-7-0">#</a> 9.7.0</h2>
<ul>
<li>Added <code>EventListenerOptions</code> support to <code>addEventListener</code> and <code>removeEventListener</code>, including both the <code>once</code> and <code>capture</code> options. (GianlucaGuarini)</li>
<li>Added <code>document.hasFocus()</code> (acusti)</li>
<li>Fixed the focus management to ensure that focusing something inside an <code>iframe</code> will also focus the <code>iframe</code> itself. (acusti)</li>
</ul>
<h2 id="_9-6-0"><a class="header-anchor" href="#_9-6-0">#</a> 9.6.0</h2>
<ul>
<li>Added <code>HTMLCollection.prototype[Symbol.iterator]</code>, so you can use <code>for</code>-<code>of</code> loops over <code>HTMLCollection</code>s now. (i8-pi)</li>
<li>Fixed <code>file.lastModified</code> to return the current time as the default, instead of <code>0</code>.</li>
<li>Fixed cloning of <code>Attr</code>s to properly clone the namespace prefix.</li>
<li>Tweaked <code>XMLHttpRequest</code> progress event ordering slightly to better match the spec and browsers.</li>
<li>Tweaked the behavior of calling <code>event.stopPropagation</code> and <code>event.stopImmediatePropagation</code> on already-dispatched events, per <a href="https://github.com/whatwg/dom/commit/806d4aab584f6fc38c21f8e088b51b8ba3e27e20" target="_blank" rel="noopener noreferrer">the latest changes to the DOM Standard<OutboundLink/></a>.</li>
</ul>
<h2 id="_9-5-0"><a class="header-anchor" href="#_9-5-0">#</a> 9.5.0</h2>
<ul>
<li>Added <code>document.scripts</code>, <code>document.embeds</code>, and <code>document.plugins</code>.</li>
<li>Fixed <code>document.getElementsByTagName</code> and <code>document.getElementsByTagNameNS</code> to return <code>HTMLCollection</code>s instead of <code>NodeList</code>s, and to follow the spec algorithms more exactly.</li>
<li>Fixed various <code>HTMLCollection</code>-returning getters such as <code>document.applets</code> or <code>table.cells</code> to be more spec-compliant.</li>
<li>Fixed the resource loader to respect the <code>agent</code> and <code>agentClass</code> options, not just the <code>agentOptions</code> one.</li>
<li>Fixed <code>console.groupCollapse</code> to be <code>console.groupCollapsed</code> (and changed the virtual console accordingly).</li>
</ul>
<h2 id="_9-4-5"><a class="header-anchor" href="#_9-4-5">#</a> 9.4.5</h2>
<ul>
<li>Fixed <code>error</code> events from failed resource loads going missing since v9.4.3. I really should have tested that release better.</li>
</ul>
<h2 id="_9-4-4"><a class="header-anchor" href="#_9-4-4">#</a> 9.4.4</h2>
<ul>
<li>Fixed a leftover <code>console.log</code> introduced in the error handling path in v9.4.3.</li>
</ul>
<h2 id="_9-4-3"><a class="header-anchor" href="#_9-4-3">#</a> 9.4.3</h2>
<ul>
<li>Fixed spurious <code>&quot;jsdomError&quot;</code>s occuring when closing a window, due to aborted resource loads.</li>
</ul>
<h2 id="_9-4-2"><a class="header-anchor" href="#_9-4-2">#</a> 9.4.2</h2>
<ul>
<li>Fixed what would happen when inline event handlers (such as <code>element.onclick</code>) would return non-boolean values (such as <code>undefined</code>); it would previously erroneously cancel the event, in many cases. (dmethvin)</li>
<li>Upgraded the minimum tough-cookie version to ensure all installations are protected against <a href="https://nodesecurity.io/advisories/130" target="_blank" rel="noopener noreferrer">a security advisory<OutboundLink/></a>.</li>
</ul>
<h2 id="_9-4-1"><a class="header-anchor" href="#_9-4-1">#</a> 9.4.1</h2>
<ul>
<li>Implemented the cloning steps for <code>&lt;input&gt;</code> elements, so that cloned inputs properly copy over their value, checkedness, dirty value flag, and dirty checkedness flag. (matthewp)</li>
</ul>
<h2 id="_9-4-0"><a class="header-anchor" href="#_9-4-0">#</a> 9.4.0</h2>
<ul>
<li>Added the <code>DOMParser</code> API. It is spec-compliant, including producing <code>&lt;parsererror&gt;</code> elements, except that the produced documents do not have the same URL as the creating document (they instead always have <code>&quot;about:blank&quot;</code>).</li>
<li>Added strict XML parsing when using <code>parsingMode: &quot;xml&quot;</code>. Creating documents will now fail, just like in a browser, when ill-formed XHTML markup is used.</li>
<li>Added some rudimentary application of XML <code>&lt;!ENTITY</code> declarations.</li>
<li>Added <code>window.frameElement</code>, although without appropriate cross-origin security checks.</li>
<li>Added the <code>jsdom.evalVMScript</code> public API.</li>
<li>Added more custom request agent support: you can now pass <code>agent</code> and <code>agentClass</code> in addition to <code>agentOptions</code>. (frarees)</li>
<li>Updated our elements-being-disabled semantics to more closely match the spec, in particular with regard to being descendants of <code>&lt;fieldset disabled&gt;</code>.</li>
<li>Updated <code>FormData</code> for <a href="https://github.com/whatwg/xhr/commit/1a75845e67792418a7721d516266ad01a90f2062" target="_blank" rel="noopener noreferrer">recent spec fixes<OutboundLink/></a>: blobs, files, and filenames should now all work like you'd expect.</li>
<li>Updated the <code>FormData</code> constructor to use the proper, rather-complex, <a href="https://html.spec.whatwg.org/multipage/forms.html#constructing-form-data-set" target="_blank" rel="noopener noreferrer">constructing the form data set<OutboundLink/></a> algorithm.</li>
<li>Fixed all constructors that appears as globals on the jsdom <code>window</code> object to be non-enumerable.</li>
<li>Fixed <code>&lt;script&gt;</code> elements to load when they gain a <code>src</code> attribute while in a document.</li>
<li>Fixed <code>&lt;link rel=&quot;stylesheet&quot;&gt;</code> elements to load when their <code>href</code> attributes change while in a document.</li>
<li>Fixed the loading of external <code>&lt;img&gt;</code>s (when the <code>canvas</code> npm package is installed) that were specified via relative URL; this regressed in 9.2.1.</li>
<li>Fixed <code>&lt;iframe&gt;</code> documents to have the correct <code>referrer</code> value (viz. the URL of their parent).</li>
<li>Fixed the value of <code>input.checked</code> inside <code>click</code> events on checkboxes.</li>
<li>Fixed the window object's named properties to correctly return the <code>&lt;iframe&gt;</code> element or the <code>&lt;iframe&gt;</code>'s window in appropriate scenarios involving <code>name</code> vs. <code>id</code> attributes on the <code>&lt;iframe&gt;</code>. (matthewp)</li>
</ul>
<h2 id="_9-3-0"><a class="header-anchor" href="#_9-3-0">#</a> 9.3.0</h2>
<ul>
<li>Added the <code>Audio</code> named constructor.</li>
<li>Fixed the <code>Image</code> named constructor to follow the spec more closely (e.g. <code>Image.prototype</code> is now equal to <code>HTMLImageElement.prototype</code>).</li>
<li>Fixed the <code>tabIndex</code> setter, which regressed in 9.1.0, to no longer cause errors.</li>
<li>Made submit buttons and labels respond to click event cancelation correctly, preventing form submission and re-dispatching to the relevant form control. (marcandre)</li>
<li>Fixed unhandled errors thrown in XHR event handlers being swallowed; they now properly are redirected to the virtual console.</li>
</ul>
<h2 id="_9-2-1"><a class="header-anchor" href="#_9-2-1">#</a> 9.2.1</h2>
<ul>
<li>Fixed <code>&lt;input&gt;</code>'s <code>selectionStart</code>, <code>selectionEnd</code>, and <code>selectionDirection</code> getters to return null, instead of throwing, for elements that do not allow selection, per <a href="https://github.com/whatwg/html/pull/1006" target="_blank" rel="noopener noreferrer">a recent spec change<OutboundLink/></a>.</li>
<li>Fixed <code>&lt;base&gt;</code>'s <code>href</code> getter logic to return the attribute value instead of the empty string for unparseable URLs, per <a href="https://github.com/whatwg/html/pull/1064" target="_blank" rel="noopener noreferrer">a recent spec change<OutboundLink/></a>.</li>
<li>Fixed the referrer sent when retrieving external resources to be the document's URL, not the document's base URL.</li>
<li>Fixed suppression of all <code>error</code> events on <code>window</code> beyond the first one.</li>
<li>Fixed <code>new URL</code> to correctly throw for unparseable URLs, and all of <code>URL</code>'s setters to correctly ignore invalid input instead of throwing.</li>
<li>Fixed <code>StyleSheetList.prototype.item</code> to return <code>null</code> instead of <code>undefined</code> for out-of-bounds indices. (Ginden)</li>
<li>Updated <code>cssstyle</code> minimum version to ensure all jsdom installs (not just fresh ones) get the benefit of <code>cssstyle</code>'s recently-better <code>background</code> and <code>width</code> setters.</li>
</ul>
<h2 id="_9-2-0"><a class="header-anchor" href="#_9-2-0">#</a> 9.2.0</h2>
<ul>
<li>Added <code>jsdom.changeURL(window, newURL)</code> for allowing you to override a window's existing URL. (mummybot)</li>
<li>Fixed the <code>proxy</code> option to be applied to all requests; previously it was not always passed through. (nicolashenry)</li>
<li>Fixed <code>XMLHttpRequest</code> response header filtering for cross-origin requests; this also fixes <code>ProgressEvent</code>s fired from such XHRs. (nicolashenry)</li>
</ul>
<h2 id="_9-1-0"><a class="header-anchor" href="#_9-1-0">#</a> 9.1.0</h2>
<ul>
<li>Added a somewhat-reasonable implementation of focus and focus events. Although the full complexity of focus is not implemented, the following improvements have been made:
<ul>
<li>Only elements which are focusable can be focused.</li>
<li>Added the <code>FocusEvent</code> class, and now <code>focus</code> and <code>blur</code> events are fired appropriately.</li>
<li><code>tabIndex</code> now returns <code>0</code> by default for focusable elements.</li>
</ul>
</li>
<li>Reimplemented <code>navigator</code> to be to-spec:
<ul>
<li>Added <code>appCodeName</code>, <code>product</code>, <code>productSub</code>, <code>vendor</code>, and <code>vendorSub</code>; also changes <code>userAgent</code>, <code>appName</code>, <code>platform</code>, and <code>version</code> to be more browser-like instead of based on various Node.js information.</li>
<li>Added <code>language</code> and <code>languages</code>.</li>
<li>Added <code>onLine</code>.</li>
<li>Added <code>javaEnabled()</code>.</li>
<li>Removed <code>noUI</code>.</li>
</ul>
</li>
<li>Fixed <code>formEl.action</code> to return a value resolved relative to the document URL, or to return the document URL if the corresponding attribute is missing or empty.</li>
<li>Sped up XPath execution. (vsemozhetbyt)</li>
<li>Fixed <code>window.close()</code> not correctly clearing event listeners on the document. (Ojek)</li>
<li>Fixed a regression introduced in v9.0.0 where invalid CSS would cause a crash while attempting to parse it. Instead, a <code>&quot;jsdomError&quot;</code> will now be emitted to the virtual console.</li>
</ul>
<h2 id="_9-0-0"><a class="header-anchor" href="#_9-0-0">#</a> 9.0.0</h2>
<p>This major release removes jsdom's support for mutation events. Mutation events were never well-specified, and the modern DOM Standard omits them in the hopes that they can be removed from browsers (although this has not yet happened in major browser engines). We had hoped to implement their modern alternative, mutation observers, before performing this removal, to give jsdom users the same capabilities.</p>
<p>However, recent performance investigations revealed that mutation events were the major bottleneck in most jsdom operations; tools like <a href="https://github.com/bterlson/ecmarkup" target="_blank" rel="noopener noreferrer">ecmarkup<OutboundLink/></a> which make heavy use of jsdom had their running time halved by removing mutation events, which add serious overhead to every DOM mutation. As such, we are doing a major release with them removed, so that jsdom users can benefit from this massive performance gain.</p>
<p>Mutation observer support is <a href="https://github.com/jsdom/jsdom/issues/639" target="_blank" rel="noopener noreferrer">in progress<OutboundLink/></a>; please use the GitHub reactions feature to vote on that issue if you are impacted by this removal and are hoping for mutation observer support to replace it.</p>
<p>Your normal change log follows:</p>
<ul>
<li><strong>Removed mutation events</strong>, as discussed above.</li>
<li>Added the <code>DOMTokenList.prototype.replace</code> method. (nicolashenry)</li>
<li>Updated <code>DOMTokenList.prototype.contains</code> to no longer validate its arguments, as per the latest spec. (nicolashenry)</li>
<li>Made various improvements to XMLHttpRequest (nicolashenry):
<ul>
<li>Added the <code>responseURL</code> property.</li>
<li>Updated methods, headers, and header values to use the <code>ByteString</code> algorithm.</li>
<li>Fixed the default <code>statusText</code> to be <code>&quot;&quot;</code> instead of <code>&quot;OK&quot;</code>.</li>
</ul>
</li>
<li>Fixed the <code>Blob</code> constructor's <code>type</code> validation. (nicolashenry)</li>
</ul>
<h2 id="_8-5-0"><a class="header-anchor" href="#_8-5-0">#</a> 8.5.0</h2>
<ul>
<li>Added encoding handling (nicolashenry)
<ul>
<li><code>jsdom.env</code>, when given a URL or file, will decode the resulting bytes using signals like the <code>Content-Type</code> header, <code>&lt;meta charset&gt;</code> declaration, or presence of a BOM, in the same manner as web browsers.</li>
<li>Fetching external resources, via mechanisms such as XMLHttpRequest or <code>&lt;script&gt;</code>/<code>&lt;link&gt;</code>/<code>&lt;iframe&gt;</code> tags, will also account for such signals.</li>
<li><code>jsdom.jsdom()</code>, which takes a string, still sets a &quot;UTF-8&quot; encoding by default, since there are no bytes or headers for it to sniff an encoding from.</li>
</ul>
</li>
<li>Removed <code>iframe.sandbox</code> property, since it was not implemented and simply crashed when used.</li>
<li>Removed <code>element.sourceIndex</code> property, since it was nonstandard (Internet Explorer only).</li>
<li>Fixed setting proxied inline event handlers, such as <code>doc.body</code>'s <code>onload=&quot;&quot;</code> attribute, for documents that do not have a browsing context.</li>
</ul>
<h2 id="_8-4-1"><a class="header-anchor" href="#_8-4-1">#</a> 8.4.1</h2>
<ul>
<li>Fixed an issue where setting <code>selected</code> on an multi-select would clear all other selectedness.</li>
</ul>
<h2 id="_8-4-0"><a class="header-anchor" href="#_8-4-0">#</a> 8.4.0</h2>
<ul>
<li>Added an implementation of the <code>TreeWalker</code> class (and <code>document.createTreeWalker</code>). (garycourt)</li>
<li>Fixed a few minor bugs in URL parsing and the <code>URL</code> API, by upgrading to <code>whatwg-url</code> v2.0.1.</li>
<li>Fixed a few issues with generated files in the published package, which seem to have impacted webpack users.</li>
</ul>
<h2 id="_8-3-1"><a class="header-anchor" href="#_8-3-1">#</a> 8.3.1</h2>
<ul>
<li>Fixed an issue where if you modified <code>Object.prototype</code>, spurious attributes would show up on your jsdom nodes. (deckar01)</li>
</ul>
<h2 id="_8-3-0"><a class="header-anchor" href="#_8-3-0">#</a> 8.3.0</h2>
<ul>
<li>Added image loading and decoding, when the <code>canvas</code> npm package is installed (lehni). In practice, this means that if you enable fetching <code>&quot;img&quot;</code> external resources, then:
<ul>
<li><code>img.naturalWidth</code>, <code>img.naturalHeight</code>, <code>img.width</code>, <code>img.height</code>, <code>img.complete</code>, and <code>img.currentSrc</code> will update themselves correctly as the image loads</li>
<li><code>load</code> and <code>error</code> events will fire on the <code>&lt;img&gt;</code> element, according to how well image decoding goes.</li>
<li>You can draw images onto canvases, using the newly-enabled <code>canvasContext.drawImage</code> API.</li>
</ul>
</li>
<li>Added <code>canvasContext.createPattern</code> and <code>canvasContext.toBlob</code>, when the <code>canvas</code> npm package is installed. (lehni)</li>
<li>Added a basic implementation of the <a href="https://w3c.github.io/page-visibility/" target="_blank" rel="noopener noreferrer">Page Visibility API<OutboundLink/></a>, in particular a <code>document.hidden</code> property that always returns <code>true</code>, and a <code>document.visibilityState</code> property that always returns <code>&quot;prerender&quot;</code>. This is a more standard alternative to our proprietary <code>navigator.noUI</code>, which will be removed whenever we release v9.0.0. (kapouer)</li>
</ul>
<h2 id="_8-2-0"><a class="header-anchor" href="#_8-2-0">#</a> 8.2.0</h2>
<ul>
<li>Added correct click behavior for inputs (jeffcarp):
<ul>
<li><code>change</code> and <code>input</code> events now fire appropriately</li>
<li>The &quot;click in progress&quot; flag is implemented, so you cannot click while a click is in progress</li>
<li>Canceling a click event appropriately resets radio buttons and checkboxes</li>
</ul>
</li>
<li>Updated our XMLHttpRequest implementation with a variety of fixes and features, including preliminary CORS support. (nicolashenry)</li>
<li>Added a <code>strictSSL</code> top-level option to govern all requests jsdom makes. (nicolashenry)</li>
<li>XHTML frames and iframes are now parsed as XML instead of HTML. (nicolashenry)</li>
<li>Added <code>document.origin</code> and <code>document.lastModified</code>. (nicolashenry)</li>
<li>Fixed the <code>scriptEl.text</code> getter and setter to follow the spec.</li>
<li>Fixed script execution to check against the canonical list of JavaScript MIME types and only execute those scripts as JavaScript.</li>
</ul>
<h2 id="_8-1-1"><a class="header-anchor" href="#_8-1-1">#</a> 8.1.1</h2>
<ul>
<li>Fixed input selection methods and properties to properly differentiate between inputs that can be selected outright vs. textual inputs which allow variable-length selection. (yaycmyk)</li>
</ul>
<h2 id="_8-1-0"><a class="header-anchor" href="#_8-1-0">#</a> 8.1.0</h2>
<ul>
<li>Added <code>attr.nodeName</code>, which was <a href="https://github.com/whatwg/dom/issues/171" target="_blank" rel="noopener noreferrer">recently re-added to the spec<OutboundLink/></a>.</li>
<li>Added click-proxying behavior from <code>&lt;label&gt;</code>s to their labeled form elements. (yaycmyk)</li>
<li>Added a setter for <code>element.classList</code> per recent spec changes (it forwards to <code>element.classList.value</code>).</li>
<li>Updated our attributes implementation in a few ways for recent spec changes and to fix discovered bugs:
<ul>
<li>Added <code>element.getAttributeNames()</code>. (<a href="https://github.com/whatwg/dom/issues/115" target="_blank" rel="noopener noreferrer">spec addition<OutboundLink/></a>)</li>
<li><code>setAttributeNode</code> and <code>setAttributeNodeNS</code> can now replace an attribute node, instead of removing the old one and adding a new one; this avoids changing the order in the attribute list. (<a href="https://github.com/whatwg/dom/issues/116" target="_blank" rel="noopener noreferrer">spec change<OutboundLink/></a>)</li>
<li><code>NamedNodeMap</code> named properties are now lowercase (except in edge cases involving XML documents or non-HTML elements). (<a href="https://github.com/whatwg/dom/issues/141" target="_blank" rel="noopener noreferrer">spec change<OutboundLink/></a>)</li>
<li><code>NamedNodeMap</code> named properties are now non-enumerable.</li>
<li>The <code>&quot;DOMAttrModified&quot;</code> mutation event's <code>relatedNode</code> is now the new <code>Attr</code> object, not the <code>Node</code>, as per spec.</li>
</ul>
</li>
<li>Updated <code>DOMTokenList</code> to have a <code>value</code> property per <a href="https://github.com/whatwg/dom/issues/119" target="_blank" rel="noopener noreferrer">recent spec changes<OutboundLink/></a>; its <code>toString</code> serialization also changed slightly.</li>
<li>Updated <code>tc.headers</code> to be a <code>DOMTokenList</code> that simply reflects the <code>headers</code> attribute; previously it was a string, with its computation doing some weird stuff.</li>
<li>Fixed <code>document.implementation.createDocument()</code> to create a document with its parsing mode set to XML, which affects a variety of DOM APIs in small ways.</li>
<li>Fixed <code>EventTarget.prototype.constructor</code> to be correct; it was previously <code>Window</code>.</li>
<li>Fixed <code>option.index</code> for <code>&lt;option&gt;</code>s not inside a <code>&lt;select&gt;</code> to no longer error.</li>
<li>Fixed <code>tc.cellIndex</code> for <code>&lt;td&gt;</code>s and <code>&lt;th&gt;</code>s not inside a <code>&lt;tr&gt;</code> to no longer error.</li>
<li>Fixed <code>tr.sectionRowIndex</code> for <code>&lt;tr&gt;</code>s not inside a <code>&lt;table&gt;</code>, <code>&lt;tbody&gt;</code>, <code>&lt;thead&gt;</code>, or <code>&lt;tfoot&gt;</code> to no longer error.</li>
<li>Removed the <code>&quot;keyevents&quot;</code> alias for <code>&quot;keyboardevent&quot;</code> when using <code>document.createEvent</code>, <a href="https://github.com/whatwg/dom/issues/148" target="_blank" rel="noopener noreferrer">per recent spec changes<OutboundLink/></a>.</li>
</ul>
<h2 id="_8-0-4"><a class="header-anchor" href="#_8-0-4">#</a> 8.0.4</h2>
<ul>
<li>Fixed the <code>this</code> value when you pass a <code>{ handleEvent() { ... } }</code> object to <code>addEventListener</code>. (thetalecrafter)</li>
</ul>
<h2 id="_8-0-3"><a class="header-anchor" href="#_8-0-3">#</a> 8.0.3</h2>
<ul>
<li>Fixed <code>HTMLOptionElement.prototype.label</code>; a typo was causing it to not work at all. (karlhorky)</li>
<li>Updated <code>cssstyle</code> minimum version to ensure all jsdom installs (not just fresh ones) get the benefit of <code>cssstyle</code>'s recently-better <code>padding</code> and <code>margin</code> parsing/CSSOM.</li>
</ul>
<h2 id="_8-0-2"><a class="header-anchor" href="#_8-0-2">#</a> 8.0.2</h2>
<ul>
<li>Fixed an issue where custom user agents would not propagate to <code>navigator.userAgent</code> in frames and iframes.</li>
<li>Improved our <code>document.activeElement</code> implementation to be a bit smarter; we still don't have full focus/blur/active element semantics, but at least now it falls back to the <code>&lt;body&gt;</code> element when the active element is removed from the document or when no element has been focused yet.</li>
</ul>
<h2 id="_8-0-1"><a class="header-anchor" href="#_8-0-1">#</a> 8.0.1</h2>
<ul>
<li>Fixed an issue where the <code>this</code> inside event handler callbacks was not equal to the event's current target. (Surprisingly there were no tests for this!)</li>
</ul>
<h2 id="_8-0-0"><a class="header-anchor" href="#_8-0-0">#</a> 8.0.0</h2>
<p>This major release includes a large rewrite of most of the DOM and HTML classes exposed in jsdom. A lot of their behavior is generated from their specs' IDL syntax, taking care of many type conversions, attribute/property reflections, and much more. Many properties that were previously not present are now available, and almost everything behaves in a more spec-compliant way. Additionally, for these classes all of their implementation details are no longer available as underscore-prefixed properties, but instead are hidden behind a single symbol.</p>
<p>Although normally jsdom does not mark a new major release for changes that simply update us to the latest specs or hide internal implementation details better, the magnitude of the changes is so extensive that we want to bump the major version in order to ensure that consumers perform adequate testing before upgrading. But, you should definitely upgrade! The new stuff is really awesome!</p>
<ul>
<li>Reimplemented <code>Location</code>, <code>History</code>, and <code>HTMLHyperlinkElementUtils</code> (used by both <code>HTMLAnchorElement</code> and <code>HTMLAreaElement</code>) according to the latest specs, and using the latest <a href="https://github.com/jsdom/whatwg-url" target="_blank" rel="noopener noreferrer">whatwg-url<OutboundLink/></a> package. This greatly improves our correctness on URL resolution and navigation (to the extent we support navigation, i.e. <code>pushState</code> and changing the hash). It should also improve parsing speed as we no longer parse and resolve URLs during parsing.</li>
<li>Added <code>Element.prototype.insertAdjacentHTML</code>. (kasperisager)</li>
<li>Added <code>Node.prototype.adoptNode</code>, and adopt nodes during insertion instead of throwing <code>&quot;WrongDocumentError&quot;</code>s. (dmethvin)</li>
<li>Added a stub <code>Element.prototype.getClientRects</code> to match our stub <code>getBoundingClientRect</code>.</li>
<li>Fixed <code>setTimeout</code> and <code>setInterval</code> to return numeric IDs, instead of objects. (alvarorahul)</li>
<li>Fixed <code>setTimeout</code> and <code>setInterval</code> to accept string arguments to eval, and to pass along extra arguments after the first two.</li>
<li>Fixed certain style shorthand properties not updating their component properties or parsing correctly. (dpvc)</li>
<li>Fixed <code>Event</code> object creation to always initialize the event objects, unless using <code>document.createEvent</code>, even for events with name <code>&quot;&quot;</code>.</li>
<li>Fixed iframes to go through the custom resource loader. (chrmarti)</li>
<li>Removed <a href="http://www.w3.org/TR/2003/CR-DOM-Level-3-LS-20031107/load-save.html" target="_blank" rel="noopener noreferrer">&quot;DOM Load and Save&quot;<OutboundLink/></a> stub implementation. That spec was never implemented in browsers, and jsdom only contained stubs.</li>
<li>Removed other minor unimplemented, stub, or no-longer-standard APIs from &quot;DOM Level 3&quot;, like the user-data API, <code>DOMError</code>, <code>DOMConfiguration</code>, and <code>DOMStringList</code>.</li>
</ul>
<h2 id="_7-2-2"><a class="header-anchor" href="#_7-2-2">#</a> 7.2.2</h2>
<ul>
<li>Fixed <code>canvasEl.toDataURL()</code>, with the <code>canvas</code> npm package installed; a recent update to the <code>canvas</code> package broke how we were passing arguments to do.</li>
<li>Fixed <code>data:</code> URL parsing to allow empty contents, e.g. <code>data:text/css;base64,</code>. (sebmck)</li>
</ul>
<h2 id="_7-2-1"><a class="header-anchor" href="#_7-2-1">#</a> 7.2.1</h2>
<ul>
<li>Fixed a regression in XML parsing of attributes with a namespace URL but no prefix (e.g. <code>&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;</code>).</li>
</ul>
<h2 id="_7-2-0"><a class="header-anchor" href="#_7-2-0">#</a> 7.2.0</h2>
<ul>
<li>Added support for text selection APIs on <code>&lt;input&gt;</code> and <code>&lt;textarea&gt;</code>! (sjelin and yaycmyk)</li>
<li>Replaced our default XML parser with <a href="https://www.npmjs.com/package/sax" target="_blank" rel="noopener noreferrer">sax<OutboundLink/></a>, thus fixing many (but not all) issues with XML and XHTML parsing. To get a flavor of the issues fixed, check out these now-closed bugs: <a href="https://github.com/jsdom/jsdom/issues/393" target="_blank" rel="noopener noreferrer">#393<OutboundLink/></a>, <a href="https://github.com/jsdom/jsdom/issues/651" target="_blank" rel="noopener noreferrer">#651<OutboundLink/></a>, <a href="https://github.com/jsdom/jsdom/issues/415" target="_blank" rel="noopener noreferrer">#415<OutboundLink/></a>, <a href="https://github.com/jsdom/jsdom/issues/1276" target="_blank" rel="noopener noreferrer">#1276<OutboundLink/></a>.</li>
<li>Fixed the <code>&lt;canvas&gt;</code> tag to reset its contents when its width or height changed, including the change from the default 300 × 150 canvas. (Applies only when using the <code>canvas</code> npm package.)</li>
<li>Fixed an issue where <code>HTMLCollection</code>s would get confused when they contained elements with numeric <code>id</code>s or <code>name</code>s.</li>
<li>Fixed an issue with doctype parsing confusing the system ID and public ID.</li>
<li>Made the task posted by <code>postMessage</code> use the inside-jsdom timer queue, instead of the Node.js one. This allows easier mocking. (cpojer)</li>
</ul>
<h2 id="_7-1-1"><a class="header-anchor" href="#_7-1-1">#</a> 7.1.1</h2>
<ul>
<li>When <code>&lt;iframe&gt;</code>s have unresolvable URLs, jsdom will no longer crash, but will instead just load <code>about:blank</code> into them. (This is the spec behavior.)</li>
<li>Fixed <code>document.writeln</code> to correctly handle multiple arguments; previously it ignored all after the first.</li>
<li>Fixed <code>FileList</code> objects to no longer have a property named <code>&quot;undefined&quot;</code>. (jfremy)</li>
</ul>
<h2 id="_7-1-0"><a class="header-anchor" href="#_7-1-0">#</a> 7.1.0</h2>
<p>This is a rather large release bringing with it several important re-implementations of DOM and HTML APIs.</p>
<ul>
<li>Our <code>EventTarget</code> implementation has been rewritten from scratch to follow the spec exactly. This should improve any edge case misbehaviors.</li>
<li>Our <code>Event</code> class hierarchy has been rewritten and fleshed out, fixing many gaps in functionality.
<ul>
<li>Previously missing classes <code>KeyboardEvent</code> and <code>TouchEvent</code> are now implemented.</li>
<li>Almost all supported <code>Event</code> subclasses now have constructors. (<code>TouchEvent</code> does not yet, and <code>MutationEvent</code> is specified to not have one.)</li>
<li>All classes now have correct public APIs, e.g. getters instead of data properties, missing properties added, and constructors that correctly allow setting all the supported properties.</li>
<li><code>document.createEvent(&quot;customevent&quot;, ...)</code> now correctly creates a <code>CustomEvent</code> instead of an <code>Event</code>, and <code>CustomEvent.prototype.initProgressEvent</code> has been replaced with <code>CustomEvent.prototype.initCustomEvent</code>.</li>
</ul>
</li>
<li>The <code>Attr</code> class and related attribute-manipulating methods has been rewritten to follow the latest specification. In particular, <code>Attr</code> is no longer a subclass of <code>Node</code>, and no longer has child text nodes.</li>
<li>The <code>&lt;template&gt;</code> element implementation has been greatly improved, now passing most web platform tests. Its <code>.content</code> property no longer has an extra intermediate document fragment; it no longer has child nodes; and related parts of the parser and serializer have been fixed, including <code>innerHTML</code> and <code>outerHTML</code>, to now work as specified.</li>
<li><code>querySelector</code>, <code>querySelectorAll</code>, and <code>matches</code> now correctly throw <code>&quot;SyntaxError&quot;</code> <code>DOMException</code>s for invalid selectors, instead of just <code>Error</code> instances.</li>
<li><code>Node.prototype</code>'s <code>insertBefore</code>, <code>replaceChild</code>, and <code>appendChild</code> methods now check their arguments more correctly.</li>
<li>The browser builds now have regained the ability to fetch URLs for content and the like; this had been broken due to an issue with the browser-request package, which is no longer necessary anyway.</li>
</ul>
<h2 id="_7-0-2"><a class="header-anchor" href="#_7-0-2">#</a> 7.0.2</h2>
<ul>
<li>Fixed an issue where inside jsdom <code>&lt;script&gt;</code> code, <code>/regexpliteral/ instanceof RegExp</code> would be <code>false</code>.</li>
</ul>
<h2 id="_7-0-1"><a class="header-anchor" href="#_7-0-1">#</a> 7.0.1</h2>
<ul>
<li>Fixed two bugs with <code>Node.prototype.isEqualNode</code>:
<ul>
<li>It would previously always return <code>true</code> for comparing any two doctypes.</li>
<li>It would throw an error when trying to compare two elements that had attributes.</li>
</ul>
</li>
<li>Enforced that <code>document.implementation.createDocumentType</code> requires all three of its arguments.</li>
</ul>
<h2 id="_7-0-0"><a class="header-anchor" href="#_7-0-0">#</a> 7.0.0</h2>
<p>This major release has as its headlining feature a completely re-written <code>XMLHttpRequest</code> implementation, in a heroic effort by <a href="https://github.com/nicolashenry" target="_blank" rel="noopener noreferrer">@nicolashenry<OutboundLink/></a>. It includes a number of other smaller improvements and fixes. The breaking changes are highlighted in bold below.</p>
<ul>
<li><strong>Node.js 4.0 onward is now required</strong>, as we have begun using ES2015 features only present there.</li>
<li>Completely re-implemented <code>XMLHttpRequest</code> and related classes (nicolashenry):
<ul>
<li>Includes support for <code>Blob</code>, <code>File</code>, <code>FileList</code>, <code>FileReader</code>, <code>FormData</code>, <code>ProgressEvent</code>, and the supporting <code>XMLHttpRequestUpload</code>, and <code>XMLHttpRequestEventTarget</code> interfaces.</li>
<li>Includes support for synchronous XHRs.</li>
<li>Adds some new request-management abilities, documented in the readme. In short, the <code>pool</code>, <code>agentOptions</code>, and <code>userAgent</code> options are new, and resource loads can now be aborted.</li>
<li>These implementations are extremely complete and standards-compliant, passing 136 newly-introduced web platform tests.</li>
</ul>
</li>
<li>Added <code>document.charset</code>, an alias for <code>document.characterSet</code>.</li>
<li>Added <code>HTMLTemplateElement.prototype.content</code>, for getting the contents of a <code>&lt;template&gt;</code> element as a document fragment. (rickychien)</li>
<li>Implemented &quot;loose&quot; cookie parsing, giving correct execution of code like <code>document.cookie = &quot;foo&quot;</code>.</li>
<li>Several fixes related to event dispatching and creation, including the addition of <code>Event.prototype.stopImmediatePropagation</code> and the constants <code>NONE</code>, <code>CAPTURING_PHASE</code>, <code>AT_TARGET</code>, and <code>BUBBLING_PHASE</code>. This accounted for another 15 newly-passing web platform tests. (nicolashenry)</li>
<li>Fixed <code>document.styleSheets</code> to correctly track the removal of stylesheets from the document. (AVGP)</li>
<li>Fixed the <code>created</code> jsdom lifecycle callback receiving a different <code>window</code> object than the <code>loaded</code> or <code>done</code> callbacks when scripting was enabled.</li>
<li><strong>Invalid URLs are no longer allowed when creating a jsdom document</strong>; the URL must be parseable, or an error will be thrown.</li>
<li><strong>The <code>{ omitJsdomErrors }</code> option of the virtual console has moved</strong>; it is no longer provided when creating the virtual console, but instead when calling <code>sendTo</code>.</li>
</ul>
<h2 id="_6-5-1"><a class="header-anchor" href="#_6-5-1">#</a> 6.5.1</h2>
<ul>
<li>Fixed an issue where with <code>jsdom.jsdom</code>, you had to pass <code>referrer</code> and <code>cookie</code> options as top-level, whereas with <code>jsdom.env</code>, you had to nest them under a <code>document</code> option. This was unnecessarily confusing. Now both possibilities are allowed for both functions. (The readme only documents the top-level version, though.)</li>
</ul>
<h2 id="_6-5-0"><a class="header-anchor" href="#_6-5-0">#</a> 6.5.0</h2>
<ul>
<li>Added <code>NodeList.prototype[Symbol.iterator]</code>, so you can now use <code>for</code>-<code>of</code> loops with <code>NodeList</code>s.</li>
</ul>
<h2 id="_6-4-0"><a class="header-anchor" href="#_6-4-0">#</a> 6.4.0</h2>
<ul>
<li>Added <code>jsdom.nodeLocation(node)</code> to get the location within the source text of a given node.</li>
<li>Added <code>jsdom.reconfigureWindow(window, { top })</code> to allow changing the value of a window's <code>top</code> property.</li>
<li>Added the <code>element</code> argument to the custom resource loader, so you can customize resource loads depending on which element loaded them.</li>
<li>Updated <code>getElementsByClassName</code> to match the spec. It now correctly splits on whitespace to try to find elements with all the given classes; it returns a <code>HTMLCollection</code> instead of a <code>NodeList</code>; and it memoizes the result.</li>
<li>Updated <code>NodeList</code> and <code>HTMLCollection</code> to match the spec. The most noticable change is that <code>HTMLCollection</code> no longer inherits from <code>NodeList</code>.</li>
</ul>
<h2 id="_6-3-0"><a class="header-anchor" href="#_6-3-0">#</a> 6.3.0</h2>
<ul>
<li>Added a fully spec-compliant implementation of <code>window.atob</code> and <code>window.btoa</code>. (jeffcarp)</li>
<li>Fixed many issues with our <code>&lt;canvas&gt;</code> implementation:
<ul>
<li>With the <code>canvas</code> npm package installed, <code>&lt;canvas&gt;</code> elements are now properly <code>instanceof HTMLCanvasElement</code> and <code>instanceof HTMLElement</code>.</li>
<li><code>&lt;canvas&gt;</code> elements now present the same uniform spec-compliant API both with and without the <code>canvas</code> npm package installed. If the package is not installed, some of the methods will cause not-implemented <code>jsdomError</code> events to be emitted on the virtual console.</li>
<li>The <code>width</code> and <code>height</code> properties now correctly reflect the <code>width</code> and <code>height</code> attributes, and have the appropriate default values of <code>300</code> and <code>150</code>.</li>
<li>With the <code>canvas</code> npm package installed, <code>&lt;canvas&gt;</code> elements now generally play better with other parts of jsdom, e.g., <code>document.getElementById</code> actually works with them.</li>
</ul>
</li>
<li>Introduced and upated many of our element classes, so that at least every tag name/element class pair is now correct, even if some of the classes are stubs. In particular:
<ul>
<li>Complete implementations were added for <code>HTMLDataElement</code>, <code>HTMLSpanElement</code>, and <code>HTMLTimeElement</code>.</li>
<li>Stubs were added for <code>HTMLDataListElement</code>, <code>HTMLDialogElement</code>, <code>HTMLEmbedElement</code>, <code>HTMLMeterElement</code>, <code>HTMLOutputElement</code>, <code>HTMLProgressElement</code>, <code>HTMLSourceElement</code>, <code>HTMLTemplateElement</code>, and <code>HTMLTrackElement</code>.</li>
<li><code>HTMLAudioElement</code> was implemented in full, although its <code>HTMLMediaElement</code> base, where most of its functionality is, is still largely a stub.</li>
<li><code>HTMLTableSectionElement</code>, <code>HTMLTableRowElement</code>, <code>HTMLTableCellElement</code>, <code>HTMLTableDataCellElement</code>, and <code>HTMLTableHeaderCellElement</code> were updated to the latest spec.</li>
<li><code>HTMLIsIndexElement</code> was removed; it has never been produced by the parser since 1.0.0-pre.1, and so it has been just a vestigial global property.</li>
<li>Appropriate constants were added to <code>HTMLMediaElement</code>.</li>
</ul>
</li>
<li>Updated everything having to do with base URLs to be per-spec:
<ul>
<li>Added <code>Node.prototype.baseURI</code> property to get the node's owner document's base URL.</li>
<li><code>HTMLBaseElement</code>'s <code>href</code> getter now contains appropriate fallbacks and always returns an absolute URL, per spec.</li>
<li>If there are no <code>base</code> elements in an <code>&quot;about:blank&quot;</code> iframe document, the base URL correctly falls back to the parent window's base URL.</li>
</ul>
</li>
<li>When you provide a <code>url: ...</code> option to <code>jsdom.jsdom()</code> or <code>jsdom.env()</code>, the given string is now attempted to be resolved as a URL before it is installed as <code>document.URL</code>.
<ul>
<li>So for example, providing <code>url: &quot;http://example.com&quot;</code> will mean <code>document.URL</code> returns <code>&quot;http://example.com/&quot;</code>, with a trailing slash.</li>
<li>In a future major release, we will start throwing if strings that cannot be parsed as valid absolute URL are provided for this option.</li>
</ul>
</li>
</ul>
<h2 id="_6-2-0"><a class="header-anchor" href="#_6-2-0">#</a> 6.2.0</h2>
<ul>
<li>Added a full-featured, spec-compliant <code>Element.prototype.classList</code>, closing out a three-year old issue! (wacii)</li>
<li>Made <code>virtualConsole.sendTo(console)</code> forward <code>&quot;jsdomError&quot;</code>s to <code>console</code> by calling <code>console.error</code>. This can be turned off by doing <code>virtualConsole.sendTo(console, { omitJsdomErrors: true })</code>.</li>
<li>Fixed errors when trying to parse invalid doctype declarations, like <code>&lt;!DOCTYPE&gt;</code>.</li>
<li>Fixed spurious <code>&quot;jsdomError&quot;</code>s that were emitted after calling <code>window.close()</code>.</li>
<li>Fixed the <code>DOMSubtreeModified</code> event to fire in more cases. Note that our mutation events implementation remains incomplete, and will eventually be removed (in a major release) once we implement mutation observers. (selam)</li>
</ul>
<h2 id="_6-1-0"><a class="header-anchor" href="#_6-1-0">#</a> 6.1.0</h2>
<ul>
<li>Added basic implementations of <code>HTMLMediaElement</code> and <code>HTMLVideoElement</code>, back-ported from Facebook's Jest project. (cpojer)</li>
</ul>
<h2 id="_6-0-1"><a class="header-anchor" href="#_6-0-1">#</a> 6.0.1</h2>
<ul>
<li>Fixed <code>XMLHttpRequest.prototype.getAllResponseHeaders</code> to not crash when used with <code>file:</code> URLs. (justinmchase)</li>
<li>Fixed <code>XMLHttpRequest.prototype.response</code> to correctly return the response text even when <code>responseType</code> was unset. (justinmchase)</li>
</ul>
<h2 id="_6-0-0"><a class="header-anchor" href="#_6-0-0">#</a> 6.0.0</h2>
<p>This major release is focused on massive improvements in speed, URL parsing, and error handling. The potential breaking changes are highlighted in bold below; the largest ones are around the <code>jsdom.env</code> error-handling paradigm.</p>
<p>This release also welcomes <a href="https://github.com/jsdom/jsdom/commits/master?author=Joris-van-der-Wel" target="_blank" rel="noopener noreferrer">long-time contributer<OutboundLink/></a> <a href="https://github.com/Joris-van-der-Wel/" target="_blank" rel="noopener noreferrer">@Joris-van-der-Wel<OutboundLink/></a> to the core team. You may recognize him from earlier changelogs. We're very happy to have his help in making jsdom awesome!</p>
<ul>
<li><strong>io.js 2.0 onward is now required</strong>, as we have begun using ES2015 features only present there.</li>
<li>Improved performance dramatically, by ~10000x in some cases, due to the following changes:
<ul>
<li>Overhauled the named properties tracker to not walk the entire tree, thus greatly speeding up the setting of <code>id</code> and <code>name</code> attributes (including during parsing).</li>
<li>Overhauled everything dealing with tree traversal to use a new library, <a href="https://github.com/jsdom/js-symbol-tree" target="_blank" rel="noopener noreferrer">symbol-tree<OutboundLink/></a>, to turn many operations that were previously O(n^2) or O(n) into O(n) or O(1).</li>
<li>Sped up <code>node.compareDocumentPosition</code> and anything that used it (like <code>node.contains</code>) by doing more intelligent tree traversal instead of directly implementing the specced algorithm.</li>
</ul>
</li>
<li>Overhauled how error handling works in jsdom:
<ul>
<li><code>window.onerror</code> (or <code>window.addEventListener(&quot;error&quot;, ...)</code>) now work, and will catch all script errors, similar to in browsers. This also introduces the <code>ErrorEvent</code> class, incidentally.</li>
<li>The virtual console is now the destination for several types of errors from jsdom, using <a href="https://github.com/jsdom/jsdom#virtual-console-jsdomerror-error-reporting" target="_blank" rel="noopener noreferrer">the new event <code>&quot;jsdomError&quot;</code><OutboundLink/></a>. This includes: errors loading external resources; script execution errors unhandled by <code>window.onerror</code>; and not-implemented warnings resulting from calling methods like <code>window.alert</code> which jsdom explicitly does not support.</li>
<li>Since script errors are now handled by <code>window.onerror</code> and the virtual console, they are no longer included in the initialization process. This results in two changes to <code>jsdom.env</code> and the initialization lifecycle:
<ul>
<li><strong>The <code>load(errors, window)</code> callback was changed to <code>onload(window)</code></strong>, to reflect that it is now just sugar for setting a <code>window.onload</code> handler.</li>
<li><strong>The <code>done(errors, window)</code> callback (i.e., the default callback for <code>jsdom.env</code>) has become <code>done(error, window)</code></strong>, and like every other io.js callback now simply gives you a single error object, instead of an array of them.</li>
</ul>
</li>
<li>Nodes no longer have a nonstandard <code>errors</code> array, or a <code>raise</code> method used to put things in that array.</li>
</ul>
</li>
<li>URL parsing and resolution was entirely overhauled to follow <a href="http://url.spec.whatwg.org/" target="_blank" rel="noopener noreferrer">the URL standard<OutboundLink/></a>!
<ul>
<li>This fixes several long-standing bugs and hacks in the jsdom URL parser, which already had a mess of gross patches on top of the built-in io.js parser to be more web-compatible.</li>
<li>The new <a href="https://url.spec.whatwg.org/#url" target="_blank" rel="noopener noreferrer"><code>URL</code> class<OutboundLink/></a> has been added to <code>window</code></li>
<li>The interfaces for <code>HTMLAnchorElement.prototype</code> and <code>document.location</code> (as well as <code>URL</code>, of course) are now uniformized to follow the <a href="https://url.spec.whatwg.org/#api" target="_blank" rel="noopener noreferrer"><code>URLUtils</code> API<OutboundLink/></a> (minus <code>searchParams</code> for now).</li>
<li><strong>As part of this change, you may need to start passing in <code>file:</code> URLs to <code>jsdom.env</code> where previously you were able to get away with passing in filenames.</strong></li>
</ul>
</li>
<li>Added the <code>XMLHttpRequest.prototype.response</code> getter.</li>
<li>Fixed <code>StyleSheetList.prototype.item</code> to actually work. (chad3814)</li>
<li>Fixed the browser <code>vm</code> shim to properly add the built-in global properties (<code>Object</code>, <code>Array</code>, etc.) to the sandbox. If you were running jsdom inside a web worker and most of your scripts were broken, this should fix that.</li>
<li>Fixed the <code>hashchange</code> event to correctly fire <code>HashChangeEvent</code> instances, with correct properties <code>newURL</code> and <code>oldURL</code> (instead of the incorrect <code>newUrl</code> and <code>oldUrl</code> used previously).</li>
<li>Removed usage of the setimmediate library, as it required <code>eval</code> and thus did not work in CSP scenarios.</li>
</ul>
<p>Finally, if you're a loyal jsdom fan whose made it this far into the changelog, I'd urge you to come join us in <a href="https://github.com/jsdom/jsdom/issues/1139" target="_blank" rel="noopener noreferrer">#1139<OutboundLink/></a>, where we are brainstorming a modernized jsdom API that could get rid of many of the warts in the current one.</p>
<h2 id="_5-6-1"><a class="header-anchor" href="#_5-6-1">#</a> 5.6.1</h2>
<ul>
<li>Fixed an accidentally-created global <code>attribute</code> variable if you ever called <code>createAttributeNS</code>.</li>
<li>Dependency upgrades fixed a couple of bugs, although you would have gotten these anyway with a clean jsdom v5.6.0 install:
<ul>
<li>Parsing of CSS properties that use <code>url(&quot;quoted string&quot;)</code> now works correctly, as of <code>cssstyle</code> v0.2.29.</li>
<li>Selectors for the empty string, like <code>div[title=&quot;&quot;]</code>, now work correctly, as of <code>nwmatcher</code> v1.3.6.</li>
</ul>
</li>
</ul>
<h2 id="_5-6-0"><a class="header-anchor" href="#_5-6-0">#</a> 5.6.0</h2>
<ul>
<li><code>virtualConsole.sendTo</code> now returns <code>this</code>, allowing for <a href="https://github.com/jsdom/jsdom/tree/60ccb9b318d0bae8fe37e19af5af444b9c98ddac#forward-a-windows-console-output-to-the-iojs-console" target="_blank" rel="noopener noreferrer">a nice shorthand<OutboundLink/></a>. (jeffcarp)</li>
</ul>
<h2 id="_5-5-0"><a class="header-anchor" href="#_5-5-0">#</a> 5.5.0</h2>
<ul>
<li>Added <code>postMessage</code> support, for communicating between parent windows, iframes, and combinations thereof. It's missing a few semantics, especially around origins, as well as MessageEvent source. Objects are not yet structured cloned, but instead passed by reference. But it's working, and awesome! (jeffcarp)</li>
<li>Rewrote cloning code (underlying <code>cloneNode</code> and <code>importNode</code>), fixing a number of issues:
<ul>
<li>Elements with weird tag names, of the type that only the parser can normally create, can now be cloned (<a href="https://github.com/jsdom/jsdom/issues/1142" target="_blank" rel="noopener noreferrer">#1142<OutboundLink/></a>)</li>
<li>Doctypes can now be cloned, per the latest spec.</li>
<li>Attrs cannot be cloned, per the latest spec (although they still have a <code>cloneNode</code> method for now due to legacy).</li>
<li>Document clones now correctly copy over the URL and content-type.</li>
</ul>
</li>
<li>Fixed any virtual console output from iframes to be proxied to the parent window's virtual console. (jeffcarp)</li>
<li>Fixed the <code>type</code> property of <code>&lt;button&gt;</code> elements to correctly default to <code>submit</code>, and to stay within the allowed range.</li>
<li>Fixed clicking on submit <code>&lt;button&gt;</code>s to submit their containing form; previously only <code>&lt;input type=&quot;submit&quot;&gt;</code> worked. (rxgx)</li>
<li>Fixed <code>document.open()</code> to return <code>this</code>, per spec. (ryanseddon)</li>
</ul>
<p>Additionally, Joris-van-der-Wel added <a href="https://github.com/jsdom/jsdom/blob/master/Contributing.md#running-the-benchmarks" target="_blank" rel="noopener noreferrer">a benchmarking framework<OutboundLink/></a>, and a number of benchmarks, which should help us avoid performance regressions going forward, and also make targeted performance fixes. We're already investigating <a href="https://github.com/jsdom/jsdom/issues/1156" target="_blank" rel="noopener noreferrer">some real-world issues<OutboundLink/></a> using this framework. Very exciting!</p>
<h2 id="_5-4-3"><a class="header-anchor" href="#_5-4-3">#</a> 5.4.3</h2>
<ul>
<li>Incorporated upstream fix for setting <code>el.style.cssText</code> to an invalid value, which should be ignored instead of causing an error to be thrown. This same bug has also caused an error while setting the style attribute to an invalid value, ever since 5.4.0. (Joris-van-der-Wel; chad3814 upstream)</li>
</ul>
<h2 id="_5-4-2"><a class="header-anchor" href="#_5-4-2">#</a> 5.4.2</h2>
<ul>
<li>Fixed license metadata to conform to latest npm standards.</li>
</ul>
<h2 id="_5-4-1"><a class="header-anchor" href="#_5-4-1">#</a> 5.4.1</h2>
<ul>
<li>Fixed to work with browserify again (regression introduced in v5.4.0).</li>
</ul>
<h2 id="_5-4-0"><a class="header-anchor" href="#_5-4-0">#</a> 5.4.0</h2>
<p>This is a pretty exciting release! It includes a couple features I never really anticipated jsdom being awesome enough to have, but our wonderful contributors powered through and made them happen anyway:</p>
<ul>
<li>Added support for the default HTML stylesheet when using <code>window.getComputedStyle</code>! (akhaku)
<ul>
<li>Notably, this makes jQuery's <code>show()</code> and <code>hide()</code> methods now work correctly; see <a href="https://github.com/jsdom/jsdom/issues/994" target="_blank" rel="noopener noreferrer">#994<OutboundLink/></a>.</li>
</ul>
</li>
<li>Added support for named properties on <code>window</code>: any elements with an <code>id</code> attribute, or certain elements with a <code>name</code> attribute, will cause properties to show up on the <code>window</code>, and thus as global variables within the jsdom. (Joris-van-der-Wel)
<ul>
<li>Although this is fairly unfortunate browser behavior, it's standardized and supported everywhere, so the fact that jsdom now supports this too means we can run a lot of scripts that would previously fail.</li>
<li>Previously, we only supported this for <code>&lt;iframe&gt;</code>s, and our implementation was quite buggy: e.g., <code>&lt;iframe name=&quot;addEventListener&quot;&gt;</code> would override <code>window.addEventListener</code>.</li>
<li>Now that we have the infrastructure in place, we anticipate expanding our support so that this works on e.g. <code>HTMLFormElement</code>s as well in the future.</li>
</ul>
</li>
</ul>
<p>We also have a bunch more fixes and additions:</p>
<ul>
<li>Implemented the <a href="https://dom.spec.whatwg.org/#nondocumenttypechildnode" target="_blank" rel="noopener noreferrer"><code>NonDocumentTypeChildNode</code><OutboundLink/></a> mixin. Practically, this means adding <code>nextElementSibling</code> and <code>previousElementSibling</code> to <code>Element</code> and the various types of <code>CharacterData</code>. (brandon-bethke-neudesic)</li>
<li>Updated <code>StyleSheetList</code> to inherit from <code>Array</code>, as per the latest CSSOM spec.</li>
<li>Overhauled the handling of attributes throughout the DOM, to follow the spec more exactly.
<ul>
<li>Our <code>NamedNodeMap</code> implementation is up to date, as are the various <code>Element</code> methods; other places in the code that deal with attributes now all go through a spec-compliant set of helpers.</li>
<li>Some weirdnesses around the <code>style</code> attribute were fixed along the way; see e.g. <a href="https://github.com/jsdom/jsdom/issues/1109" target="_blank" rel="noopener noreferrer">#1109<OutboundLink/></a>.</li>
<li>However, <code>Attr</code> objects themselves are not yet spec-compliant (e.g., they still inherit from <code>Node</code>). That's coming soon.</li>
</ul>
</li>
<li>Fixed an unfortunate bug where <code>getElementById</code> would fail to work correctly on <code>&lt;img&gt;</code> elements whose <code>id</code> attributes were modified. (Joris-van-der-Wel)</li>
<li>Fixed the <code>virtualConsole</code> option to work with <code>jsdom.env</code>, not just <code>jsdom.jsdom</code>. (jeffcarp)</li>
<li>Removed a few functions that were erroneously added to <code>window</code>: <code>mapper</code>, <code>mapDOMNodes</code>, and <code>visitTree</code>. (Joris-van-der-Wel)</li>
</ul>
<h2 id="_5-3-0"><a class="header-anchor" href="#_5-3-0">#</a> 5.3.0</h2>
<ul>
<li>Added a <code>virtualConsole</code> option to the document creation methods, along with the <code>jsdom.createVirtualConsole</code> factory. (See <a href="https://github.com/jsdom/jsdom/blob/dbf88666d1152576237ed1c741263f5516bb4005/README.md#capturing-console-output" target="_blank" rel="noopener noreferrer">examples in the readme<OutboundLink/></a>.) With this option you can install a virtual console before the document is even created, thus allowing you to catch any virtual console events that occur during initialization. (jeffcarp)</li>
</ul>
<h2 id="_5-2-0"><a class="header-anchor" href="#_5-2-0">#</a> 5.2.0</h2>
<ul>
<li>Implemented much of the <a href="https://dom.spec.whatwg.org/#interface-parentnode" target="_blank" rel="noopener noreferrer"><code>ParentNode</code><OutboundLink/></a> mixin (Joris-van-der-Wel):
<ul>
<li>Moved <code>children</code> from <code>Node</code> to <code>ParentNode</code>, i.e., made it available on <code>Document</code>, <code>DocumentFragment</code>, and <code>Element</code>, but not other types of nodes.</li>
<li>Made <code>children</code> a <code>HTMLCollection</code> instead of a <code>NodeList</code>.</li>
<li>Implemented <code>firstElementChild</code>, <code>lastElementChild</code>, and <code>childElementCount</code>.</li>
</ul>
</li>
<li>Implemented the <code>outerHTML</code> setter. (Joris-van-der-Wel)</li>
<li>Fixed the <code>outerHTML</code> getter for <code>&lt;select&gt;</code> and <code>&lt;form&gt;</code>. (Joris-van-der-Wel)</li>
<li>Fixed various issues with window-less documents, so that they no longer give incorrect results or blow up in strange ways. You can create such documents with e.g. <code>document.implementation.createHTMLDocument()</code>. (Joris-van-der-Wel)</li>
<li>Fixed relative stylesheet resolution when using <code>@import</code>. (dbo)</li>
</ul>
<h2 id="_5-1-0"><a class="header-anchor" href="#_5-1-0">#</a> 5.1.0</h2>
<ul>
<li>Added support for the <code>NodeIterator</code> class from the DOM Standard. (Joris-van-der-Wel)</li>
<li>Fixed an issue with the initial request where it was not sharing its cookie jar with the subsequent requests, sometimes leading to a &quot;possible EventEmitter memory leak detected&quot; warning. (inikulin)</li>
<li>Updated tough-cookie to 0.13.0, bringing along many spec compliance fixes. (inikulin)</li>
<li>Added a fast failure in Node.js™ with a clear error message, so that people don't get confused by syntax errors.</li>
</ul>
<h2 id="_5-0-1"><a class="header-anchor" href="#_5-0-1">#</a> 5.0.1</h2>
<ul>
<li>Fixed <code>document.cookie</code> setter to no longer ignore <code>null</code>; instead it correctly sets a cookie of <code>&quot;null&quot;</code>. (Chrome is not compliant to the spec in this regard.)</li>
<li>Fixed documents created with <code>parsingMode: &quot;xml&quot;</code> to no longer get <code>&quot;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&quot;</code> automatically inserted when calling <code>jsdom.jsdom()</code> with no arguments.</li>
<li>Fixed the <code>innerHTML</code> setter to no longer ignore <code>undefined</code>; instead it correctly sets the innerHTML to <code>&quot;undefined&quot;</code>.</li>
<li>Fixed <code>document.write</code> to throw for XML documents as per the spec.</li>
<li>Fixed <code>document.write</code> to accept more than one argument (they get concatenated).</li>
<li>Fixed <code>document.write(&quot;&quot;)</code> to no longer try to write <code>&quot;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&quot;</code>.</li>
</ul>
<h2 id="_5-0-0"><a class="header-anchor" href="#_5-0-0">#</a> 5.0.0</h2>
<p>This release overhauls how cookies are handled in jsdom to be less fiddly and more like-a-browser. The work for this was done by <a href="https://github.com/inikulin" target="_blank" rel="noopener noreferrer">@inikulin<OutboundLink/></a>, who is also our beloved parse5 maintainer.</p>
<p>You should only need to worry about upgrading to this release if you use jsdom's cookie handling capabilities beyond the basics of reading and writing to <code>document.cookie</code>. If that describes you, here's what changed:</p>
<ul>
<li>Removed <code>options.jar</code> and <code>options.document.cookieDomain</code> from the configuration for creating jsdom documents.</li>
<li>Instead, there is now a new option, <code>options.cookieJar</code>, which accepts cookie jars created by the new <code>jsdom.createCookieJar()</code> API. You should use this if you intend to share cookie jars among multiple jsdom documents.</li>
<li>Within a given cookie jar, cookie access is now automatically handled on a domain basis, as the browser does, with the domain calculated from the document's URL (supplied as <code>options.url</code> when creating a document). This supplants the former <code>options.document.cookieDomain</code>.</li>
</ul>
<p>In addition to these changes to the public API, the following new cookie-related features came along for the ride:</p>
<ul>
<li>Implemented automatic cookie-jar sharing with descendant <code>&lt;iframe&gt;</code>s. (So, if the iframe is same-domain, it can automatically access the appropriate cookies.)</li>
<li>Let <code>options.document.cookie</code> accept arrays, instead of just strings, for if you want to set multiple cookies at once.</li>
</ul>
<p>Finally, it's worth noting that we now delegate our cookie handling in general to the <a href="https://www.npmjs.com/package/tough-cookie" target="_blank" rel="noopener noreferrer">tough-cookie<OutboundLink/></a> package, which should hopefully mean that it now captures many of the behaviors that were previously missing (for example <a href="https://github.com/jsdom/jsdom/issues/1027" target="_blank" rel="noopener noreferrer">#1027<OutboundLink/></a>). @inikulin is working on <a href="https://github.com/goinstant/tough-cookie/pull/30" target="_blank" rel="noopener noreferrer">a large pull request to fix tough-cookie to be more spec compliant<OutboundLink/></a>, which should automatically be picked up by jsdom installs once it is merged.</p>
<h2 id="_4-5-1"><a class="header-anchor" href="#_4-5-1">#</a> 4.5.1</h2>
<ul>
<li>Removed unnecessary browserify dependency that was erroneously included in 4.5.0.</li>
</ul>
<h2 id="_4-5-0"><a class="header-anchor" href="#_4-5-0">#</a> 4.5.0</h2>
<ul>
<li>Added <code>document.currentScript</code>. (jeffcarp)</li>
</ul>
<h2 id="_4-4-0"><a class="header-anchor" href="#_4-4-0">#</a> 4.4.0</h2>
<ul>
<li>All resources are now loaded with the <a href="https://www.npmjs.com/package/request" target="_blank" rel="noopener noreferrer">request<OutboundLink/></a> package, which means that e.g. GZIPped resources will be properly uncompressed, redirects will be followed, and more. This was previously the case only for URLs passed directly to <code>jsdom.env</code>, and not for sub-resources inside the resulting page. (ssesha)</li>
</ul>
<h2 id="_4-3-0"><a class="header-anchor" href="#_4-3-0">#</a> 4.3.0</h2>
<ul>
<li>Made the click behavior for radio buttons and checkboxes work when doing <code>el.dispatchEvent(clickEvent)</code>, not just when doing <code>el.click()</code>. (brandon-bethke-neudesic)</li>
<li>Added <code>defaultPrevented</code> property to <code>Event</code> instances, reflecting whether <code>ev.preventDefault()</code> has been called. (brandon-bethke-neudesic)</li>
<li>Moved the <code>click()</code> method from <code>HTMLInputElement.prototype</code> to <code>HTMLElement.prototype</code>, per the latest spec.</li>
<li>Made the <code>click()</code> method trigger a <code>MouseEvent</code> instead of just an <code>Event</code>.</li>
</ul>
<h2 id="_4-2-0"><a class="header-anchor" href="#_4-2-0">#</a> 4.2.0</h2>
<ul>
<li>Added a second parameter to <code>UIEvent</code>, <code>MouseEvent</code>, and <code>MutationEvent</code>, which for now just behaves the same as that for <code>Event</code>. (Rich-Harris)</li>
</ul>
<h2 id="_4-1-0"><a class="header-anchor" href="#_4-1-0">#</a> 4.1.0</h2>
<ul>
<li>Added a second parameter to the <code>Event</code> constructor, which allows you to set the <code>bubbles</code> and <code>cancelable</code> properties. (brandon-bethke-neudesic)</li>
</ul>
<h2 id="_4-0-5"><a class="header-anchor" href="#_4-0-5">#</a> 4.0.5</h2>
<ul>
<li>Added <code>HTMLUnknownElement</code> and fix the parser/<code>document.createElement</code> to create those instead of <code>HTMLElement</code> for unknown elements.</li>
<li>Fixed issues with named and indexed properties on <code>window</code>, as well as <code>window.length</code>, with regard to <code>&lt;frame&gt;</code>s/<code>&lt;iframe&gt;</code>s being added and removed from the document.</li>
</ul>
<p><em>Note:</em> this probably should have been a minor version number increment (i.e. 4.1.0 instead of 4.0.5), since it added <code>HTMLUnknownElement</code>. We apologize for the deviation from semver.</p>
<h2 id="_4-0-4"><a class="header-anchor" href="#_4-0-4">#</a> 4.0.4</h2>
<ul>
<li>Fixed parsing of doctypes by relying on the information provided by the html parser if possible.</li>
</ul>
<h2 id="_4-0-3"><a class="header-anchor" href="#_4-0-3">#</a> 4.0.3</h2>
<ul>
<li>Fixed events fired from <code>EventTarget</code>s to execute their handlers in FIFO order, as per the spec.</li>
<li>Fixed a case where <code>childNodes</code> would not be correctly up to date in some cases. (medikoo)</li>
<li>Sped up window creation with <code>jsdom.env</code> by ~600%, for the special case when no scripts are to be executed.</li>
</ul>
<h2 id="_4-0-2"><a class="header-anchor" href="#_4-0-2">#</a> 4.0.2</h2>
<ul>
<li><code>EventTarget</code> is now correctly in the prototype chain of <code>Window</code>.</li>
<li><code>EventTarget</code> argument validation is now correct according to the DOM Standard.</li>
<li><code>DOMException</code> now behaves more like it should per Web IDL. In particular it has a more comprehensive set of constants, and instances now have <code>name</code> properties.</li>
<li><code>new Event(&quot;click&quot;)</code> can now be dispatched. (lovebear)</li>
<li><code>document.createEvent</code> now behaves more like it should according to the DOM Standard: it accepts a wider range of arguments, but will throw if an invalid one is given. (lovebear)</li>
<li>Fixed a regression in our browser support that required Chrome 41 as of 4.0.1; now Chrome 40 will work, as well as (in theory, although less well-tested) the latest stable versions of Firefox and IE.</li>
</ul>
<h2 id="_4-0-1"><a class="header-anchor" href="#_4-0-1">#</a> 4.0.1</h2>
<ul>
<li>Fixed: <code>Node.prototype.contains</code> to always return a boolean. This was a regression in 3.1.1. (Joris-van-der-Wel)</li>
<li>Fixed: <code>Document.prototype</code> no longer contains its own <code>ownerDocument</code> getter, instead correctly delegating to <code>Node.prototype</code>.</li>
<li>Fixed: some edge cases regarding running <code>&lt;script&gt;</code>s in browserified jsdom.</li>
<li>A couple fixes from updated dependencies (although you would have gotten these anyway with a fresh install, due to floating version specifiers):
<ul>
<li>csstyle minimum version bumped from 0.2.21 to 0.2.23, fixing handling of <code>0</code> when setting numeric CSS properties and parsing of shorthand <code>font</code> declarations.</li>
<li>parse5 minimum version bumped from 1.3.1 to 1.3.2 to, fixing the parsing of <code>&lt;form&gt;</code> elements inside <code>&lt;template&gt;</code> elements.</li>
</ul>
</li>
</ul>
<h2 id="_4-0-0"><a class="header-anchor" href="#_4-0-0">#</a> 4.0.0</h2>
<p>This release relies on the newly-overhauled <code>vm</code> module of io.js to eliminate the Contextify native module dependency. jsdom should now be much easier to use and install, without requiring a C++ compiler toolchain!</p>
<p>Note that as of this release, jsdom no longer works with Node.js™, and instead requires io.js. You are still welcome to install a release in <a href="https://github.com/jsdom/jsdom/tree/3.x" target="_blank" rel="noopener noreferrer">the 3.x series<OutboundLink/></a> if you are stuck on legacy technology like Node.js™.</p>
<p>In the process of rewriting parts of jsdom to use <code>vm</code>, a number of related fixes were made regarding the <code>Window</code> object:</p>
<ul>
<li>In some cases, state was implicitly shared between <code>Window</code> instances—especially parser- and serializer-related state. This is no longer the case, thankfully.</li>
<li>A number of properties of <code>Window</code> were updated for spec compliance: some data properties became accessors, and all methods moved from the prototype to the instance.</li>
<li>The non-standard <code>document.parentWindow</code> was removed, in favor of the standard <code>document.defaultView</code>. Our apologies for encouraging use of <code>parentWindow</code> in our README, tests, and examples.</li>
</ul>
<h2 id="_3-1-2"><a class="header-anchor" href="#_3-1-2">#</a> 3.1.2</h2>
<ul>
<li>Some fixes to the <code>NOT_IMPLEMENTED</code> internal helper, which should eliminate the cases where calling e.g. <code>window.alert</code> crashes your application.</li>
<li>Fixed a global variable leak when triggering <code>NOT_IMPLEMENTED</code> methods, like <code>window.location.reload</code>.</li>
<li>Fixed the URL resolution algorithm to handle <code>about:blank</code> properly on all systems (previously it only worked on Windows). This is especially important since as of 3.0.0 the default URL is <code>about:blank</code>.</li>
<li>Fixed, at least partially, the ability to run <code>&lt;script&gt;</code>s inside a browserified jsdom instance. This is done by dynamically rewriting the source code so that global variable references become explicit references to <code>window.variableName</code>, so it is not foolproof.</li>
</ul>
<h2 id="_3-1-1"><a class="header-anchor" href="#_3-1-1">#</a> 3.1.1</h2>
<ul>
<li>Updated <code>Node.prototype.isEqualNode</code> to the algorithm of the DOM Standard, fixing a bug where it would throw an error along the way.</li>
<li>Removed <code>Node.prototype.isSameNode</code>, which is not present in the DOM Standard (and was just a verbose <code>===</code> check anyway).</li>
<li>Fixed a couple small issues while browserifying, mainly around <code>jsdom.env</code>. However, while doing so discovered that <code>&lt;script&gt;</code>s in general don't work too well in a browserified jsdom; see <a href="https://github.com/jsdom/jsdom/issues/1023" target="_blank" rel="noopener noreferrer">#1023<OutboundLink/></a>.</li>
</ul>
<h2 id="_3-1-0"><a class="header-anchor" href="#_3-1-0">#</a> 3.1.0</h2>
<ul>
<li>Added support for <a href="https://github.com/jsdom/jsdom#custom-external-resource-loader" target="_blank" rel="noopener noreferrer">custom external resource loading<OutboundLink/></a>. (tobie)</li>
</ul>
<h2 id="_3-0-3"><a class="header-anchor" href="#_3-0-3">#</a> 3.0.3</h2>
<ul>
<li>Fixed some stray byte-order marks in a couple files, which incidentally <a href="https://github.com/substack/node-browserify/issues/1095" target="_blank" rel="noopener noreferrer">break Browserify<OutboundLink/></a>. (sterpe)</li>
</ul>
<h2 id="_3-0-2"><a class="header-anchor" href="#_3-0-2">#</a> 3.0.2</h2>
<ul>
<li>Fixed another edge case where unchecking a radio button would incorrectly uncheck radio buttons outside the containing form. (zpao)</li>
</ul>
<h2 id="_3-0-1"><a class="header-anchor" href="#_3-0-1">#</a> 3.0.1</h2>
<ul>
<li>Fixed errors when serializing text nodes (possibly only occurred when inside <code>&lt;template&gt;</code>).</li>
<li>Handle null bytes being passed to <code>jsdom.env</code>'s autodetecting capabilities. (fluffybunnies)</li>
<li>Handle empty HTML strings being passed to <code>jsdom.env</code>'s <code>html</code> option. (fluffybunnies)</li>
</ul>
<h2 id="_3-0-0"><a class="header-anchor" href="#_3-0-0">#</a> 3.0.0</h2>
<p>This release updates large swathes of the DOM APIs to conform to the standard, mostly by removing old stuff. It also fixes a few bugs, introduces a couple new features, and changes some defaults.</p>
<p>3.0.x will be the last release of jsdom to support Node.js. All future releases (starting with 4.0.0) will require <a href="https://iojs.org/" target="_blank" rel="noopener noreferrer">io.js<OutboundLink/></a>, whose <a href="https://github.com/iojs/io.js/blob/v1.x/CHANGELOG.md#vm" target="_blank" rel="noopener noreferrer">new <code>vm</code> module<OutboundLink/></a> will allow us to remove our contextify native-module dependency. (Given that I submitted the relevant patch to joyent/node <a href="https://github.com/joyent/node/commit/7afdba6e0bc3b69c2bf5fdbd59f938ac8f7a64c5" target="_blank" rel="noopener noreferrer">1.5 years ago<OutboundLink/></a>, I'm very excited that we can finally use it!)</p>
<ul>
<li>By default documents now use <code>about:blank</code> as their URL, instead of trying to infer some type of file URL from the call site (in Node.js) or using <code>location.href</code> (in browsers).</li>
<li>Introduced a new &quot;virtual console&quot; abstraction for capturing console output from inside the page. <a href="https://github.com/jsdom/jsdom#capturing-console-output" target="_blank" rel="noopener noreferrer">See the readme for more information.<OutboundLink/></a> Note that <code>console.error</code> will no longer contribute to the (non-standard, and likely dying in the future) <code>window.errors</code> array. (jeffcarp)</li>
<li>Added the named <code>new Image(width, height)</code> constructor. (vinothkr)</li>
<li>Fixed an exception when using <code>querySelector</code> with selectors like <code>div:last-child &gt; span[title]</code>.</li>
<li>Removed all traces of entities, entity types, notations, default attributes, and CDATA sections.</li>
<li>Differentiated between XML and HTML documents better, for example in how they handle the casing of tag names and attributes.</li>
<li>Updated <code>DOMImplementation</code> to mostly work per-spec, including removing <code>addFeature</code> and <code>removeFeature</code> methods, the <code>ownerDocument</code> property, and making <code>hasFeature</code> always return <code>true</code>.</li>
<li>Re-did the <code>CharacterData</code> implementation to follow the algorithms in the DOM Standard; this notably removes a few exceptions that were previously thrown.</li>
<li>Re-did <code>Comment</code>, <code>Text</code>, and <code>ProcessingInstruction</code> to follow the DOM Standard and derive from <code>CharacterData</code>.</li>
<li>Re-did <code>DocumentType</code> to follow the DOM Standard and be much simpler, notably removing notations, entities, and default attributes.</li>
<li>Fixed a variety of accessors on <code>Node</code>, <code>Element</code>, <code>Attr</code>, and <code>Document</code>; some were removed that were nonstandard (especially setters); others were updated to reflect the spec; etc.</li>
<li>Re-did name/qname validation, which is done by various APIs, to work with the xml-name-validator package and some centralized algorithms.</li>
<li>Made the XML parser at least somewhat aware of processing instructions.</li>
<li>Cleaned up doctype parsing and association between doctypes and documents. More exotic doctypes should parse better now.</li>
<li><code>document.contentType</code> now is generally inferred from the parsing mode of the document.</li>
<li>Moved some properties to <code>Document.prototype</code> and <code>Window.prototype</code> instead of setting them as own properties during the document/window creation. This should improve memory usage (as well as spec compliance).</li>
</ul>
<h2 id="_2-0-0"><a class="header-anchor" href="#_2-0-0">#</a> 2.0.0</h2>
<p>This release is largely a refactoring release to remove the defunct concept of &quot;levels&quot; from jsdom, in favor of the <a href="https://wiki.whatwg.org/wiki/FAQ#What_does_.22Living_Standard.22_mean.3F" target="_blank" rel="noopener noreferrer">living standard model<OutboundLink/></a> that browsers follow. Although the code is still organized that way, that's now <a href="https://github.com/jsdom/jsdom/blob/2ff5747488ad4b518fcef97a026c82eab42a0a14/lib/README.md" target="_blank" rel="noopener noreferrer">noted as a historical artifact<OutboundLink/></a>. The public API changes while doing so were fairly minimal, but this sets the stage for a cleaner jsdom code structure going forward.</p>
<ul>
<li>Removed: <code>jsdom.level</code>, and the <code>level</code> option from <code>jsdom.jsdom</code>.</li>
<li>Change: the nonstandard <code>Element.prototype.matchesSelector</code> method was replaced with the standard <code>Element.prototype.matches</code>. (KenPowers)</li>
<li>Fix: <code>querySelector</code> correctly coerces its argument to a string (1.2.2 previously fixed this for <code>querySelectorAll</code>).</li>
</ul>
<h2 id="_1-5-0"><a class="header-anchor" href="#_1-5-0">#</a> 1.5.0</h2>
<ul>
<li>Add: missing <code>window.console</code> methods, viz. <code>assert</code>, <code>clear</code>, <code>count</code>, <code>debug</code>, <code>group</code>, <code>groupCollapse</code>, <code>groupEnd</code>, <code>table</code>, <code>time</code>, <code>timeEnd</code>, and <code>trace</code>. All except <code>assert</code> do nothing for now, but see <a href="https://github.com/jsdom/jsdom/issues/979" target="_blank" rel="noopener noreferrer">#979<OutboundLink/></a> for future plans. (jeffcarp)</li>
<li>Tweak: make <code>childNodes</code>, and the many places in jsdom that use it, much faster. (Joris-van-der-Wel)</li>
</ul>
<h2 id="_1-4-1"><a class="header-anchor" href="#_1-4-1">#</a> 1.4.1</h2>
<ul>
<li>Tweak: faster implementation of <code>NodeList.prototype.length</code>, which should speed up common operations like <code>appendChild</code> and similar. (Joris-van-der-Wel)</li>
</ul>
<h2 id="_1-4-0"><a class="header-anchor" href="#_1-4-0">#</a> 1.4.0</h2>
<ul>
<li>Fix: <code>HTMLInputElement.prototype.checked</code> and <code>defaultChecked</code> now behave per the spec. (Joris-van-der-Wel)</li>
<li>Fix: <code>HTMLOptionElement.prototype.selected</code> now behaves per the spec. (Joris-van-der-Wel)</li>
<li>Fix: <code>HTMLInputElement.prototype.value</code> now behaves per the spec. (Joris-van-der-Wel)</li>
<li>Fix: <code>HTMLTextAreaElement.prototype.value</code> and <code>defaultValue</code> now behave per the spec. (Joris-van-der-Wel)</li>
<li>Add: <code>HTMLTextAreaElement.prototype.defaultValue</code> now has a setter, and <code>HTMLTextAreaElement.prototype.textLength</code> now exists. (Joris-van-der-Wel)</li>
<li>Fix: resetting a <code>&lt;form&gt;</code> now behaves per spec for all different types of form elements. (Joris-van-der-Wel)</li>
<li>Fix: radio buttons reset other radio buttons correctly now per the spec. (Joris-van-der-Wel)</li>
<li>Fix: <code>document.cloneNode</code> now works. (AVGP)</li>
<li>Fix: <code>hasAttribute</code> is now case-insensitive, as it should be. (AVGP)</li>
<li>Fix: <code>div.toString()</code> now returns <code>[object HTMLDivElement]</code>. (AVGP)</li>
</ul>
<h2 id="_1-3-2"><a class="header-anchor" href="#_1-3-2">#</a> 1.3.2</h2>
<ul>
<li>Fix: check if <code>module.parent</code> exists before using it to construct a document's initial URL. Apparently some testing frameworks like Jest do not correctly emulate the module environment; this compensates. (SegFaultx64)</li>
</ul>
<h2 id="_1-3-1"><a class="header-anchor" href="#_1-3-1">#</a> 1.3.1</h2>
<ul>
<li>Fix: changing attributes on <code>&lt;option&gt;</code> elements will now have the correct consequences. For example changing the <code>id</code> attribute now interacts correctly with <code>document.getElementById</code>. (Joris-van-der-Wel)</li>
</ul>
<h2 id="_1-3-0"><a class="header-anchor" href="#_1-3-0">#</a> 1.3.0</h2>
<ul>
<li>Add: moved <code>focus</code> and <code>blur</code> methods to <code>HTMLElement.prototype</code>, instead of having them only be present on certain element prototypes. Our focus story is still not very spec-compliant, but this is a step in the right direction. (vincentsiao)</li>
</ul>
<h2 id="_1-2-3"><a class="header-anchor" href="#_1-2-3">#</a> 1.2.3</h2>
<ul>
<li>Tweak: improve performance of <code>Node.prototype.insertBefore</code>, <code>Node.prototype.removeChild</code>, and several <code>AttributeList</code> methods. (Joris-van-der-Wel)</li>
</ul>
<h2 id="_1-2-2"><a class="header-anchor" href="#_1-2-2">#</a> 1.2.2</h2>
<ul>
<li>Fix: <code>querySelectorAll</code> correctly coerces its argument to a string; notably this allows you to pass arrays. (jeffcarp)</li>
<li>Fix: the <code>data</code> setter on text nodes correctly coerces the new value to a string. (medikoo)</li>
<li>Fix: <code>document.toString()</code> now returns <code>[object HTMLDocument]</code>. (jeffcarp)</li>
</ul>
<h2 id="_1-2-1"><a class="header-anchor" href="#_1-2-1">#</a> 1.2.1</h2>
<ul>
<li>Fix: handling of <code>&lt;template&gt;</code> element parsing and serialization, now that it is supported by parse5. (inikulin)</li>
</ul>
<h2 id="_1-2-0"><a class="header-anchor" href="#_1-2-0">#</a> 1.2.0</h2>
<ul>
<li>Add: <code>NodeFilter</code>, in particular its constants. (fhemberger)</li>
<li>Fix: initial <code>history.length</code> should be <code>1</code>, not <code>0</code>. (rgrove)</li>
<li>Fix: <code>history.pushState</code> and <code>history.replaceState</code> should not fire the <code>popstate</code> event. (rgrove)</li>
</ul>
<h2 id="_1-1-0"><a class="header-anchor" href="#_1-1-0">#</a> 1.1.0</h2>
<ul>
<li>Add: <code>document.implementation.createHTMLDocument()</code>. (fhemberger)</li>
<li>Fix: <code>localName</code> was sometimes <code>null</code> for elements when it should not be. (fhemberger)</li>
</ul>
<h2 id="_1-0-3"><a class="header-anchor" href="#_1-0-3">#</a> 1.0.3</h2>
<ul>
<li>Update: no longer requiring separate <code>cssstyle</code> and <code>cssstyle-browserify</code> dependencies; now <code>cssstyle</code> can be used directly. This also un-pins the <code>cssstyle</code> dependency so that future fixes arrive as they appear upstream.</li>
</ul>
<h2 id="_1-0-2"><a class="header-anchor" href="#_1-0-2">#</a> 1.0.2</h2>
<ul>
<li>Fix: temporarily pin <code>cssstyle</code> dependency to at most 0.2.18 until <a href="https://github.com/chad3814/CSSStyleDeclaration/issues/20" target="_blank" rel="noopener noreferrer">chad3814/CSSStyleDeclaration#20<OutboundLink/></a> is fixed.</li>
<li>Fix: browserifying jsdom should work better now that the required packages are included as <code>dependencies</code> instead of <code>devDependencies</code>. (Sebmaster)</li>
<li>Fix: using <code>jsdom.env</code> in a browser environment now correctly defaults <code>options.url</code> to <code>location.href</code> instead of trying to infer a reasonable <code>fil://</code> URL using techniques that fail in the browser. (rattrayalex)</li>
</ul>
<h2 id="_1-0-1"><a class="header-anchor" href="#_1-0-1">#</a> 1.0.1</h2>
<ul>
<li>Fix: the return value of <code>EventTarget.prototype.dispatchEvent</code> should be <code>true</code> when the default is <em>not</em> prevented; previously it was the opposite. (eventualbuddha)</li>
</ul>
<h2 id="_1-0-0"><a class="header-anchor" href="#_1-0-0">#</a> 1.0.0</h2>
<p>For a consolidated list of changes from 0.11.1 to 1.0.0, see <a href="https://github.com/jsdom/jsdom/wiki/Changes-from-0.11.1-to-1.0.0" target="_blank" rel="noopener noreferrer">this wiki page<OutboundLink/></a>.</p>
<ul>
<li>Remove: nonstandard <code>EventTarget.getListeners</code>; <code>EventTarget.forwardIterator</code>; <code>EventTarget.backwardIterator</code>; <code>EventTarget.singleIterator</code>.</li>
<li>Remove: nonstandard <code>document.innerHTML</code>. (jorendorff)</li>
<li>Fix: <code>value</code> and <code>defaultValue</code> properties of a <code>HTMLInputElement</code> are now correctly synced to the <code>value=&quot;&quot;</code> attribute. (Sebmaster)</li>
</ul>
<h2 id="_1-0-0-pre-7"><a class="header-anchor" href="#_1-0-0-pre-7">#</a> 1.0.0-pre.7</h2>
<ul>
<li>Remove: support for old, untested HTML and XML parsers, namely davglass/node-htmlparser and isaacs/sax-js. In the future we plan to work toward a standardized parsing interface that other parsers can implement, instead of adding custom code to jsdom for various parsers. This interface still is being decided though, as it needs to support complex things like pausing the parse stream (for <code>document.write</code>) and parsing disconnected fragments (for <code>document.innerHTML</code>). (Sebmaster)</li>
<li>Add: new <code>parsingMode</code> configuration, to allow you to manually specify XML or HTML. (Sebmaster)</li>
<li>Change: jsdom will no longer use the presence of <code>&lt;?xml</code> or similar to attempt to auto-detect XHTML documents. Instead, it will by default treat them the same as browsers do, with the <code>&lt;?xml</code> declaration just being a bogus comment. If you need your document interpreted as XHTML instead of HTML, use the <code>parsingMode</code> option. (Sebmaster)</li>
<li>Tweak: memoize various DOM-querying functions (e.g. <code>getElementsByTagName</code>, <code>querySelector</code>, etc.) to improve performance. (ccarpita)</li>
</ul>
<h2 id="_1-0-0-pre-6"><a class="header-anchor" href="#_1-0-0-pre-6">#</a> 1.0.0-pre.6</h2>
<ul>
<li>Fix: another parsing issues with void elements and <code>innerHTML</code>, this time related to disconnected nodes. This was a regression between 0.11.1 and 1.0.0-pre.1. (paton)</li>
<li>Fix: same-named radio inputs should not be mutually exclusive unless they are in the same form. (stof)</li>
</ul>
<h2 id="_1-0-0-pre-5"><a class="header-anchor" href="#_1-0-0-pre-5">#</a> 1.0.0-pre.5</h2>
<ul>
<li>Fix: sometimes calling <code>window.close()</code> would cause a segfault. (paton)</li>
</ul>
<h2 id="_1-0-0-pre-4"><a class="header-anchor" href="#_1-0-0-pre-4">#</a> 1.0.0-pre.4</h2>
<ul>
<li>Fix: attributes and elements now have their <code>prefix</code>, <code>localName</code>, and <code>namespaceURI</code> properties set correctly in all cases. (Excepting <code>application/xhtml+xml</code> mode, which jsdom does not support yet.) (Sebmaster)</li>
</ul>
<h2 id="_1-0-0-pre-3"><a class="header-anchor" href="#_1-0-0-pre-3">#</a> 1.0.0-pre.3</h2>
<ul>
<li>Fix: void elements no longer parsed correctly when using <code>innerHTML</code>. This was a regression between 0.11.1 and 1.0.0-pre.1. (Sebmaster)</li>
</ul>
<h2 id="_1-0-0-pre-2"><a class="header-anchor" href="#_1-0-0-pre-2">#</a> 1.0.0-pre.2</h2>
<ul>
<li>Fix: parsing and serialization of attributes in the form <code>x:y</code>, e.g. <code>xmlns:xlink</code> or <code>xlink:href</code>. This was a regression between 0.11.1 and 1.0.0-pre.1. (Sebmaster)</li>
</ul>
<h2 id="_1-0-0-pre-1"><a class="header-anchor" href="#_1-0-0-pre-1">#</a> 1.0.0-pre.1</h2>
<p>This is a prerelease of jsdom's first major version. It incorporates several great additions, as well as a general cleanup of the API surface, which make it more backward-incompatible than usual. Starting with the 1.0.0 release, we will be following semantic versioning, so that you can depend on stability within major version ranges. But we still have <a href="https://github.com/jsdom/jsdom/issues?q=is%3Aopen+is%3Aissue+milestone%3A1.0" target="_blank" rel="noopener noreferrer">a few more issues<OutboundLink/></a> before we can get there, so I don't want to do 1.0.0 quite yet.</p>
<p>This release owes a special thanks to <a href="https://github.com/Sebmaster" target="_blank" rel="noopener noreferrer">@Sebmaster<OutboundLink/></a>, for his amazing work taking on some of the hardest problems in jsdom and solving them with gusto.</p>
<h3 id="major-changes"><a class="header-anchor" href="#major-changes">#</a> Major changes</h3>
<ul>
<li>jsdom now can be browserified into a bundle that works in web workers! This is highly experimental, but also highly exciting! (lawnsea)</li>
<li>An overhaul of the <a href="https://github.com/jsdom/jsdom#initialization-lifecycle" target="_blank" rel="noopener noreferrer">initialization lifecycle<OutboundLink/></a>, to bring more control and address common use cases. (Sebmaster)</li>
<li>The excellent <a href="https://npmjs.org/package/parse5" target="_blank" rel="noopener noreferrer">parse5<OutboundLink/></a> HTML parser is now the default parser, fixing many parsing bugs and giving us full, official-test-suite-passing HTML parsing support. This especially impacts documents that didn't include optional tags like <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, or <code>&lt;body&gt;</code> in their source. We also use parse5 for serialization, fixing many bugs there. (Sebmaster)</li>
<li>As part of the new parser story, we are not supporting XML for now. It might work if you switch to a different parser (e.g. htmlparser2), but in the end, HTML and XML are very different, and we are not attempting to be an XML DOM. That said, we eventually want to support XML to the same extent browsers do (i.e., support XHTML and SVG, with an appropriate MIME type switch); this is being planned in <a href="https://github.com/jsdom/jsdom/issues/820" target="_blank" rel="noopener noreferrer">#820<OutboundLink/></a>.</li>
</ul>
<h3 id="removed-jsdom-apis"><a class="header-anchor" href="#removed-jsdom-apis">#</a> Removed jsdom APIs</h3>
<ul>
<li><code>jsdom.createWindow</code>: use <code>document.parentWindow</code> after creating a document</li>
<li><code>jsdom.html</code>: use <code>jsdom.jsdom</code></li>
<li><code>jsdom.version</code>: use <code>require(&quot;jsdom/package.json&quot;).version</code></li>
<li><code>jsdom.level</code>: levels are deprecated and will probably be removed in 2.0.0</li>
<li><code>jsdom.dom</code></li>
<li><code>jsdom.browserAugmentation</code></li>
<li><code>jsdom.windowAugmentation</code></li>
</ul>
<h3 id="changed-jsdom-apis"><a class="header-anchor" href="#changed-jsdom-apis">#</a> Changed jsdom APIs</h3>
<ul>
<li><code>jsdom.jsdom</code> no longer takes a level as its second argument.</li>
<li><code>jsdom.jQueryify</code> now requires a jQuery URL, since <a href="http://blog.jquery.com/2014/07/03/dont-use-jquery-latest-js/" target="_blank" rel="noopener noreferrer">always picking the latest was a bad idea<OutboundLink/></a>.</li>
</ul>
<h3 id="removed-non-standard-dom-apis"><a class="header-anchor" href="#removed-non-standard-dom-apis">#</a> Removed non-standard DOM APIs</h3>
<ul>
<li><code>document.createWindow</code>: use <code>document.parentWindow</code></li>
<li><code>document.innerHTML</code> and <code>document.outerHTML</code>: use the new <code>jsdom.serializeDocument</code> to include the DOCTYPE, or use <code>document.documentElement.outerHTML</code> to omit it.</li>
</ul>
<h3 id="other-fixes"><a class="header-anchor" href="#other-fixes">#</a> Other fixes</h3>
<ul>
<li>Allow empty strings to be passed to <code>jsdom.env</code>. (michaelmior)</li>
<li>Fix for a memory leak in <code>EventTarget.prototype.dispatchEvent</code>. (Joris-van-der-Wel)</li>
<li>Make event listeners in the capture phase also fire on the event target. (Joris-van-der-Wel)</li>
<li>Correctly reset <code>eventPhase</code> and <code>currentTarget</code> on events, before and after a dispatch. (Joris-van-der-Wel)</li>
<li>Fix <code>document.cookie = null</code> to not throw, but instead just do nothing. (kapouer)</li>
</ul>
<h2 id="_0-11-1"><a class="header-anchor" href="#_0-11-1">#</a> 0.11.1</h2>
<ul>
<li>Add: <code>Node.prototype.parentElement</code>. (lukasbuenger)</li>
<li>Fix: attributes that are reflected as properties should be <code>''</code> when not present, instead of <code>null</code>. (Note that <code>getAttribute</code> still returns <code>null</code> for them). (thejameskyle)</li>
<li>Fix: <code>textContent</code> now works for nodes that do not have children, like text nodes for example. (hayes)</li>
<li>Fix: <code>jsdom.jQueryify</code> was using the wrong URL for jQuery by default. (lukasbuenger)</li>
</ul>
<h2 id="_0-11-0"><a class="header-anchor" href="#_0-11-0">#</a> 0.11.0</h2>
<ul>
<li>Add: new default level, <code>living</code>, reflecting our focus on the <a href="http://dom.spec.whatwg.org/" target="_blank" rel="noopener noreferrer">DOM Living Standard<OutboundLink/></a> and the <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/" target="_blank" rel="noopener noreferrer">HTML Living Standard<OutboundLink/></a>, which are what browsers actually implement. This should open the door for more features of the modern DOM and HTML specs to be implemented in jsdom. (robotlovesyou)</li>
<li>Add: <code>Node.prototype.contains</code> now implemented. (robotlovesyou)</li>
<li>Add: <code>navigator.cookieEnabled</code> now implemented; it always returns <code>true</code>. (Sebmaster)</li>
<li>Change: DOCTYPEs no longer have their <code>name</code> property uppercased during parsing, and appear in the output of <code>document.innerHTML</code>.</li>
<li>Fix: <code>Node.prototype.compareDocumentPosition</code> implemented correctly; various document position constants added to the <code>Node</code> constructor. (robotlovesyou)</li>
<li>Fix: <code>DocumentType.prototype.parentNode</code> now returns the document node, not <code>null</code>. (robotlovesyou)</li>
<li>Fix: various <code>navigator</code> properties are now getters, not data properties. (Sebmaster)</li>
<li>Fix: a bug involving invalid script paths and <code>jsdom.jQueryify</code>. (Sebmaster)</li>
</ul>
<h2 id="_0-10-6"><a class="header-anchor" href="#_0-10-6">#</a> 0.10.6</h2>
<ul>
<li>Add: remaining URL properties to <code>window.location</code> and <code>HTMLAnchorElement</code>.</li>
<li>Fix: the presence of <code>String.prototype.normalize</code>, which is available by default in Node 0.11.13 onwards, caused reflected attributes to break. (brock8503)</li>
<li>Fix: iframes now correctly load <code>about:blank</code> when the <code>src</code> attribute is empty or missing. (mcmathja)</li>
<li>Fix: documents containing only whitespace now correctly generate wrapper documents, just like blank documents do. (nikolas)</li>
<li>Tweak: lazy-load the request module, to improve overall jsdom loading time. (tantaman)</li>
</ul>
<h2 id="_0-10-5"><a class="header-anchor" href="#_0-10-5">#</a> 0.10.5</h2>
<ul>
<li>Fix: the list of void elements has been updated to match the latest HTML spec.</li>
<li>Fix: when serializing void elements, don't include a <code>/</code>: i.e. the result is now <code>&lt;br&gt;</code> instead of <code>&lt;br /&gt;</code>.</li>
</ul>
<h2 id="_0-10-4"><a class="header-anchor" href="#_0-10-4">#</a> 0.10.4</h2>
<ul>
<li>Fix: another case was found where jQuery 1.11's <code>show()</code> method would cause errors.</li>
<li>Add: <code>querySelector</code> and <code>querySelectorAll</code> methods to <code>DocumentFragment</code>s. (Joris-van-der-Wel)</li>
</ul>
<h2 id="_0-10-3"><a class="header-anchor" href="#_0-10-3">#</a> 0.10.3</h2>
<ul>
<li>Fix: various defaults on <code>HTMLAnchorElement</code> and <code>window.location</code> should not be <code>null</code>; they should usually be the empty string.</li>
</ul>
<h2 id="_0-10-2"><a class="header-anchor" href="#_0-10-2">#</a> 0.10.2</h2>
<ul>
<li>Fix: Using jQuery 1.11's <code>show()</code> method would cause an error to be thrown.</li>
<li>Fix: <code>window.location</code> properties were not updating correctly after using <code>pushState</code> or <code>replaceState</code>. (toomanydaves)</li>
</ul>
<h2 id="_0-10-1"><a class="header-anchor" href="#_0-10-1">#</a> 0.10.1</h2>
<ul>
<li>Fix: <code>window.location.port</code> should default to <code>&quot;&quot;</code>, not <code>null</code>. (bpeacock)</li>
</ul>
<h2 id="_0-10-0"><a class="header-anchor" href="#_0-10-0">#</a> 0.10.0</h2>
<ul>
<li>Add: a more complete <code>document.cookie</code> implementation, that supports multiple cookies. Note that options like <code>path</code>, <code>max-age</code>, etc. are still ignored. (dai-shi)</li>
</ul>
<h2 id="_0-9-0"><a class="header-anchor" href="#_0-9-0">#</a> 0.9.0</h2>
<ul>
<li>Add: implement attribute ordering semantics from WHATWG DOM spec, and in general overhaul attribute storage implementation to be much more awesome and accurate. (lddubeau)</li>
<li>Add: <code>port</code> and <code>protocol</code> to <code>HTMLAnchorElement</code>. (sporchia)</li>
<li>Fix: make <code>HTMLInputElement</code> not have a <code>type</code> <em>attribute</em> by default. It still has a default value for the <code>type</code> <em>property</em>, viz. <code>&quot;text&quot;</code>. (aredridel)</li>
<li>Fix: treat empty namespace URI as meaning &quot;no namespace&quot; with the <code>getAttributeNS</code>, <code>hasAttributeNS</code>, and <code>setAttributeNS</code> functions. (lddubeau)</li>
<li>Fix: reference typed arrays in a way that doesn't immediately break on Node 0.6. Node 0.6 isn't supported in general, though. (kangax)</li>
</ul>
<h2 id="_0-8-11"><a class="header-anchor" href="#_0-8-11">#</a> 0.8.11</h2>
<ul>
<li>Add: store and use cookies between requests; customizable cookie jars also possible. (stockholmux)</li>
<li>Fix: attributes named the same as prototype properties of <code>NamedNodeMap</code> no longer break jsdom. (papandreou)</li>
<li>Fix: <code>removeAttributeNS</code> should not throw on missing attributes. (lddubeau)</li>
<li>Change: remove <code>__proto__</code>, <code>__defineGetter__</code>, and <code>__defineSetter__</code> usage, as part of a project to make jsdom work better across multiple environments. (lawnsea)</li>
</ul>
<h2 id="_0-8-10"><a class="header-anchor" href="#_0-8-10">#</a> 0.8.10</h2>
<ul>
<li>Add: <code>hash</code> property to <code>HTMLAnchorElement</code>. (fr0z3nk0)</li>
</ul>
<h2 id="_0-8-9"><a class="header-anchor" href="#_0-8-9">#</a> 0.8.9</h2>
<ul>
<li>Upgrade: <code>cssom</code> to 0.3.0, adding support for <code>@-moz-document</code> and fixing a few other issues.</li>
<li>Upgrade: <code>cssstyle</code> to 0.2.6, adding support for many shorthand properties and better unit handling.</li>
</ul>
<h2 id="_0-8-8"><a class="header-anchor" href="#_0-8-8">#</a> 0.8.8</h2>
<ul>
<li>Fix: avoid repeated <code>NodeList.prototype.length</code> calculation, for a speed improvement. (peller)</li>
</ul>
<h2 id="_0-8-7"><a class="header-anchor" href="#_0-8-7">#</a> 0.8.7</h2>
<ul>
<li>Add: <code>host</code> property to <code>HTMLAnchorElement</code>. (sporchia)</li>
</ul>
<h2 id="_0-8-6"><a class="header-anchor" href="#_0-8-6">#</a> 0.8.6</h2>
<ul>
<li>Fix: stop accidentally modifying <code>Error.prototype</code>. (mitar)</li>
<li>Add: a dummy <code>getBoundingClientRect</code> method, that returns <code>0</code> for all properties of the rectangle, is now implemented. (F1LT3R)</li>
</ul>
<h2 id="_0-8-5"><a class="header-anchor" href="#_0-8-5">#</a> 0.8.5</h2>
<ul>
<li>Add: <code>href</code> property on <code>CSSStyleSheet</code> instances for external CSS files. (FrozenCow)</li>
</ul>
<h2 id="_0-8-4"><a class="header-anchor" href="#_0-8-4">#</a> 0.8.4</h2>
<ul>
<li>Add: typed array constructors on the <code>window</code>. (nlacasse)</li>
<li>Fix: <code>querySelector</code> and <code>querySelectorAll</code> should be on the prototypes of <code>Element</code> and <code>Document</code>, not own-properties. (mbostock)</li>
</ul>
<h2 id="_0-8-3"><a class="header-anchor" href="#_0-8-3">#</a> 0.8.3</h2>
<ul>
<li>Fix: when auto-detecting whether the first parameter to <code>jsdom.env</code> is a HTML string or a filename, deal with long strings correctly instead of erroring. (baryshev)</li>
</ul>
<h2 id="_0-8-2"><a class="header-anchor" href="#_0-8-2">#</a> 0.8.2</h2>
<ul>
<li>Add: basic <code>window.history</code> support, including <code>back</code>, <code>forward</code>, <code>go</code>, <code>pushState</code>, and <code>replaceState</code>. (ralphholzmann)</li>
<li>Add: if an <code>&lt;?xml?&gt;</code> declaration starts the document, will try to parse as XML, e.g. not lowercasing the tags. (robdodson)</li>
<li>Fix: tag names passed to <code>createElement</code> are coerced to strings before evaluating.</li>
</ul>
<h2 id="_0-8-1-hotfix"><a class="header-anchor" href="#_0-8-1-hotfix">#</a> 0.8.1 (hotfix)</h2>
<ul>
<li>Fix: a casing issue that prevented jsdom from loading on Unix and Solaris systems. (dai-shi)</li>
<li>Fix: <code>window.location.replace</code> was broken. (dai-shi)</li>
<li>Fix: update minimum htmlparser2 version, to ensure you get the latest parsing-related bugfixes.</li>
</ul>
<h2 id="_0-8-0"><a class="header-anchor" href="#_0-8-0">#</a> 0.8.0</h2>
<ul>
<li>Add: working <code>XMLHttpRequest</code> support, including cookie passing! (dai-shi)</li>
<li>Add: there is now a <code>window.navigator.noUI</code> property that evaluates to true, if you want to specifically distinguish jsdom in your tests.</li>
</ul>
<h2 id="_0-7-0"><a class="header-anchor" href="#_0-7-0">#</a> 0.7.0</h2>
<ul>
<li>Change: the logic when passing <code>jsdom.env</code> a string is more accurate, and you can be explicit by using the <code>html</code>, <code>url</code>, or <code>file</code> properties. This is a breaking change in the behavior of <code>html</code>, which used to do the same auto-detection logic as the string-only version.</li>
<li>Fix: errors raised in scripts are now passed to <code>jsdom.env</code>'s callback. (airportyh)</li>
<li>Fix: set <code>window.location.href</code> correctly when using <code>jsdom.env</code> to construct a window from a URL, when that URL causes a redirect. (fegs)</li>
<li>Add: a more complete and accurate <code>window.location</code> object, which includes firing <code>hashchange</code> events when the hash is changed. (dai-shi)</li>
<li>Add: when using a non-implemented feature, mention exactly what it was that is not implemented in the error message. (papandreou)</li>
</ul>
<h2 id="_0-6-5"><a class="header-anchor" href="#_0-6-5">#</a> 0.6.5</h2>
<ul>
<li>Fix: custom attributes whose names were the same as properties of <code>Object.prototype</code>, e.g. <code>&quot;constructor&quot;</code>, would confuse jsdom massively.</li>
</ul>
<h2 id="_0-6-4"><a class="header-anchor" href="#_0-6-4">#</a> 0.6.4</h2>
<ul>
<li>Fix: CSS selectors which contain commas inside quotes are no longer misinterpreted. (chad3814)</li>
<li>Add: <code>&lt;img&gt;</code> elements now fire <code>load</code> events when their <code>src</code> attributes are changed. (kapouer)</li>
</ul>
<h2 id="_0-6-3"><a class="header-anchor" href="#_0-6-3">#</a> 0.6.3</h2>
<ul>
<li>Fix: better automatic detection of URLs vs. HTML fragments when using <code>jsdom.env</code>. (jden)</li>
</ul>
<h2 id="_0-6-2"><a class="header-anchor" href="#_0-6-2">#</a> 0.6.2</h2>
<ul>
<li>Fix: URL resolution to be amazing and extremely browser-compatible, including the interplay between the document's original URL, any <code>&lt;base&gt;</code> tags that were set, and any relative <code>href</code>s. This impacts many parts of jsdom having to do with external resources or accurate <code>href</code> and <code>src</code> attributes. (deitch)</li>
<li>Add: access to frames and iframes via named properties. (adrianlang)</li>
<li>Fix: node-canvas integration, which had been broken since 0.5.7.</li>
</ul>
<h2 id="_0-6-1"><a class="header-anchor" href="#_0-6-1">#</a> 0.6.1</h2>
<ul>
<li>Make the code parseable with Esprima. (squarooticus)</li>
<li>Use the correct <code>package.json</code> field <code>&quot;repository&quot;</code> instead of <code>&quot;repositories&quot;</code> to prevent npm warnings. (jonathanong)</li>
</ul>
<h2 id="_0-6-0"><a class="header-anchor" href="#_0-6-0">#</a> 0.6.0</h2>
<p>Integrated a new HTML parser, <a href="https://npmjs.org/package/htmlparser2" target="_blank" rel="noopener noreferrer">htmlparser2<OutboundLink/></a>, from fb55. This is an actively maintained and much less buggy parser, fixing many of our parsing issues, including:</p>
<ul>
<li>Parsing elements with optional closing tags, like <code>&lt;p&gt;</code> or <code>&lt;td&gt;</code>.</li>
<li>The <code>innerHTML</code> of <code>&lt;script&gt;</code> tags no longer cuts off the first character.</li>
<li>Empty attributes now have <code>&quot;&quot;</code> as their value instead of the attribute name.</li>
<li>Multiline attributes no longer get horribly mangled.</li>
<li>Attribute names can now be any value allowed by HTML5, including crazy things like <code>^</code>.</li>
<li>Attribute values can now contain any value allowed by HTML5, including e.g. <code>&gt;</code> and <code>&lt;</code>.</li>
</ul>
<h2 id="_0-5-7"><a class="header-anchor" href="#_0-5-7">#</a> 0.5.7</h2>
<ul>
<li>Fix: make event handlers attached via <code>on&lt;event&gt;</code> more spec-compatible, supporting <code>return false</code> and passing the <code>event</code> argument. (adrianlang)</li>
<li>Fix: make the getter for <code>textContent</code> more accurate, e.g. in cases involving comment nodes or processing instruction nodes. (adrianlang)</li>
<li>Fix: make <code>&lt;canvas&gt;</code> behave like a <code>&lt;div&gt;</code> when the <code>node-canvas</code> package isn't available, instead of crashing. (stepheneb)</li>
</ul>
<h2 id="_0-5-6"><a class="header-anchor" href="#_0-5-6">#</a> 0.5.6</h2>
<ul>
<li>Fix: <code>on&lt;event&gt;</code> properties are correctly updated when using <code>setAttributeNode</code>, <code>attributeNode.value =</code>, <code>removeAttribute</code>, and <code>removeAttributeNode</code>; before it only worked with <code>setAttribute</code>. (adrianlang)</li>
<li>Fix: <code>HTMLCollection</code>s now have named properties based on their members' <code>id</code> and <code>name</code> attributes, e.g. <code>form.elements.inputId</code> is now present. (adrianlang)</li>
</ul>
<h2 id="_0-5-5"><a class="header-anchor" href="#_0-5-5">#</a> 0.5.5</h2>
<ul>
<li>Fix: <code>readOnly</code> and <code>selected</code> properties were not correct when their attribute values were falsy, e.g. <code>&lt;option selected=&quot;&quot;&gt;</code>. (adrianlang)</li>
</ul>
<h2 id="_0-5-4"><a class="header-anchor" href="#_0-5-4">#</a> 0.5.4</h2>
<p>This release, and all future releases, require at least Node.js 0.8.</p>
<ul>
<li>Add: parser can now be set via <code>jsdom.env</code> configuration. (xavi-)</li>
<li>Fix: accessing <code>rowIndex</code> for table rows that are not part of a table would throw. (medikoo)</li>
<li>Fix: several places in the code accidentally created global variables, or referenced nonexistant values. (xavi-)</li>
<li>Fix: <code>&lt;img&gt;</code> elements' <code>src</code> properties now evaluate relative to <code>location.href</code>, just like <code>&lt;a&gt;</code> elements' <code>href</code> properties. (brianmaissy)</li>
</ul>
<h2 id="_0-5-3"><a class="header-anchor" href="#_0-5-3">#</a> 0.5.3</h2>
<p>This release is compatible with Node.js 0.6, whereas all future releases will require at least Node.js 0.8.</p>
<ul>
<li>Fix: <code>getAttributeNS</code> now returns <code>null</code> for attributes that are not present, just like <code>getAttribute</code>. (mbostock)</li>
<li>Change: <code>&quot;request&quot;</code> dependency pinned to version 2.14 for Node.js 0.6 compatibility.</li>
</ul>
<h2 id="_0-5-2"><a class="header-anchor" href="#_0-5-2">#</a> 0.5.2</h2>
<ul>
<li>Fix: stylesheets with <code>@-webkit-keyframes</code> rules were crashing calls to <code>getComputedStyle</code>.</li>
<li>Fix: handling of <code>features</code> option to <code>jsdom.env</code>.</li>
<li>Change: retain the value of the <code>style</code> attribute until the element's <code>style</code> property is touched. (papandreou)</li>
</ul>
<h2 id="_0-5-1"><a class="header-anchor" href="#_0-5-1">#</a> 0.5.1</h2>
<ul>
<li>Fix: <code>selectedIndex</code> now changes correctly in response to <code>&lt;option&gt;</code> elements being selected. This makes <code>&lt;select&gt;</code> elements actually work like you would want, especially with jQuery. (xcoderzach)</li>
<li>Fix: <code>checked</code> works correctly on radio buttons, i.e. only one can be checked and clicking on one does not uncheck it. Previously they worked just like checkboxes. (xcoderzach)</li>
<li>Fix: <code>click()</code> on <code>&lt;input&gt;</code> elements now fires a click event. (xcoderzach)</li>
</ul>
<h2 id="_0-5-0"><a class="header-anchor" href="#_0-5-0">#</a> 0.5.0</h2>
<ul>
<li>Fix: Make <code>contextify</code> a non-optional dependency. jsdom never worked without it, really, so this just caused confusion.</li>
</ul>
<h2 id="_0-4-2"><a class="header-anchor" href="#_0-4-2">#</a> 0.4.2</h2>
<ul>
<li>Fix: <code>selected</code> now returns true for the first <code>&lt;option&gt;</code> in a <code>&lt;select&gt;</code> if nothing is explicitly set.</li>
<li>Fix: tweaks to accuracy and speed of the <code>querySelectorAll</code> implementation.</li>
</ul>
<h2 id="_0-4-1-hotfix"><a class="header-anchor" href="#_0-4-1-hotfix">#</a> 0.4.1 (hotfix)</h2>
<ul>
<li>Fix: crashes when loading HTML files with <code>&lt;a&gt;</code> tags with no <code>href</code> attribute. (eleith)</li>
</ul>
<h2 id="_0-4-0"><a class="header-anchor" href="#_0-4-0">#</a> 0.4.0</h2>
<ul>
<li>Fix: <code>getAttribute</code> now returns <code>null</code> for attributes that are not present, as per DOM4 (but in contradiction to DOM1 through DOM3).</li>
<li>Fix: static <code>NodeList</code>-returning methods (such as <code>querySelectorAll</code>) now return a real <code>NodeList</code> instance.</li>
<li>Change: <code>NodeList</code>s no longer expose nonstandard properties to the world, like <code>toArray</code>, without first prefixing them with an underscore.</li>
<li>Change: <code>NodeList</code>s no longer inconsistently have array methods. Previously, live node lists would have <code>indexOf</code>, while static node lists would have them all. Now, they have no array methods at all, as is correct per the specification.</li>
</ul>
<h2 id="_0-3-4"><a class="header-anchor" href="#_0-3-4">#</a> 0.3.4</h2>
<ul>
<li>Fix: stylesheets with <code>@media</code> rules were crashing calls to <code>getComputedStyle</code>, e.g. those in jQuery's initialization.</li>
</ul>
<h2 id="_0-3-3"><a class="header-anchor" href="#_0-3-3">#</a> 0.3.3</h2>
<ul>
<li>Fix: make <code>document.write</code> calls insert new elements correctly. (johanoverip, kblomquist).</li>
<li>Fix: <code>&lt;input&gt;</code> tags with no <code>type</code> attribute now return a default value of <code>&quot;text&quot;</code> when calling <code>inputEl.getAttribute(&quot;type&quot;)</code>.</li>
</ul>
<h2 id="_0-3-2"><a class="header-anchor" href="#_0-3-2">#</a> 0.3.2</h2>
<ul>
<li>Fix: stylesheets with &quot;joining&quot; rules (i.e. those containing comma-separated selectors) now apply when using <code>getComputedStyle</code>. (chad3814, godmar)</li>
<li>Add: support for running the tests using @aredridel's <a href="https://npmjs.org/package/html5" target="_blank" rel="noopener noreferrer">html5<OutboundLink/></a> parser, as a prelude toward maybe eventually making this the default and fixing various parsing bugs.</li>
</ul>
<h2 id="_0-3-1-hotfix"><a class="header-anchor" href="#_0-3-1-hotfix">#</a> 0.3.1 (hotfix)</h2>
<ul>
<li>Fix: crashes when invalid selectors were present in stylesheets.</li>
</ul>
<h2 id="_0-3-0"><a class="header-anchor" href="#_0-3-0">#</a> 0.3.0</h2>
<ul>
<li>Fix: a real <code>querySelector</code> implementation, courtesy of the nwmatcher project, solves many outstanding <code>querySelector</code> bugs.</li>
<li>Add: <code>matchesSelector</code>, again via nwmatcher.</li>
<li>Add: support for styles coming from <code>&lt;style&gt;</code> and <code>&lt;link rel=&quot;stylesheet&quot;&gt;</code> elements being applied to the results of <code>window.getComputedStyle</code>. (chad3814)</li>
<li>Add: basic implementation of <code>focus()</code> and <code>blur()</code> methods on appropriate elements. More work remains.</li>
<li>Fix: script filenames containing spaces will now work when passed to <code>jsdom.env</code>. (TomNomNom)</li>
<li>Fix: elements with IDs <code>toString</code>, <code>hasOwnProperty</code>, etc. could cause lots of problems.</li>
<li>Change: A window's <code>load</code> event always fires asynchronously now, even if no external resources are necessary.</li>
<li>Change: turning off mutation events is not supported, since doing so breaks external-resource fetching.</li>
</ul>
<h2 id="_0-2-19"><a class="header-anchor" href="#_0-2-19">#</a> 0.2.19</h2>
<ul>
<li>Fix: URL resolution was broken on pages that included <code>href</code>-less <code>&lt;base&gt;</code> tags.</li>
<li>Fix: avoid putting <code>attr</code> in the global scope when using node-canvas. (starsquare)</li>
<li>Add: New <code>SkipExternalResources</code> feature accepts a regular expression. (fgalassi)</li>
</ul>
<h2 id="_0-2-18"><a class="header-anchor" href="#_0-2-18">#</a> 0.2.18</h2>
<ul>
<li>Un-revert: cssstyle has fixed its memory problems, so we get back accurate <code>cssText</code> and <code>style</code> properties again.</li>
</ul>
<h2 id="_0-2-17-hotfix"><a class="header-anchor" href="#_0-2-17-hotfix">#</a> 0.2.17 (hotfix)</h2>
<ul>
<li>Revert: had to revert the use of the cssstyle package. <code>cssText</code> and <code>style</code> properties are no longer as accurate.</li>
<li>Fix: cssstyle was causing out-of-memory errors on some larger real-world pages, e.g. reddit.com.</li>
</ul>
<h2 id="_0-2-16"><a class="header-anchor" href="#_0-2-16">#</a> 0.2.16</h2>
<ul>
<li>Update: Sizzle version updated to circa September 2012.</li>
<li>Fix: when setting a text node's value to a falsy value, convert it to a string instead of coercing it to <code>&quot;&quot;</code>.</li>
<li>Fix: Use the cssstyle package for <code>CSSStyleDeclaration</code>, giving much more accurate <code>cssText</code> and <code>style</code> properties on all elements. (chad3814)</li>
<li>Fix: the <code>checked</code> property on checkboxes and radiobuttons now reflects the attribute correctly.</li>
<li>Fix: <code>HTMLOptionElement</code>'s <code>text</code> property should return the option's text, not its value.</li>
<li>Fix: make the <code>name</code> property only exist on certain specific tags, and accurately reflect the corresponding <code>name</code> attribute.</li>
<li>Fix: don't format <code>outerHTML</code> (especially important for <code>&lt;pre&gt;</code> elements).</li>
<li>Fix: remove the <code>value</code> property from <code>Text</code> instances (e.g. text nodes).</li>
<li>Fix: don't break in the presence of a <code>String.prototype.normalize</code> method, like that of sugar.js.</li>
<li>Fix: include level3/xpath correctly.</li>
<li>Fix: many more tests passing, especially related to file:/// URLs on Windows. Tests can now be run with <code>npm test</code>.</li>
</ul>
<h2 id="_0-2-15"><a class="header-anchor" href="#_0-2-15">#</a> 0.2.15</h2>
<ul>
<li>Fix: make sure that doctypes don't get set as the documentElement (Aria Stewart)</li>
<li>Add: HTTP proxy support for jsdom.env (Eugene Ware)</li>
<li>Add: .hostname and .pathname properties to Anchor elements to comply with WHATWG standard (Avi Deitcher)</li>
<li>Fix: Only decode HTML entities in text when not inside a <code>&lt;script&gt;</code> or <code>&lt;style&gt;</code> tag. (Andreas Lind Petersen)</li>
<li>Fix: HTMLSelectElement single selection implemented its type incorrectly as 'select' instead of 'select-one' (John Roberts)</li>
</ul>
<h2 id="_0-2-14"><a class="header-anchor" href="#_0-2-14">#</a> 0.2.14</h2>
<ul>
<li>Fix: when serializing single tags use ' /&gt;' instead of '/&gt;' (kapouer)</li>
<li>Fix: support for contextify simulation using vm.runInContext (trodrigues)</li>
<li>Fix: allow jsdom.env's config.html to handle file paths which contain spaces (shinuza)</li>
<li>Fix: Isolate QuerySelector from prototype (Nao Iizuka)</li>
<li>Add: setting textContent to '' or clears children (Jason Davies)</li>
<li>Fix: jsdom.env swallows exceptions that occur in the callback (Xavi)</li>
</ul>
<h2 id="_0-2-13"><a class="header-anchor" href="#_0-2-13">#</a> 0.2.13</h2>
<ul>
<li>Fix: remove unused style property which was causing explosions in 0.2.12 and node 0.4.7</li>
</ul>
<h2 id="_0-2-12"><a class="header-anchor" href="#_0-2-12">#</a> 0.2.12</h2>
<ul>
<li>Fix: do not include gmon.out/v8.log/tests in npm distribution</li>
</ul>
<h2 id="_0-2-11"><a class="header-anchor" href="#_0-2-11">#</a> 0.2.11</h2>
<ul>
<li>Add: allow non-unique element ids (Avi Deitcher)</li>
<li>Fix: make contexify an optional dependency (Isaac Schlueter)</li>
<li>Add: scripts injected by jsdom are now marked with a 'jsdom' class for serialization's sake (Peter Lyons)</li>
<li>Fix: definition for ldquo entity (Andrew Morton)</li>
<li>Fix: access NamedNodeMap items via property (Brian McDaniel)</li>
<li>Add: upgrade sizzle from 1.0 to <a href="https://github.com/jquery/sizzle/commit/fe2f618106bb76857b229113d6d11653707d0b22" target="_blank" rel="noopener noreferrer">fe2f6181<OutboundLink/></a> which is roughly 1.5.1</li>
<li>Add: documentation now includes <code>jsdom.level(x, 'feature')</code></li>
<li>Fix: make <code>toArray</code> and <code>item</code> on <code>NodeList</code> objects non-enumerable properties</li>
<li>Add: a reference to <code>window.close</code> in the readme</li>
<li>Fix: Major performance boost (Felix Gnass)</li>
<li>Fix: Using querySelector <code>:not()</code> throws a <code>ReferenceError</code> (Felix Gnass)</li>
</ul>
<h2 id="_0-2-10"><a class="header-anchor" href="#_0-2-10">#</a> 0.2.10</h2>
<ul>
<li>Fix: problems with lax dependency versions</li>
<li>Fix: CSSOM constructors are hung off of the dom (Brian McDaniel)</li>
<li>Fix: move away from deprecated 'sys' module</li>
<li>Fix: attribute event handlers on bubbling path aren't called (Brian McDaniel)</li>
<li>Fix: setting textarea.value to markup should not be parsed (Andreas Lind Petersen)</li>
<li>Fix: content of script tags should not be escaped (Ken Sternberg)</li>
<li>Fix: DocumentFeatures for iframes with no src attribute. (Brian McDaniel) Closes #355</li>
<li>Fix: 'trigger' to 'raise' to be a bit more descriptive</li>
<li>Fix: When <code>ProcessExternalResources['script']</code> is disabled, do <em>not</em> run inline event handlers. #355</li>
<li>Add: verbose flag to test runner (to show tests as they are running and finishing)</li>
</ul>
<h2 id="_0-2-9"><a class="header-anchor" href="#_0-2-9">#</a> 0.2.9</h2>
<ul>
<li>Fix: ensure features are properly reset after a jsdom.env invocation. Closes #239</li>
<li>Fix: ReferenceError in the scanForImportRules helper function</li>
<li>Fix: bug in appendHtmlToElement with HTML5 parser (Brian McDaniel)</li>
<li>Add: jsonp support (lheiskan)</li>
<li>Fix: for setting script element's text property (Brian McDaniel)</li>
<li>Fix: for jsdom.env src bug</li>
<li>Add: test for jsdom.env src bug (multiple done calls)</li>
<li>Fix: NodeList properties should enumerate like arrays (Felix Gnass)</li>
<li>Fix: when downloading a file, include the url.search in file path</li>
<li>Add: test for making a jsonp request with jquery from jsdom window</li>
<li>Add: test case for issue #338</li>
<li>Fix: double load behavior when mixing jsdom.env's <code>scripts</code> and <code>src</code> properties (cjroebuck)</li>
</ul>
<h2 id="_0-2-8-hotfix"><a class="header-anchor" href="#_0-2-8-hotfix">#</a> 0.2.8 (hotfix)</h2>
<ul>
<li>Fix: inline event handlers are ignored by everything except for the javascript context</li>
</ul>
<h2 id="_0-2-7-hotfix"><a class="header-anchor" href="#_0-2-7-hotfix">#</a> 0.2.7 (hotfix)</h2>
<ul>
<li>Fix stylesheet loading</li>
</ul>
<h2 id="_0-2-6"><a class="header-anchor" href="#_0-2-6">#</a> 0.2.6</h2>
<ul>
<li>Add: support for window.location.search and document.cookie (Derek Lindahl)</li>
<li>Add: jsdom.env now has a document configuation option which allows users to change the referer of the document (Derek Lindahl)</li>
<li>Fix: allow users to use different jsdom levels in the same process (sinegar)</li>
<li>Fix: removeAttributeNS no longer has a return value (Jason Davies)</li>
<li>Add: support for encoding/decoding all html entities from html4/5 (papandreou)</li>
<li>Add: jsdom.env() accepts the same features object seen in jsdom.jsdom and friends</li>
</ul>
<h2 id="_0-2-5"><a class="header-anchor" href="#_0-2-5">#</a> 0.2.5</h2>
<ul>
<li>Fix: serialize special characters in Element.innerHTML/Element.attributes like a grade A browser (Jason Priestley)</li>
<li>Fix: ensure Element.getElementById only returns elements that are attached to the document</li>
<li>Fix: ensure an Element's id is updated when changing the nodeValue of the 'id' attribute (Felix Gnass)</li>
<li>Add: stacktrace to error reporter (Josh Marshall)</li>
<li>Fix: events now bubble up to the window (Jason Davies)</li>
<li>Add: initial window.location.hash support (Josh Marshall)</li>
<li>Add: Node#insertBefore should do nothing when both params are the same node (Jason Davies)</li>
<li>Add: fixes for DOMAttrModified mutation events (Felix Gnass)</li>
</ul>
<h2 id="_0-2-4"><a class="header-anchor" href="#_0-2-4">#</a> 0.2.4</h2>
<ul>
<li>Fix: adding script to invalid/incomplete dom (document.documentElement) now catches the error and passes it in the <code>.env</code> callback (Gregory Tomlinson)</li>
<li>Cleanup: trigger and html tests</li>
<li>Add: support for inline event handlers (ie: <code>&lt;div onclick='some.horrible.string()'&gt;</code>) (Brian McDaniel)</li>
<li>Fix: script loading over https (Brian McDaniel) #280</li>
<li>Add: using style.setProperty updates the style attribute (Jimmy Mabey).</li>
<li>Add: invalid markup is reported as an error and attached to the associated element and document</li>
<li>Fix: crash when setChild() failes to create new DOM element (John Hurliman)</li>
<li>Added test for issue #287.</li>
<li>Added support for inline event handlers.</li>
<li>Moved frame tests to test/window/frame.js and cleaned up formatting.</li>
<li>Moved script execution tests to test/window/script.js.</li>
<li>Fix a crash when setChild() fails to create a new DOM element</li>
<li>Override CSSOM to update style attribute</li>
</ul>
<h2 id="_0-2-3"><a class="header-anchor" href="#_0-2-3">#</a> 0.2.3</h2>
<ul>
<li>Fix: segfault due to window being garbage collected prematurely
NOTE: you must manually close the window to free memory (window.close())</li>
</ul>
<h2 id="_0-2-2"><a class="header-anchor" href="#_0-2-2">#</a> 0.2.2</h2>
<ul>
<li>Switch to Contextify to manage the window's script execution.</li>
<li>Fix: allow nodelists to have a length of 0 and toArray to return an empty array</li>
<li>Fix: style serialization; issues #230 and #259</li>
<li>Fix: Incomplete DOCTYPE causes JavaScript error</li>
<li>Fix: indentation, removed outdated debug code and trailing whitespace.</li>
<li>Prevent JavaScript error when parsing incomplete <code>&lt;!DOCTYPE&gt;</code>. Closes #259.</li>
<li>Adding a test from brianmcd that ensures that setTimeout callbacks execute in the context of the window</li>
<li>Fixes issue 250: make <code>document.parentWindow === window</code> work</li>
<li>Added test to ensure that timer callbacks execute in the window context.</li>
<li>Fixes 2 issues in ResourceQueue</li>
<li>Make frame/iframe load/process scripts if the parent has the features enabled</li>
</ul>
<h2 id="_0-2-1"><a class="header-anchor" href="#_0-2-1">#</a> 0.2.1</h2>
<ul>
<li>Javascript execution fixes [#248, #163, #179]</li>
<li>XPath (Yonathan and Daniel Cassidy)</li>
<li>Start of cssom integration (Yonathan)</li>
<li>Conversion of tests to nodeunit! (Martin Davis)</li>
<li>Added sizzle tests, only failing 3/15</li>
<li>Set the title node's textContent rather than its innerHTML #242.  (Andreas Lind Petersen)</li>
<li>The textContent getter now walks the DOM and extract the text properly. (Andreas Lind Petersen)</li>
<li>Empty scripts won't cause jsdom.env to hang #172 (Karuna Sagar)</li>
<li>Every document has either a body or a frameset #82. (Karuna Sagar)</li>
<li>Added the ability to grab a level by string + feature. ie: jsdom.level(2, 'html') (Aria Stewart)</li>
<li>Cleaned up htmlencoding and fixed character (de)entification #147, #177 (Andreas Lind Petersen)</li>
<li>htmlencoding.HTMLDecode: Fixed decoding of <code>&amp;lt;</code>, <code>&amp;gt;</code>, <code>&amp;amp;</code>, and <code>&amp;apos;</code>. Closes #147 and #177.</li>
<li>Require dom level as a string or object. (Aria Stewart)</li>
<li>JS errors ar triggered on the script element, not document. (Yonathan)</li>
<li>Added configuration property 'headers' for HTTP request headers. (antonj)</li>
<li>Attr.specified is readonly - Karuna Sagar</li>
<li>Removed return value from setAttributeNS() #207 (Karuna Sagar)</li>
<li>Pass the correct script filename to runInContext. (robin)</li>
<li>Add http referrer support for the download() function. (Robin)</li>
<li>First attempt at fixing the horrible memory leak via window.stopTimers() (d-ash)</li>
<li>Use vm instead of evals binding (d-ash)</li>
<li>Add a way to set the encoding of the jsdom.env html request.</li>
<li>Fixed various typos/lint problems (d-ash)</li>
<li>The first parameter download is now the object returned by URL.parse(). (Robin)</li>
<li>Fixed serialization of elements with a style attribute.</li>
<li>Added src config option to jsdom.env() (Jerry Sievert)</li>
<li>Removed dead code from getNamedItemNS() (Karuna Sagar)</li>
<li>Changes to language/javascript so jsdom would work on v0.5.0-pre (Gord Tanner)</li>
<li>Correct spelling of &quot;Hierarchy request error&quot; (Daniel Cassidy)</li>
<li>Node and Exception type constants are available in all levels. (Daniel Cassidy)</li>
<li>Use \n instead of \r\n during serialization</li>
<li>Fixed auto-insertion of body/html tags  (Adrian Makowski)</li>
<li>Adopt unowned nodes when added to the tree. (Aria Stewart)</li>
<li>Fix the selected and defaultSelected fields of <code>option</code> element. - Yonathan</li>
<li>Fix: EventTarget.getListeners() now returns a shallow copy so that listeners can be safely removed while an event is being dispatched. (Felix Gnass)</li>
<li>Added removeEventListener() to DOMWindow (Felix Gnass)</li>
<li>Added the ability to pre-load scripts for jsdom.env() (Jerry Sievert)</li>
<li>Mutation event tests/fixes (Felix Gnass)</li>
<li>Changed HTML serialization code to (optionally) pretty print while traversing the tree instead of doing a regexp-based postprocessing. (Andreas Lind Petersen)</li>
<li>Relative and absolute urls now work as expected</li>
<li>setNamedItem no longer sets Node.parentNode #153 (Karuna Sagar)</li>
<li>Added missing semicolon after entity name - Felix Gnass</li>
<li>Added NodeList#indexOf implementation/tests (Karuna Sagar)</li>
<li>resourceLoader.download now works correctly with https and redirects (waslogic)</li>
<li>Scheme-less URLs default to the current protocol #87 (Alexander Flatter)</li>
<li>Simplification the prevSibling(), appendChild(), insertBefore() and replaceChild() code (Karuna Sagar)</li>
<li>Javascript errors use core.Node.trigger (Alexander Flatter)</li>
<li>Add core.Document.trigger in level1/core and level2/events; Make DOMWindow.console use it (Alexander Flatter)</li>
<li>Resource resolver fixes (Alexander Flatter)</li>
<li>Fix serialization of doctypes with new lines #148 (Karuna Sagar)</li>
<li>Child nodes are calculated immediately instead of after .length is called #169, #171, #176 (Karuna Sagar)</li>
</ul>
</ContentSlotsDistributor>
"},null]}