{"remainingRequest":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js??ref--1-0!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??ref--1-1!/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js??ref--1-2!/Users/licop/Documents/GitHub/What_is_FE/docs/syntax&API/ES语法/promise源码实现.md?vue&type=template&id=52a3fb44&","dependencies":[{"path":"/Users/licop/Documents/GitHub/What_is_FE/docs/syntax&API/ES语法/promise源码实现.md","mtime":1609602949026},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/licop/Documents/GitHub/What_is_FE/node_modules/_@vuepress_markdown-loader@1.7.1@@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoicHJvbWlzZS3mupDnoIHlrp7njrAifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNwcm9taXNlLea6kOeggeWunueOsCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBQcm9taXNlIOa6kOeggeWunueOsCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIueUqOS6hiIpLF9jKCdjb2RlJyxbX3ZtLl92KCJQcm9taXNlIildKSxfdm0uX3YoIui/meS5iOS5he+8jOW6lOivpeWvuSIpLF9jKCdjb2RlJyxbX3ZtLl92KCJQcm9taXNlIildKSxfdm0uX3YoIuS9v+eUqOaWueazleWSjOebuOWFs+WxnuaAp+W+iOeGn+aCieS6hu+8jOacrOaWh+WwhuS4gOatpeS4gOatpee8luWGmSIpLF9jKCdjb2RlJyxbX3ZtLl92KCJQcm9taXNlIildKSxfdm0uX3YoIueahOa6kOegge+8jOWunueOsOWFtuWfuuacrOWKn+iDveOAgiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6InByb21pc2Ut57G75qC45b+D6YC76L6R5a6e546wIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjcHJvbWlzZS3nsbvmoLjlv4PpgLvovpHlrp7njrAifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgUHJvbWlzZSDnsbvmoLjlv4PpgLvovpHlrp7njrAiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCLlnKjlhpnku6PnoIHlhYjnnIvkuIDkuIsgUHJvbWlzZSDnmoTkuIDkupvln7rnoYDnibnmgKfvvJoiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdjb2RlJyxbX3ZtLl92KCJQcm9taXNlIildKSxfdm0uX3YoIiDlsLHmmK/kuIDkuKrnsbsg5Zyo5omn6KGM6L+Z5Liq57G755qE5pe25YCZIOmcgOimgeS8oOmAkuS4gOS4quaJp+ihjOWZqOi/m+WOuyDmiafooYzlmajkvJrnq4vljbPmiafooYwiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdjb2RlJyxbX3ZtLl92KCJQcm9taXNlIildKSxfdm0uX3YoIuS4reacieS4ieenjeeKtuaAgSDliIbliKvkuLog5oiQ5YqfICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJmdWxmaWxsZWQiKV0pLF92bS5fdigiIOWksei0pSAiKSxfYygnY29kZScsW192bS5fdigicmVqZWN0ZWQiKV0pLF92bS5fdigiIOetieW+hSAiKSxfYygnY29kZScsW192bS5fdigicGVuZGluZyIpXSksX3ZtLl92KCJcbuWFtuS4reeKtuaAgeWPquiDveS7jiAiKSxfYygnY29kZScsW192bS5fdigicGVuZGluZyIpXSksX3ZtLl92KCIgLT4gIiksX2MoJ2NvZGUnLFtfdm0uX3YoImZ1bGZpbGxlZCIpXSksX3ZtLl92KCIg5oiWICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJwZW5kaW5nIildKSxfdm0uX3YoIiAtPiAiKSxfYygnY29kZScsW192bS5fdigicmVqZWN0ZWQiKV0pLF92bS5fdigiIOS4gOaXpueKtuaAgeehruWumuWwseS4jeWPr+abtOaUuSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ2NvZGUnLFtfdm0uX3YoInJlc29sdmUiKV0pLF92bS5fdigiIOWSjCAiKSxfYygnY29kZScsW192bS5fdigicmVqZWN0IildKSxfdm0uX3YoIiDlh73mlbDmmK/nlKjmnaXmm7TmlLnnirbmgIHnmoQiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdjb2RlJyxbX3ZtLl92KCJ0aGVuIildKSxfdm0uX3YoIiDmlrnms5XlhoXpg6jlgZrnmoTkuovmg4XlsLHliKTmlq3nirbmgIEg5aaC5p6c54q25oCB5piv5oiQ5YqfIOiwg+eUqOaIkOWKn+eahOWbnuiwg+WHveaVsCDlpoLmnpznirbmgIHmmK/lpLHotKUg6LCD55So5aSx6LSl5Zue6LCD5Ye95pWwIHRoZW4g5pa55rOV5piv6KKr5a6a5LmJ5Zyo5Y6f5Z6L5a+56LGh5Lit55qEIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygnY29kZScsW192bS5fdigidGhlbiIpXSksX3ZtLl92KCIg5oiQ5Yqf5Zue6LCD5pyJ5LiA5Liq5Y+C5pWwIOihqOekuuaIkOWKn+S5i+WQjueahOWAvCB0aGVuIOWksei0peWbnuiwg+acieS4gOS4quWPguaVsCDooajnpLrlpLHotKXlkI7nmoTljp/lm6AiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigi5ZCM5LiA5LiqICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJwcm9taXNlIildKSxfdm0uX3YoIiDlr7nosaHkuIvpnaLnmoQgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInRoZW4iKV0pLF92bS5fdigiIOaWueazleaYr+WPr+S7peiiq+iwg+eUqOWkmuasoeeahCIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ2NvZGUnLFtfdm0uX3YoInRoZW4iKV0pLF92bS5fdigiIOaWueazleaYr+WPr+S7peiiq+mTvuW8j+iwg+eUqOeahCwg5ZCO6Z2iICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJ0aGVuIildKSxfdm0uX3YoIiDmlrnms5XnmoTlm57osIPlh73mlbDmi7/liLDlgLznmoTmmK/kuIrkuIDkuKogIiksX2MoJ2NvZGUnLFtfdm0uX3YoInRoZW4iKV0pLF92bS5fdigiIOaWueazleeahOWbnuiwg+WHveaVsOeahOi/lOWbnuWAvCIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigi55Sx5Lul5LiK54m55oCn5a6e546wICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJQcm9taXNlIildKSxfdm0uX3YoIiDnsbvnmoTmoLjlv4PpgLvovpEsIOmZpOS6hiIpLF9jKCdjb2RlJyxbX3ZtLl92KCJ0aGVuIildKSxfdm0uX3YoIiDmlrnms5Xpk77lvI/osIPnlKjlip/og70iKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIn0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLFtfdm0uX3YoImNvbnN0IFBFTkRJTkcgPSAncGVuZGluZyc7IC8vIOetieW+hVxuY29uc3QgRlVMRklMTEVEID0gJ2Z1bGxpbGxlZCcgLy8g5oiQ5YqfXG5jb25zdCBSRUpFQ1RFRCA9ICdyZWplY3RlZCcgLy8g5aSx6LSlXG5cbmNsYXNzIE15UHJvbWlzZSB7XG4gIGNvbnN0cnVjdG9yKGV4ZWN1dG9yKSB7XG4gICAgZXhlY3V0b3IodGhpcy5yZXNvbHZlLCB0aGlzLnJlamVjdClcbiAgfVxuICAvLyBwcm9taXNlIOeKtuaAgVxuICBzdGF0dXMgPSBQRU5ESU5HO1xuICAvLyDmiJDlip/kuYvlkI7nmoTlgLxcbiAgdmFsdWUgPSB1bmRlZmluZWQ7XG4gIC8vIOWksei0peS5i+WQjueahOWAvFxuICByZWFzb24gPSB1bmRlZmluZWQ7XG5cblxuICByZXNvbHZlID0gKHZhbHVlKSA9PiB7XG4gICAgaWYodGhpcy5zdGF0dXMgIT09IFBFTkRJTkcpIHJldHVybjtcbiAgICAvLyDlsIbnirbmgIHmm7TmlLnkuLrmiJDlip9cbiAgICB0aGlzLnN0YXR1cyA9IEZVTEZJTExFRDtcbiAgICAvLyDkv53lrZjmiJDlip/kuYvlkI7nmoTlgLxcbiAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgfVxuXG4gIHJlamVjdCA9IChyZWFzb24pID0+IHtcbiAgICBpZih0aGlzLnN0YXR1cyAhPT0gUEVORElORykgcmV0dXJuO1xuICAgIC8vIOWwhueKtuaAgeabtOaUueS4uuWksei0pVxuICAgIHRoaXMuc3RhdHVzID0gUkVKRUNURUQ7XG4gICAgdGhpcy5yZWFzb24gPSByZWFzb247XG4gIH1cblxuICB0aGVuID0gKHN1Y2Nlc3NDYWxsYmFjaywgZmFpbENhbGxiYWNrKSA9PiB7XG4gICAgLy8g5Yik5pat54q25oCBXG4gICAgaWYodGhpcy5zdGF0dXMgPT09IEZVTEZJTExFRCkge1xuICAgICAgc3VjY2Vzc0NhbGxiYWNrKHRoaXMudmFsdWUpO1xuICAgIH0gZWxzZSBpZih0aGlzLnN0YXR1cyA9PT0gUkVKRUNURUQpIHtcbiAgICAgIGZhaWxDYWxsYmFjayh0aGlzLnJlYXNvbik7XG4gICAgfVxuICB9XG59XG5cbiIpXSldKV0pLF9jKCdoMicse2F0dHJzOnsiaWQiOiLliqDlhaXlvILmraXpgLvovpEifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiPliqDlhaXlvILmraXpgLvovpEifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIg5Yqg5YWl5byC5q2l6YC76L6RIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigi5Y+v5Lul5Y+R546w5Lul5LiK5Luj56CB5b2TIiksX2MoJ2NvZGUnLFtfdm0uX3YoImV4ZWN1dG9yIildKSxfdm0uX3YoIuWGheWMheWQq+W8guatpeS7o+eggeaYr+aciemXrumimOeahO+8jCIpLF9jKCdjb2RlJyxbX3ZtLl92KCJ0aGVuIildKSxfdm0uX3YoIuaWueazleW8gOWni+aJp+ihjOWQju+8jCIpLF9jKCdjb2RlJyxbX3ZtLl92KCJyZXNvbHZlIildKSxfdm0uX3YoIuaWueazleiwg+eUqOi/mOayoeaUueWPmOeKtuaAge+8jOaJgOS7peW8guatpeWHveaVsOayoeacieiwg+eUqOOAgiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnY29kZScsW192bS5fdigidGhlbiIpXSksX3ZtLl92KCIg5pa55rOV5Yqg5YWl5byC5q2l6YC76L6RLOetieW8guatpeS7u+WKoeaJp+ihjOWujOWcqOaJp+ihjOWbnuiwg+WHveaVsO+8jOWwhuWbnuiwg+WHveaVsOWcqCAiKSxfYygnY29kZScsW192bS5fdigicGVuZGluZyIpXSksX3ZtLl92KCIg54q25oCB5LiL5a2Y5YKo6LW35p2l77yM562J5b6F5oiQ5Yqf5oiW5aSx6LSl5LmL5ZCO5YaN6LCD55So44CCIildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCJjbGFzcyBNeVByb21pc2Uge1xuICAgIGNvbnN0cnVjdG9yKGV4ZWN1dG9yKSB7XG4gICAgICAgIGV4ZWN1dG9yKHRoaXMucmVzb2x2ZSwgdGhpcy5yZWplY3QpXG4gICAgfVxuICAgIC8vIHByb21pc2Ug54q25oCBXG4gICAgc3RhdHVzID0gUEVORElORztcbiAgICAvLyDmiJDlip/kuYvlkI7nmoTlgLxcbiAgICB2YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAvLyDlpLHotKXkuYvlkI7nmoTlgLxcbiAgICByZWFzb24gPSB1bmRlZmluZWRcbiAgICAvLyDmiJDlip/lm57osINcbiAgICBzdWNjZXNzQ2FsbGJhY2sgPSB1bmRlZmluZWQ7XG4gICAgLy8g5aSx6LSl5Zue6LCDXG4gICAgZmFpbENhbGxiYWNrID0gdW5kZWZpbmVkO1xuXG4gICAgcmVzb2x2ZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZih0aGlzLnN0YXR1cyAhPT0gUEVORElORykgcmV0dXJuO1xuICAgICAgICAvLyDlsIbnirbmgIHmm7TmlLnkuLrmiJDlip9cbiAgICAgICAgdGhpcy5zdGF0dXMgPSBGVUxGSUxMRUQ7XG4gICAgICAgIC8vIOS/neWtmOaIkOWKn+S5i+WQjueahOWAvFxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICAgICAgLy8g5Yik5pat5oiQ5Yqf5Zue6LCD5piv5ZCm5a2Y5Zyo77yM5aaC5p6c5a2Y5Zyo6LCD55SoXG4gICAgICAgIHRoaXMuc3VjY2Vzc0NhbGxiYWNrICYmIHRoaXMuc3VjY2Vzc0NhbGxiYWNrKHRoaXMudmFsdWUpXG4gICAgfVxuXG4gICAgcmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgICAgICBpZih0aGlzLnN0YXR1cyAhPT0gUEVORElORykgcmV0dXJuO1xuICAgICAgICAvLyDlsIbnirbmgIHmm7TmlLnkuLrlpLHotKVcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBSRUpFQ1RFRDtcbiAgICAgICAgdGhpcy5yZWFzb24gPSByZWFzb247XG4gICAgICAgIC8vIOWIpOaWreWksei0peWbnuiwg+aYr+WQpuWtmOWcqO+8jOWmguaenOWtmOWcqOiwg+eUqFxuICAgICAgICB0aGlzLmZhaWxDYWxsYmFjayAmJiB0aGlzLmZhaWxDYWxsYmFjayh0aGlzLnZhbHVlKVxuICAgIH1cblxuICAgIHRoZW4gPSAoc3VjY2Vzc0NhbGxiYWNrLCBmYWlsQ2FsbGJhY2spID0+IHtcbiAgICAgICAgLy8g5Yik5pat54q25oCBXG4gICAgICAgIGlmKHRoaXMuc3RhdHVzID09PSBGVUxGSUxMRUQpIHtcbiAgICAgICAgICAgIHN1Y2Nlc3NDYWxsYmFjayh0aGlzLnZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmKHRoaXMuc3RhdHVzID09PSBSRUpFQ1RFRCkge1xuICAgICAgICAgICAgZmFpbENhbGxiYWNrKHRoaXMucmVhc29uKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIOetieW+hVxuICAgICAgICAgICAgLy8g5bCG5oiQ5Yqf5Zue6LCD5ZKM5aSx6LSl5Zue6LCD5a2Y5YKo6LW35p2lXG4gICAgICAgICAgICB0aGlzLnN1Y2Nlc3NDYWxsYmFjayA9IHN1Y2Nlc3NDYWxsYmFjaztcbiAgICAgICAgICAgIHRoaXMuZmFpbENhbGxiYWNrID0gZmFpbENhbGxiYWNrO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4iKV0pXSldKSxfYygnaDInLHthdHRyczp7ImlkIjoidGhlbi3mt7vliqDlpJrkuKrlpITnkIblh73mlbAifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiN0aGVuLea3u+WKoOWkmuS4quWkhOeQhuWHveaVsCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiB0aGVuIOa3u+WKoOWkmuS4quWkhOeQhuWHveaVsCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIuebruWJjSIpLF9jKCdjb2RlJyxbX3ZtLl92KCJQcm9taXNlIildKSxfdm0uX3YoIuWPquaUr+aMgeS4gOS4qiB0aGVuIOaWueazleOAgiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIuWunueOsCAiKSxfYygnY29kZScsW192bS5fdigidGhlbiIpXSksX3ZtLl92KCIg5re75Yqg5aSa5Liq5aSE55CG5Ye95pWw77yM5bCGICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJ0aGlzLnN1Y2Nlc3NDYWxsYmFjayIpXSksX3ZtLl92KCIsICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJ0aGlzLmZhaWxDYWxsYmFjayIpXSksX3ZtLl92KCIg5Y+Y5oiQ5pWw57uEIildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCJjbGFzcyBNeVByb21pc2Uge1xuICAgIGNvbnN0cnVjdG9yKGV4ZWN1dG9yKSB7XG4gICAgICAgIGV4ZWN1dG9yKHRoaXMucmVzb2x2ZSwgdGhpcy5yZWplY3QpXG4gICAgfVxuICAgIC8vIHByb21pc2Ug54q25oCBXG4gICAgc3RhdHVzID0gUEVORElORztcbiAgICAvLyDmiJDlip/kuYvlkI7nmoTlgLxcbiAgICB2YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAvLyDlpLHotKXkuYvlkI7nmoTlgLxcbiAgICByZWFzb24gPSB1bmRlZmluZWRcbiAgICAvLyDmiJDlip/lm57osINcbiAgICBzdWNjZXNzQ2FsbGJhY2sgPSBbXTtcbiAgICAvLyDlpLHotKXlm57osINcbiAgICBmYWlsQ2FsbGJhY2sgPSBbXTtcblxuICAgIHJlc29sdmUgPSAodmFsdWUpID0+IHtcbiAgICAgICAgaWYodGhpcy5zdGF0dXMgIT09IFBFTkRJTkcpIHJldHVybjtcbiAgICAgICAgLy8g5bCG54q25oCB5pu05pS55Li65oiQ5YqfXG4gICAgICAgIHRoaXMuc3RhdHVzID0gRlVMRklMTEVEO1xuICAgICAgICAvLyDkv53lrZjmiJDlip/kuYvlkI7nmoTlgLxcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlXG4gICAgICAgIC8vIOWIpOaWreaIkOWKn+Wbnuiwg+aYr+WQpuWtmOWcqO+8jOWmguaenOWtmOWcqOiwg+eUqFxuICAgICAgICB3aGlsZSh0aGlzLnN1Y2Nlc3NDYWxsYmFjay5sZW5ndGgpIHRoaXMuc3VjY2Vzc0NhbGxiYWNrLnNoaWZ0KCkodGhpcy52YWx1ZSk7XG4gICAgfVxuXG4gICAgcmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgICAgICBpZih0aGlzLnN0YXR1cyAhPT0gUEVORElORykgcmV0dXJuO1xuICAgICAgICAvLyDlsIbnirbmgIHmm7TmlLnkuLrlpLHotKVcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBSRUpFQ1RFRDtcbiAgICAgICAgdGhpcy5yZWFzb24gPSByZWFzb247XG4gICAgICAgIC8vIOWIpOaWreWksei0peWbnuiwg+aYr+WQpuWtmOWcqO+8jOWmguaenOWtmOWcqOiwg+eUqFxuICAgICAgICB3aGlsZSh0aGlzLmZhaWxDYWxsYmFjay5sZW5ndGgpIHRoaXMuZmFpbENhbGxiYWNrLnNoaWZ0KCkodGhpcy5yZWFzb24pO1xuXG4gICAgfVxuXG4gICAgdGhlbiA9IChzdWNjZXNzQ2FsbGJhY2ssIGZhaWxDYWxsYmFjaykgPT4ge1xuICAgICAgICAvLyDliKTmlq3nirbmgIFcbiAgICAgICAgaWYodGhpcy5zdGF0dXMgPT09IEZVTEZJTExFRCkge1xuICAgICAgICAgICAgc3VjY2Vzc0NhbGxiYWNrKHRoaXMudmFsdWUpO1xuICAgICAgICB9IGVsc2UgaWYodGhpcy5zdGF0dXMgPT09IFJFSkVDVEVEKSB7XG4gICAgICAgICAgICBmYWlsQ2FsbGJhY2sodGhpcy5yZWFzb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8g562J5b6FXG4gICAgICAgICAgICAvLyDlsIbmiJDlip/lm57osIPlkozlpLHotKXlm57osIPlrZjlgqjotbfmnaVcbiAgICAgICAgICAgIHRoaXMuc3VjY2Vzc0NhbGxiYWNrLnB1c2goc3VjY2Vzc0NhbGxiYWNrKTtcbiAgICAgICAgICAgIHRoaXMuZmFpbENhbGxiYWNrLnB1c2goZmFpbENhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIpXSldKV0pLF9jKCdoMicse2F0dHJzOnsiaWQiOiJ0aGVuLeaWueazleeahOmTvuW8j+iwg+eUqCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3RoZW4t5pa55rOV55qE6ZO+5byP6LCD55SoIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIHRoZW4g5pa55rOV55qE6ZO+5byP6LCD55SoIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigi5a6e546wICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJ0aGVuIildKSxfdm0uX3YoIiDmlrnms5XnmoTpk77lvI/osIPnlKjvvIzlubblsIYgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInRoZW4iKV0pLF92bS5fdigiIOaWueazleeahOi/lOWbnuWAvOS8oOmAkue7meS4i+S4gOS4qiAiKSxfYygnY29kZScsW192bS5fdigidGhlbiIpXSksX3ZtLl92KCIg5pa55rOVIildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIuWwhiAiKSxfYygnY29kZScsW192bS5fdigidGhlbiIpXSksX3ZtLl92KCLov5Tlm57kuIDkuKogcHJvbWlzZSDlr7nosaHvvIzliKTmlq3lm57osIPlh73mlbDov5Tlm57nmoTmmK/mma7pgJrlgLzov5jmmK8gcHJvbWlzZSDlr7nosaEiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigi5b2TICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJwcm9taXNlLnRoZW4iKV0pLF92bS5fdigiIOi/lOWbnuWSjOiHqui6q+ebuOWQjOeahCAiKSxfYygnY29kZScsW192bS5fdigicHJvbWlzZSIpXSksX3ZtLl92KCIg5oqb5Ye66ZSZ6K+vIildKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIn0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLFtfdm0uX3YoImNsYXNzIE15UHJvbWlzZSB7XG4gICAgY29uc3RydWN0b3IoZXhlY3V0b3IpIHtcbiAgICAgICAgZXhlY3V0b3IodGhpcy5yZXNvbHZlLCB0aGlzLnJlamVjdClcbiAgICB9XG4gICAgLy8gcHJvbWlzZSDnirbmgIFcbiAgICBzdGF0dXMgPSBQRU5ESU5HO1xuICAgIC8vIOaIkOWKn+S5i+WQjueahOWAvFxuICAgIHZhbHVlID0gdW5kZWZpbmVkO1xuICAgIC8vIOWksei0peS5i+WQjueahOWAvFxuICAgIHJlYXNvbiA9IHVuZGVmaW5lZFxuICAgIC8vIOaIkOWKn+Wbnuiwg1xuICAgIHN1Y2Nlc3NDYWxsYmFjayA9IFtdO1xuICAgIC8vIOWksei0peWbnuiwg1xuICAgIGZhaWxDYWxsYmFjayA9IFtdO1xuXG4gICAgcmVzb2x2ZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZih0aGlzLnN0YXR1cyAhPT0gUEVORElORykgcmV0dXJuO1xuICAgICAgICAvLyDlsIbnirbmgIHmm7TmlLnkuLrmiJDlip9cbiAgICAgICAgdGhpcy5zdGF0dXMgPSBGVUxGSUxMRUQ7XG4gICAgICAgIC8vIOS/neWtmOaIkOWKn+S5i+WQjueahOWAvFxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICAgICAgLy8g5Yik5pat5oiQ5Yqf5Zue6LCD5piv5ZCm5a2Y5Zyo77yM5aaC5p6c5a2Y5Zyo6LCD55SoXG4gICAgICAgIHdoaWxlKHRoaXMuc3VjY2Vzc0NhbGxiYWNrLmxlbmd0aCkgdGhpcy5zdWNjZXNzQ2FsbGJhY2suc2hpZnQoKSh0aGlzLnZhbHVlKTtcbiAgICB9XG5cbiAgICByZWplY3QgPSAocmVhc29uKSA9PiB7XG4gICAgICAgIGlmKHRoaXMuc3RhdHVzICE9PSBQRU5ESU5HKSByZXR1cm47XG4gICAgICAgIC8vIOWwhueKtuaAgeabtOaUueS4uuWksei0pVxuICAgICAgICB0aGlzLnN0YXR1cyA9IFJFSkVDVEVEO1xuICAgICAgICB0aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgICAgICAgLy8g5Yik5pat5aSx6LSl5Zue6LCD5piv5ZCm5a2Y5Zyo77yM5aaC5p6c5a2Y5Zyo6LCD55SoXG4gICAgICAgIHdoaWxlKHRoaXMuZmFpbENhbGxiYWNrLmxlbmd0aCkgdGhpcy5mYWlsQ2FsbGJhY2suc2hpZnQoKSh0aGlzLnJlYXNvbik7XG5cbiAgICB9XG5cbiAgICB0aGVuID0gKHN1Y2Nlc3NDYWxsYmFjaywgZmFpbENhbGxiYWNrKSA9PiB7XG4gICAgICAgIGxldCBwcm9taXNlMiA9IG5ldyBNeVByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgLy8g5Yik5pat54q25oCBXG4gICAgICAgICAgICBpZih0aGlzLnN0YXR1cyA9PT0gRlVMRklMTEVEKSB7XG4gICAgICAgICAgICAgICAgLy8g5Y+Y5oiQ5byC5q2l5Luj56CB77yM562JcHJvbWlzZTLkuLvmtYHnqIvmiafooYzlrozlkI7lho3osIPnlKjvvIzlj6/ojrflj5Zwcm9taXNlMlxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgeCA9IHN1Y2Nlc3NDYWxsYmFjayh0aGlzLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgLy8g5Yik5pateOeahOWAvOaYr+aZrumAmuWAvOi/mOaYr3Byb21pc2Xlr7nosaFcbiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5pmu6YCa5YC8IOebtOaOpeiwg+eUqHJlc29sdmVcbiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5pivcHJvbWlzZeWvueixoSDmn6XnnItwcm9taXNl5a+56LGh55qE6L+U5Zue57uT5p6cXG4gICAgICAgICAgICAgICAgICAgIC8vIOWGjeagueaNrnByb21pc2Xlr7nosaHnmoTov5Tlm57mja7nu5PmnpzlhrPlrprosIPnlKhyZXNvbHZl6L+Y5piv6LCD55SocmVqZWN0XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmVQcm9taXNlKHByb21pc2UyLCB4LCByZXNvbHZlLCByZWplY3QpXG4gICAgICAgICAgICAgICAgfSwgMCk7XG5cbiAgICAgICAgICAgIH0gZWxzZSBpZih0aGlzLnN0YXR1cyA9PT0gUkVKRUNURUQpIHtcbiAgICAgICAgICAgICAgICBmYWlsQ2FsbGJhY2sodGhpcy5yZWFzb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyDnrYnlvoVcbiAgICAgICAgICAgICAgICAvLyDlsIbmiJDlip/lm57osIPlkozlpLHotKXlm57osIPlrZjlgqjotbfmnaVcbiAgICAgICAgICAgICAgICB0aGlzLnN1Y2Nlc3NDYWxsYmFjay5wdXNoKHN1Y2Nlc3NDYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgdGhpcy5mYWlsQ2FsbGJhY2sucHVzaChmYWlsQ2FsbGJhY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBwcm9taXNlMjtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVQcm9taXNlKHByb21pc2UyLCB4LCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAvLyDlvZNwcm9taXNlLnRoZW4g6L+U5Zue5ZKM6Ieq6Lqr55u45ZCMcHJvbWlzZeaKpemUmVxuICAgIGlmKHByb21pc2UyID09PSB4KSB7XG4gICAgICAgIHJldHVybiByZWplY3QobmV3IFR5cGVFcnJvcignQ2hhaW5pbmcgY3ljbGUgZGV0ZWN0ZWQgZm9yIHByb21pc2UgIzxQcm9taXNlPicpKVxuICAgIH1cbiAgICBpZih4IGluc3RhbmNlb2YgTXlQcm9taXNlKSB7XG4gICAgICAgIHgudGhlbihyZXNvbHZlLCByZWplY3QpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8g5pmu6YCa5YC8XG4gICAgICAgIHJlc29sdmUoeClcbiAgICB9XG59XG4iKV0pXSldKSxfYygnaDInLHthdHRyczp7ImlkIjoi5o2V6I636ZSZ6K+vLXRoZW4t5pa55rOV5a6M5ZaEIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIj5o2V6I636ZSZ6K+vLXRoZW4t5pa55rOV5a6M5ZaEIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIOaNleiOt+mUmeivryAmIHRoZW4g5pa55rOV5a6M5ZaEIildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIuWcqOaJp+ihjOWZqOWSjOWbnuiwg+WHveaVsOa3u+WKoCB0cnkgY2F0Y2gg5byC5bi45o2V6I6377yM5b2T5Y+R5oiQ6ZSZ6K+v5piv5YiZ55u05o6l6LCD55SoIHJlamVjdCIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCLlsIYgdGhlbiDmlrnms5XnmoTlj4LmlbDlj5jmiJDlj6/pgInlj4LmlbBcbiIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigicHJvbWlzZS50aGVuKCkudGhlbigpLnRoZW4odmFsdWUgPT4gY29uc29sZS5sb2codmFsdWUpKSDmnIDlkI7nmoQiKSxfYygnY29kZScsW192bS5fdigidGhlbiIpXSksX3ZtLl92KCLmlrnms5XnmoQgdmFsdWUg5Y+v5Lul5o6l5pS25YiwIHByb21pc2Ug55qE6L+U5Zue5YC8IildKV0pXSldKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCJjbGFzcyBNeVByb21pc2Uge1xuICAgIGNvbnN0cnVjdG9yKGV4ZWN1dG9yKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBleGVjdXRvcih0aGlzLnJlc29sdmUsIHRoaXMucmVqZWN0KVxuICAgICAgICB9IGNhdGNoKGUpIHtcbiAgICAgICAgICAgIHRoaXMucmVqZWN0KGUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwcm9taXNlIOeKtuaAgVxuICAgIHN0YXR1cyA9IFBFTkRJTkc7XG4gICAgLy8g5oiQ5Yqf5LmL5ZCO55qE5YC8XG4gICAgdmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgLy8g5aSx6LSl5LmL5ZCO55qE5YC8XG4gICAgcmVhc29uID0gdW5kZWZpbmVkXG4gICAgLy8g5oiQ5Yqf5Zue6LCDXG4gICAgc3VjY2Vzc0NhbGxiYWNrID0gW107XG4gICAgLy8g5aSx6LSl5Zue6LCDXG4gICAgZmFpbENhbGxiYWNrID0gW107XG5cbiAgICByZXNvbHZlID0gKHZhbHVlKSA9PiB7XG4gICAgICAgIGlmKHRoaXMuc3RhdHVzICE9PSBQRU5ESU5HKSByZXR1cm47XG4gICAgICAgIC8vIOWwhueKtuaAgeabtOaUueS4uuaIkOWKn1xuICAgICAgICB0aGlzLnN0YXR1cyA9IEZVTEZJTExFRDtcbiAgICAgICAgLy8g5L+d5a2Y5oiQ5Yqf5LmL5ZCO55qE5YC8XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZVxuICAgICAgICAvLyDliKTmlq3miJDlip/lm57osIPmmK/lkKblrZjlnKjvvIzlpoLmnpzlrZjlnKjosIPnlKhcbiAgICAgICAgd2hpbGUodGhpcy5zdWNjZXNzQ2FsbGJhY2subGVuZ3RoKSB0aGlzLnN1Y2Nlc3NDYWxsYmFjay5zaGlmdCgpKCk7XG4gICAgfVxuXG4gICAgcmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgICAgICBpZih0aGlzLnN0YXR1cyAhPT0gUEVORElORykgcmV0dXJuO1xuICAgICAgICAvLyDlsIbnirbmgIHmm7TmlLnkuLrlpLHotKVcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBSRUpFQ1RFRDtcbiAgICAgICAgdGhpcy5yZWFzb24gPSByZWFzb247XG4gICAgICAgIC8vIOWIpOaWreWksei0peWbnuiwg+aYr+WQpuWtmOWcqO+8jOWmguaenOWtmOWcqOiwg+eUqFxuICAgICAgICB3aGlsZSh0aGlzLmZhaWxDYWxsYmFjay5sZW5ndGgpIHRoaXMuZmFpbENhbGxiYWNrLnNoaWZ0KCkoKTtcblxuICAgIH1cblxuICAgIHRoZW4gPSAoc3VjY2Vzc0NhbGxiYWNrLCBmYWlsQ2FsbGJhY2spID0+IHtcbiAgICAgICAgc3VjY2Vzc0NhbGxiYWNrID0gc3VjY2Vzc0NhbGxiYWNrIHx8ICh2YWx1ZSA9PiB2YWx1ZSk7XG4gICAgICAgIGZhaWxDYWxsYmFjayA9IGZhaWxDYWxsYmFjayB8fCAocmVhc29uID0+IHt0aHJvdyByZWFzb259KTtcblxuICAgICAgICBsZXQgcHJvbWlzZTIgPSBuZXcgTXlQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIC8vIOWIpOaWreeKtuaAgVxuICAgICAgICAgICAgaWYodGhpcy5zdGF0dXMgPT09IEZVTEZJTExFRCkge1xuICAgICAgICAgICAgICAgIC8vIOWPmOaIkOW8guatpeS7o+egge+8jOetiXByb21pc2Uy5Li75rWB56iL5omn6KGM5a6M5ZCO5YaN6LCD55So77yM5Y+v6I635Y+WcHJvbWlzZTJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB4ID0gc3VjY2Vzc0NhbGxiYWNrKHRoaXMudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yik5pateOeahOWAvOaYr+aZrumAmuWAvOi/mOaYr3Byb21pc2Xlr7nosaFcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+aZrumAmuWAvCDnm7TmjqXosIPnlKhyZXNvbHZlXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK9wcm9taXNl5a+56LGhIOafpeeci3Byb21pc2Xlr7nosaHnmoTov5Tlm57nu5PmnpxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWGjeagueaNrnByb21pc2Xlr7nosaHnmoTov5Tlm57mja7nu5PmnpzlhrPlrprosIPnlKhyZXNvbHZl6L+Y5piv6LCD55SocmVqZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlUHJvbWlzZShwcm9taXNlMiwgeCwgcmVzb2x2ZSwgcmVqZWN0KVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSwgMCk7XG5cbiAgICAgICAgICAgIH0gZWxzZSBpZih0aGlzLnN0YXR1cyA9PT0gUkVKRUNURUQpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB4ID0gZmFpbENhbGxiYWNrKHRoaXMucmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWIpOaWrXjnmoTlgLzmmK/mma7pgJrlgLzov5jmmK9wcm9taXNl5a+56LGhXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/mma7pgJrlgLwg55u05o6l6LCD55SocmVzb2x2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5pivcHJvbWlzZeWvueixoSDmn6XnnItwcm9taXNl5a+56LGh55qE6L+U5Zue57uT5p6cXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlho3moLnmja5wcm9taXNl5a+56LGh55qE6L+U5Zue5o2u57uT5p6c5Yaz5a6a6LCD55SocmVzb2x2Zei/mOaYr+iwg+eUqHJlamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZVByb21pc2UocHJvbWlzZTIsIHgsIHJlc29sdmUsIHJlamVjdClcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGUpXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH0sIDApO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIOetieW+hVxuICAgICAgICAgICAgICAgIC8vIOWwhuaIkOWKn+Wbnuiwg+WSjOWksei0peWbnuiwg+WtmOWCqOi1t+adpVxuICAgICAgICAgICAgICAgIHRoaXMuc3VjY2Vzc0NhbGxiYWNrLnB1c2goKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHggPSBzdWNjZXNzQ2FsbGJhY2sodGhpcy52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yik5pateOeahOWAvOaYr+aZrumAmuWAvOi/mOaYr3Byb21pc2Xlr7nosaFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/mma7pgJrlgLwg55u05o6l6LCD55SocmVzb2x2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr3Byb21pc2Xlr7nosaEg5p+l55yLcHJvbWlzZeWvueixoeeahOi/lOWbnue7k+aenFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWGjeagueaNrnByb21pc2Xlr7nosaHnmoTov5Tlm57mja7nu5PmnpzlhrPlrprosIPnlKhyZXNvbHZl6L+Y5piv6LCD55SocmVqZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZVByb21pc2UocHJvbWlzZTIsIHgsIHJlc29sdmUsIHJlamVjdClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLmZhaWxDYWxsYmFjay5wdXNoKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB4ID0gZmFpbENhbGxiYWNrKHRoaXMucmVhc29uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDliKTmlq1455qE5YC85piv5pmu6YCa5YC86L+Y5pivcHJvbWlzZeWvueixoVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+aZrumAmuWAvCDnm7TmjqXosIPnlKhyZXNvbHZlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5pivcHJvbWlzZeWvueixoSDmn6XnnItwcm9taXNl5a+56LGh55qE6L+U5Zue57uT5p6cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5YaN5qC55o2ucHJvbWlzZeWvueixoeeahOi/lOWbnuaNrue7k+aenOWGs+Wumuiwg+eUqHJlc29sdmXov5jmmK/osIPnlKhyZWplY3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlUHJvbWlzZShwcm9taXNlMiwgeCwgcmVzb2x2ZSwgcmVqZWN0KVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBwcm9taXNlMjtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVQcm9taXNlKHByb21pc2UyLCB4LCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAvLyDlvZNwcm9taXNlLnRoZW4g6L+U5Zue5ZKM6Ieq6Lqr55u45ZCMcHJvbWlzZeaKpemUmVxuICAgIGlmKHByb21pc2UyID09PSB4KSB7XG4gICAgICAgIHJldHVybiByZWplY3QobmV3IFR5cGVFcnJvcignQ2hhaW5pbmcgY3ljbGUgZGV0ZWN0ZWQgZm9yIHByb21pc2UgIzxQcm9taXNlPicpKVxuICAgIH1cblxuICAgIGlmKHggaW5zdGFuY2VvZiBNeVByb21pc2UpIHtcbiAgICAgICAgeC50aGVuKHJlc29sdmUsIHJlamVjdClcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyDmma7pgJrlgLxcbiAgICAgICAgcmVzb2x2ZSh4KVxuICAgIH1cbn1cbiIpXSldKV0pLF9jKCdoMicse2F0dHJzOnsiaWQiOiLmt7vliqDmlrnms5Ut5a6M5ZaELXByb21pc2Ut5Yqf6IO9In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIj5re75Yqg5pa55rOVLeWujOWWhC1wcm9taXNlLeWKn+iDvSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiDmt7vliqDmlrnms5XvvIzlrozlloQgcHJvbWlzZSDlip/og70iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCLnu5kgTXlQcm9taXNlIOexu+a3u+WKoCIpLF9jKCdjb2RlJyxbX3ZtLl92KCJhbGwiKV0pLF92bS5fdigi5ZKMIiksX2MoJ2NvZGUnLFtfdm0uX3YoInJlc29sdmUiKV0pLF92bS5fdigi6Z2Z5oCB5pa55rOV77yM5ZKMIiksX2MoJ2NvZGUnLFtfdm0uX3YoImNhdGNoIildKSxfdm0uX3YoIuWSjCIpLF9jKCdjb2RlJyxbX3ZtLl92KCJmaW5hbGx5IildKSxfdm0uX3YoIuaWueazle+8jOWujOWWhCBwcm9taXNlIOWKn+iDve+8jOS9v+WFtuabtOaOpei/keecn+WunueahCBQcm9taXNlIOexu++8jOi/meagt+aIkeS7rOiHquW3sSBQcm9taXNlIOexu+WwseWkp+WKn+WRiuaIkOS6hiIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJsYW5ndWFnZS0gZXh0cmEtY2xhc3MifSxbX2MoJ3ByZScse3ByZTp0cnVlLGF0dHJzOnsiY2xhc3MiOiJsYW5ndWFnZS10ZXh0In19LFtfYygnY29kZScsW192bS5fdigiY29uc3QgUEVORElORyA9ICdwZW5kaW5nJzsgLy8g562J5b6FXG5jb25zdCBGVUxGSUxMRUQgPSAnZnVsbGlsbGVkJyAvLyDmiJDlip9cbmNvbnN0IFJFSkVDVEVEID0gJ3JlamVjdGVkJyAvLyDlpLHotKVcblxuY2xhc3MgTXlQcm9taXNlIHtcbiAgICBjb25zdHJ1Y3RvcihleGVjdXRvcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZXhlY3V0b3IodGhpcy5yZXNvbHZlLCB0aGlzLnJlamVjdClcbiAgICAgICAgfSBjYXRjaChlKSB7XG4gICAgICAgICAgICB0aGlzLnJlamVjdChlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcHJvbWlzZSDnirbmgIFcbiAgICBzdGF0dXMgPSBQRU5ESU5HO1xuICAgIC8vIOaIkOWKn+S5i+WQjueahOWAvFxuICAgIHZhbHVlID0gdW5kZWZpbmVkO1xuICAgIC8vIOWksei0peS5i+WQjueahOWAvFxuICAgIHJlYXNvbiA9IHVuZGVmaW5lZFxuICAgIC8vIOaIkOWKn+Wbnuiwg1xuICAgIHN1Y2Nlc3NDYWxsYmFjayA9IFtdO1xuICAgIC8vIOWksei0peWbnuiwg1xuICAgIGZhaWxDYWxsYmFjayA9IFtdO1xuXG4gICAgcmVzb2x2ZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZih0aGlzLnN0YXR1cyAhPT0gUEVORElORykgcmV0dXJuO1xuICAgICAgICAvLyDlsIbnirbmgIHmm7TmlLnkuLrmiJDlip9cbiAgICAgICAgdGhpcy5zdGF0dXMgPSBGVUxGSUxMRUQ7XG4gICAgICAgIC8vIOS/neWtmOaIkOWKn+S5i+WQjueahOWAvFxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICAgICAgLy8g5Yik5pat5oiQ5Yqf5Zue6LCD5piv5ZCm5a2Y5Zyo77yM5aaC5p6c5a2Y5Zyo6LCD55SoXG4gICAgICAgIHdoaWxlKHRoaXMuc3VjY2Vzc0NhbGxiYWNrLmxlbmd0aCkgdGhpcy5zdWNjZXNzQ2FsbGJhY2suc2hpZnQoKSgpO1xuICAgIH1cblxuICAgIHJlamVjdCA9IChyZWFzb24pID0+IHtcbiAgICAgICAgaWYodGhpcy5zdGF0dXMgIT09IFBFTkRJTkcpIHJldHVybjtcbiAgICAgICAgLy8g5bCG54q25oCB5pu05pS55Li65aSx6LSlXG4gICAgICAgIHRoaXMuc3RhdHVzID0gUkVKRUNURUQ7XG4gICAgICAgIHRoaXMucmVhc29uID0gcmVhc29uO1xuICAgICAgICAvLyDliKTmlq3lpLHotKXlm57osIPmmK/lkKblrZjlnKjvvIzlpoLmnpzlrZjlnKjosIPnlKhcbiAgICAgICAgd2hpbGUodGhpcy5mYWlsQ2FsbGJhY2subGVuZ3RoKSB0aGlzLmZhaWxDYWxsYmFjay5zaGlmdCgpKCk7XG5cbiAgICB9XG5cbiAgICB0aGVuID0gKHN1Y2Nlc3NDYWxsYmFjaywgZmFpbENhbGxiYWNrKSA9PiB7XG4gICAgICAgIHN1Y2Nlc3NDYWxsYmFjayA9IHN1Y2Nlc3NDYWxsYmFjayB8fCAodmFsdWUgPT4gdmFsdWUpO1xuICAgICAgICBmYWlsQ2FsbGJhY2sgPSBmYWlsQ2FsbGJhY2sgfHwgKHJlYXNvbiA9PiB7dGhyb3cgcmVhc29ufSk7XG5cbiAgICAgICAgbGV0IHByb21pc2UyID0gbmV3IE15UHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAvLyDliKTmlq3nirbmgIFcbiAgICAgICAgICAgIGlmKHRoaXMuc3RhdHVzID09PSBGVUxGSUxMRUQpIHtcbiAgICAgICAgICAgICAgICAvLyDlj5jmiJDlvILmraXku6PnoIHvvIznrYlwcm9taXNlMuS4u+a1geeoi+aJp+ihjOWujOWQjuWGjeiwg+eUqO+8jOWPr+iOt+WPlnByb21pc2UyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgeCA9IHN1Y2Nlc3NDYWxsYmFjayh0aGlzLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWIpOaWrXjnmoTlgLzmmK/mma7pgJrlgLzov5jmmK9wcm9taXNl5a+56LGhXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/mma7pgJrlgLwg55u05o6l6LCD55SocmVzb2x2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5pivcHJvbWlzZeWvueixoSDmn6XnnItwcm9taXNl5a+56LGh55qE6L+U5Zue57uT5p6cXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlho3moLnmja5wcm9taXNl5a+56LGh55qE6L+U5Zue5o2u57uT5p6c5Yaz5a6a6LCD55SocmVzb2x2Zei/mOaYr+iwg+eUqHJlamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZVByb21pc2UocHJvbWlzZTIsIHgsIHJlc29sdmUsIHJlamVjdClcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGUpXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH0sIDApO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYodGhpcy5zdGF0dXMgPT09IFJFSkVDVEVEKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgeCA9IGZhaWxDYWxsYmFjayh0aGlzLnJlYXNvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDliKTmlq1455qE5YC85piv5pmu6YCa5YC86L+Y5pivcHJvbWlzZeWvueixoVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5pmu6YCa5YC8IOebtOaOpeiwg+eUqHJlc29sdmVcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr3Byb21pc2Xlr7nosaEg5p+l55yLcHJvbWlzZeWvueixoeeahOi/lOWbnue7k+aenFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5YaN5qC55o2ucHJvbWlzZeWvueixoeeahOi/lOWbnuaNrue7k+aenOWGs+Wumuiwg+eUqHJlc29sdmXov5jmmK/osIPnlKhyZWplY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVQcm9taXNlKHByb21pc2UyLCB4LCByZXNvbHZlLCByZWplY3QpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlKVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9LCAwKTtcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyDnrYnlvoVcbiAgICAgICAgICAgICAgICAvLyDlsIbmiJDlip/lm57osIPlkozlpLHotKXlm57osIPlrZjlgqjotbfmnaVcbiAgICAgICAgICAgICAgICB0aGlzLnN1Y2Nlc3NDYWxsYmFjay5wdXNoKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB4ID0gc3VjY2Vzc0NhbGxiYWNrKHRoaXMudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWIpOaWrXjnmoTlgLzmmK/mma7pgJrlgLzov5jmmK9wcm9taXNl5a+56LGhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5pmu6YCa5YC8IOebtOaOpeiwg+eUqHJlc29sdmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK9wcm9taXNl5a+56LGhIOafpeeci3Byb21pc2Xlr7nosaHnmoTov5Tlm57nu5PmnpxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlho3moLnmja5wcm9taXNl5a+56LGh55qE6L+U5Zue5o2u57uT5p6c5Yaz5a6a6LCD55SocmVzb2x2Zei/mOaYr+iwg+eUqHJlamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVQcm9taXNlKHByb21pc2UyLCB4LCByZXNvbHZlLCByZWplY3QpXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGUpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5mYWlsQ2FsbGJhY2sucHVzaCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgeCA9IGZhaWxDYWxsYmFjayh0aGlzLnJlYXNvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yik5pateOeahOWAvOaYr+aZrumAmuWAvOi/mOaYr3Byb21pc2Xlr7nosaFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/mma7pgJrlgLwg55u05o6l6LCD55SocmVzb2x2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr3Byb21pc2Xlr7nosaEg5p+l55yLcHJvbWlzZeWvueixoeeahOi/lOWbnue7k+aenFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWGjeagueaNrnByb21pc2Xlr7nosaHnmoTov5Tlm57mja7nu5PmnpzlhrPlrprosIPnlKhyZXNvbHZl6L+Y5piv6LCD55SocmVqZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZVByb21pc2UocHJvbWlzZTIsIHgsIHJlc29sdmUsIHJlamVjdClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gcHJvbWlzZTI7XG4gICAgfVxuICAgIC8vIOaXoOiuuue7k+aenOi/lOWbnuaIkOWKn+i/mOaYr+Wksei0pemDveimgeiwg+eUqOS4gOasoVxuICAgIGZpbmFsbHkoY2FsbGJhY2spIHtcbiAgICAgICAgLy8g6YCa6L+HdGhlbuaWueazleW+l+WIsOW9k+WJjXByb21pc2XnmoTnirbmgIFcbiAgICAgICAgcmV0dXJuIHRoaXMudGhlbih2YWx1ZSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gTXlQcm9taXNlLnJlc29sdmUoY2FsbGJhY2soKSkudGhlbigoKSA9PiB2YWx1ZSlcbiAgICAgICAgfSwgcmVhc29uID0+IHtcbiAgICAgICAgICAgIHJldHVybiBNeVByb21pc2UucmVzb2x2ZShjYWxsYmFjaygpKS50aGVuKCgpID0+IHt0aHJvdyByZWFzb259KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNhdGNoKGZhaWxDYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgZmFpbENhbGxiYWNrKVxuICAgIH1cblxuICAgIHN0YXRpYyBhbGwoYXJyYXkpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICBsZXQgaW5kZXggPSAwXG5cbiAgICAgICAgcmV0dXJuIG5ldyBNeVByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgZnVuY3Rpb24gYWRkRGF0YShrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZVxuICAgICAgICAgICAgICAgIGluZGV4KytcbiAgICAgICAgICAgICAgICBpZihpbmRleCA9PT0gYXJyYXkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGxldCBjdXJyZW50ID0gYXJyYXlbaV07XG4gICAgICAgICAgICAgICAgaWYoY3VycmVudCBpbnN0YW5jZW9mIE15UHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBwcm9taXNl5a+56LGhXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnQudGhlbih2YWx1ZSA9PiBhZGREYXRhKGksIHZhbHVlKSwgcmVhc29uID0+IHJlamVjdChyZWFzb24pKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIOaZrumAmuWAvFxuICAgICAgICAgICAgICAgICAgICBhZGREYXRhKGksIGFycmF5W2ldKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBzdGF0aWMgcmVzb2x2ZSh2YWx1ZSkge1xuICAgICAgICBpZih2YWx1ZSBpbnN0YW5jZW9mIE15UHJvbWlzZSkgcmV0dXJuIHZhbHVlO1xuICAgICAgICByZXR1cm4gbmV3IE15UHJvbWlzZShyZXNvbHZlID0+IHJlc29sdmUodmFsdWUpKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVByb21pc2UocHJvbWlzZTIsIHgsIHJlc29sdmUsIHJlamVjdCkge1xuICAgIC8vIOW9k3Byb21pc2UudGhlbiDov5Tlm57lkozoh6rouqvnm7jlkIxwcm9taXNl5oql6ZSZXG4gICAgaWYocHJvbWlzZTIgPT09IHgpIHtcbiAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgVHlwZUVycm9yKCdDaGFpbmluZyBjeWNsZSBkZXRlY3RlZCBmb3IgcHJvbWlzZSAjPFByb21pc2U+JykpXG4gICAgfVxuICAgIGlmKHggaW5zdGFuY2VvZiBNeVByb21pc2UpIHtcbiAgICAgICAgeC50aGVuKHJlc29sdmUsIHJlamVjdClcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyDmma7pgJrlgLxcbiAgICAgICAgcmVzb2x2ZSh4KVxuICAgIH1cbn1cblxuIildKV0pXSldKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}